local lIli1li11ll11lii1I1l1 = assert local lililiI11I11Iill1lI = select local l1IIl1IIl1I1I1IIii1 = tonumber local ilI111I1lilIllII1II = unpack local IlII1llliiIIliiiIIi = pcall local IlI11illiI11IliII1l = setfenv local l111Iii1l1Ii11I1I1l = setmetatable local lIll11l1liliI1iiiI1i1 = type local lIlIIili11IIlII1i1iIl = getfenv local l1I1I1iil11l1ii1Ill = tostring local lI1111llIIIIIll1il1 = error local lIllil111I1I11l1111II = string.sub local liilIIlI1iIl1IiIiii = string.byte local I1ill1lllIl1IIIiIiI = string.char local lIl1I1IiliI1llilIliII = string.rep local liiiIIiIlll1il1l11I = string.gsub local lll1iliIiIliIIl1iI1 = string.match local lIlli11iiIiIiIiiIII11 = table.insert local lIliI1iIiI1lIli1IIllI = liilIIlI1iIl1IiIiii("H", 1) local i111lii1liI1Iiili1i, IiIiiii11IllIIIlll1 = #{1629}, #{ 200, 1094, 1288, 4787, 256, 4942, 6187, 1304, 5793, 543, 6476, 3629, 6551, 4767, 6135, 4866, 2229, 3400, 3182, 2104, 1876, 830, 4811, 1451 } + lIliI1iIiI1lIli1IIllI + 130975 local lIliil1li1lii1i1i1Iil = {} local i1I1I11iI1I1II1I1l1 = 1 local lIl1Ii1IIIiIill1IiIl1, ll1iiiiIiliIIIl1Ii1 local function llliIllI111lIilli11(lIIill1ii1l1i1lIlIl, lIlIll1I1IIiiIIIIl1ll) local lIIil11Ill1IlIiIiII lIIill1ii1l1i1lIlIl = liiiIIiIlll1il1l11I(lIllil111I1I11l1111II(lIIill1ii1l1i1lIlIl, 5), "..", function(lIl11IlIIi1l1ll1liIII) if liilIIlI1iIl1IiIiii(lIl11IlIIi1l1ll1liIII, 2) == 72 then lIIil11Ill1IlIiIiII = l1IIl1IIl1I1I1IIii1(lIllil111I1I11l1111II(lIl11IlIIi1l1ll1liIII, 1, 1)) return "" else local l1iIlilil11lliIllll = I1ill1lllIl1IIIiIiI(l1IIl1IIl1I1I1IIii1(lIl11IlIIi1l1ll1liIII, 16)) if lIIil11Ill1IlIiIiII then local lIllIli1I1i1i1Ilil1iI = lIl1I1IiliI1llilIliII(l1iIlilil11lliIllll, lIIil11Ill1IlIiIiII) lIIil11Ill1IlIiIiII = nil return lIllIli1I1i1i1Ilil1iI else return l1iIlilil11lliIllll end end end) local function lll1l1I11iiIl1l1iii() local ii1Iiil1iliIlIlI1li = liilIIlI1iIl1IiIiii(lIIill1ii1l1i1lIlIl, i1I1I11iI1I1II1I1l1, i1I1I11iI1I1II1I1l1) i1I1I11iI1I1II1I1l1 = i1I1I11iI1I1II1I1l1 + 1 return ii1Iiil1iliIlIlI1li end local function l1ilI1lil1li1lllIlI() local ii1Iiil1iliIlIlI1li, l1iIlilil11lliIllll, lIllIli1I1i1i1Ilil1iI, IiII1IlIlI1iIili1II = liilIIlI1iIl1IiIiii(lIIill1ii1l1i1lIlIl, i1I1I11iI1I1II1I1l1, i1I1I11iI1I1II1I1l1 + 3) i1I1I11iI1I1II1I1l1 = i1I1I11iI1I1II1I1l1 + 4 return IiII1IlIlI1iIili1II * 16777216 + lIllIli1I1i1i1Ilil1iI * 65536 + l1iIlilil11lliIllll * 256 + ii1Iiil1iliIlIlI1li end local function lIliI1iilI11iiIl1l1Ii(illiI1Iill11IIIlIll, I1i1lliIliil1l1lIil, lIll1lliiiIi1iIIiIiII) if lIll1lliiiIi1iIIiIiII then local i1lIIli1iI11iIIllil, ll1IIIlilIlIilIlIl1 = 0, 0 for lIlIlIiiIl1li1liIIiIi = I1i1lliIliil1l1lIil, lIll1lliiiIi1iIIiIiII do i1lIIli1iI11iIIllil = i1lIIli1iI11iIIllil + 2 ^ ll1IIIlilIlIilIlIl1 * lIliI1iilI11iiIl1l1Ii(illiI1Iill11IIIlIll, lIlIlIiiIl1li1liIIiIi) ll1IIIlilIlIilIlIl1 = ll1IIIlilIlIilIlIl1 + 1 end return i1lIIli1iI11iIIllil else local llilil11IIliIIIIill = 2 ^ (I1i1lliIliil1l1lIil - 1) return llilil11IIliIIIIill <= illiI1Iill11IIIlIll % (llilil11IIliIIIIill + llilil11IIliIIIIill) and 1 or 0 end end local function iilI11l1ili1iI11liI() local ii1Iiil1iliIlIlI1li, l1iIlilil11lliIllll = l1ilI1lil1li1lllIlI(), l1ilI1lil1li1lllIlI() if ii1Iiil1iliIlIlI1li == 0 and l1iIlilil11lliIllll == 0 then return 0 end return (-2 * lIliI1iilI11iiIl1l1Ii(l1iIlilil11lliIllll, 32) + 1) * 2 ^ (lIliI1iilI11iiIl1l1Ii(l1iIlilil11lliIllll, 21, 31) - 1023) * ((lIliI1iilI11iiIl1l1Ii(l1iIlilil11lliIllll, 1, 20) * 4294967296 + ii1Iiil1iliIlIlI1li) / 4503599627370496 + 1) end local l1ililiiillilI1IIll = bit or bit32 local lIli1iIIIIIililiIli11 = l1ililiiillilI1IIll and l1ililiiillilI1IIll.bxor or function(ii1Iiil1iliIlIlI1li, l1iIlilil11lliIllll) local llllIIlIiIIlilIiII1 = 1 local lIllIli1I1i1i1Ilil1iI = 0 while ii1Iiil1iliIlIlI1li > 0 and l1iIlilil11lliIllll > 0 do local lIll1lli1ilI1Iil1Ii11 = ii1Iiil1iliIlIlI1li % 2 local lIli1111lIlil1I11IIIi = l1iIlilil11lliIllll % 2 if lIll1lli1ilI1Iil1Ii11 ~= lIli1111lIlil1I11IIIi then lIllIli1I1i1i1Ilil1iI = lIllIli1I1i1i1Ilil1iI + llllIIlIiIIlilIiII1 end ii1Iiil1iliIlIlI1li = (ii1Iiil1iliIlIlI1li - lIll1lli1ilI1Iil1Ii11) / 2 l1iIlilil11lliIllll = (l1iIlilil11lliIllll - lIli1111lIlil1I11IIIi) / 2 llllIIlIiIIlilIiII1 = llllIIlIiIIlilIiII1 * 2 end if ii1Iiil1iliIlIlI1li < l1iIlilil11lliIllll then ii1Iiil1iliIlIlI1li = l1iIlilil11lliIllll end while ii1Iiil1iliIlIlI1li > 0 do local lIll1lli1ilI1Iil1Ii11 = ii1Iiil1iliIlIlI1li % 2 if lIll1lli1ilI1Iil1Ii11 > 0 then lIllIli1I1i1i1Ilil1iI = lIllIli1I1i1i1Ilil1iI + llllIIlIiIIlilIiII1 end ii1Iiil1iliIlIlI1li = (ii1Iiil1iliIlIlI1li - lIll1lli1ilI1Iil1Ii11) / 2 llllIIlIiIIlilIiII1 = llllIIlIiIIlilIiII1 * 2 end return lIllIli1I1i1i1Ilil1iI end local function lIliliIl1l1Iii1i1iIIl(l1i11iliIll1l1ilill) local iIIi1ii1IIIIi1illli = { liilIIlI1iIl1IiIiii(lIIill1ii1l1i1lIlIl, i1I1I11iI1I1II1I1l1, i1I1I11iI1I1II1I1l1 + 3) } i1I1I11iI1I1II1I1l1 = i1I1I11iI1I1II1I1l1 + 4 local ii1Iiil1iliIlIlI1li = lIli1iIIIIIililiIli11(iIIi1ii1IIIIi1illli[1], ll1iiiiIiliIIIl1Ii1) local l1iIlilil11lliIllll = lIli1iIIIIIililiIli11(iIIi1ii1IIIIi1illli[2], ll1iiiiIiliIIIl1Ii1) local lIllIli1I1i1i1Ilil1iI = lIli1iIIIIIililiIli11(iIIi1ii1IIIIi1illli[3], ll1iiiiIiliIIIl1Ii1) local IiII1IlIlI1iIili1II = lIli1iIIIIIililiIli11(iIIi1ii1IIIIi1illli[4], ll1iiiiIiliIIIl1Ii1) ll1iiiiIiliIIIl1Ii1 = (97 * ll1iiiiIiliIIIl1Ii1 + l1i11iliIll1l1ilill) % 256 return IiII1IlIlI1iIili1II * 16777216 + lIllIli1I1i1i1Ilil1iI * 65536 + l1iIlilil11lliIllll * 256 + ii1Iiil1iliIlIlI1li end local function ii11iii1lI1I1iI11II(iIi1II11iiiI1ilIilI) local li1Ili1liIliiI1lI11 = l1ilI1lil1li1lllIlI() local lIlIliili1i1IIl1ll1Il = "" for lIlIlIiiIl1li1liIIiIi = i111lii1liI1Iiili1i, li1Ili1liIliiI1lI11 do lIlIliili1i1IIl1ll1Il = lIlIliili1i1IIl1ll1Il .. I1ill1lllIl1IIIiIiI(lIli1iIIIIIililiIli11(liilIIlI1iIl1IiIiii(lIIill1ii1l1i1lIlIl, i1I1I11iI1I1II1I1l1 + lIlIlIiiIl1li1liIIiIi - 1), lIl1Ii1IIIiIill1IiIl1)) lIl1Ii1IIIiIill1IiIl1 = (iIi1II11iiiI1ilIilI * lIl1Ii1IIIiIill1IiIl1 + 251) % 256 end i1I1I11iI1I1II1I1l1 = i1I1I11iI1I1II1I1l1 + li1Ili1liIliiI1lI11 return lIlIliili1i1IIl1ll1Il end lIl1Ii1IIIiIill1IiIl1 = lll1l1I11iiIl1l1iii() ll1iiiiIiliIIIl1Ii1 = lll1l1I11iiIl1l1iii() local lIl1I1l1lI1l1I1lIiiI1 = {} for lIlIlIiiIl1li1liIIiIi = i111lii1liI1Iiili1i, lll1l1I11iiIl1l1iii() do local IilIiIIi1li11Il111I = lll1l1I11iiIl1l1iii() local lIlIllI1l1lIIllI1l11i = (lIlIlIiiIl1li1liIIiIi - 1) * 2 lIl1I1l1lI1l1I1lIiiI1[lIlIllI1l1lIIllI1l11i] = lIliI1iilI11iiIl1l1Ii(IilIiIIi1li11Il111I, 1, 4) lIl1I1l1lI1l1I1lIiiI1[lIlIllI1l1lIIllI1l11i + 1] = lIliI1iilI11iiIl1l1Ii(IilIiIIi1li11Il111I, 5, 8) end local function lIll1i1iiI11iIIlIl1Ii() local li1I1lililIil11II1l = { {}, {}, {}, nil, {}, nil, nil } lll1l1I11iiIl1l1iii() li1I1lililIil11II1l[7] = lll1l1I11iiIl1l1iii() li1I1lililIil11II1l[4] = lll1l1I11iiIl1l1iii() local liiIliIIIii1iIilil1 = l1ilI1lil1li1lllIlI() - (#{ 6644, 4499, 1488, 2711, 2399, 6930, 4251, 3536, 5476, 1456, 4104, 6352, 201, 6773, 324, 1669, 6468, 5623, 4632, 1009, 6411, 1137, 3873, 5765 } + lIliI1iIiI1lIli1IIllI + 133606) local i1IiIliI1l1iI11I1lI = lll1l1I11iiIl1l1iii() for lIlIlIiiIl1li1liIIiIi = i111lii1liI1Iiili1i, liiIliIIIii1iIilil1 do local i1ilIlII1iI1I1i1iI1 local lIll11l1liliI1iiiI1i1 = lll1l1I11iiIl1l1iii() if lIll11l1liliI1iiiI1i1 == #{ 4568, 5303, 1503, 1398, 6422, 6904, 5609, 4445, 6083, 983, 3602, 5651, 6808, 4209, 4267, 6380, 2879, 3248, 3144, 1723, 5149 } + lIliI1iIiI1lIli1IIllI + -40 then i1ilIlII1iI1I1i1iI1 = #{ 3917, 1226, 1275, 1865, 4447, 5404, 1794, 3645, 6130, 6780, 1629, 2715, 3836, 1154, 5127, 5684, 6404, 6770, 1961, 6841, 1021 } + lIliI1iIiI1lIli1IIllI + 18604 == #{ 3917, 1226, 1275, 1865, 4447, 5404, 1794, 3645, 6130, 6780, 1629, 2715, 3836, 1154, 5127, 5684, 6404, 6770, 1961, 6841, 1021 } + lIliI1iIiI1lIli1IIllI + 18604 end if lIll11l1liliI1iiiI1i1 == #{ 3405, 2837, 530, 2099, 6151, 5259, 5586, 5358, 4960, 93, 672, 2712, 286, 6528, 663, 867, 886, 2152, 5329, 5016, 131, 5110, 5809 } + lIliI1iIiI1lIli1IIllI + -63 then i1ilIlII1iI1I1i1iI1 = l1ilI1lil1li1lllIlI() end if lIll11l1liliI1iiiI1i1 == #{ 6055, 6839, 6256, 321, 3628, 3809, 5737, 2809, 4693, 2972, 5725, 3539, 2956, 395, 1636, 5583, 861, 2641, 5725, 2601 } + lIliI1iIiI1lIli1IIllI + 97 then i1ilIlII1iI1I1i1iI1 = #{ 1859, 2779, 6539, 4436, 1537, 6715, 4218, 2019, 5490, 2261, 4026, 1029, 5117, 3135, 1524, 1115, 309, 4038, 6732, 4408, 6401 } + lIliI1iIiI1lIli1IIllI + 76641 == #{ 3240, 1670, 6892, 1833, 3216, 3955, 1722, 5129, 1771, 5271, 5980, 4253, 3351, 6914, 2301, 5066, 578, 544, 2350, 2504, 5337, 1492 } + lIliI1iIiI1lIli1IIllI + 79933 end if lIll11l1liliI1iiiI1i1 == #{ 5159, 3450, 5126, 4562, 558, 1561, 2572, 776, 1329, 5053, 1760, 5516, 4946, 1929, 6702, 4499, 1641, 2710, 557, 6836, 101 } + lIliI1iIiI1lIli1IIllI + 27 then i1ilIlII1iI1I1i1iI1 = iilI11l1ili1iI11liI() end if lIll11l1liliI1iiiI1i1 == #{ 3584, 3096, 6066, 5811, 3407, 2222, 4948, 788, 5395, 1823, 3443, 5741, 6743, 2112, 4934, 1972, 2255, 5763, 807, 4007, 6299 } + lIliI1iIiI1lIli1IIllI + -32 then i1ilIlII1iI1I1i1iI1 = lll1l1I11iiIl1l1iii() end if lIll11l1liliI1iiiI1i1 == #{ 4206, 5628, 2389, 1330, 6783, 1584, 896, 309, 3982, 5459, 3596, 6859, 34, 87, 4718, 6482, 2521, 5913, 5589, 1788, 3394, 4012, 5217 } + lIliI1iIiI1lIli1IIllI + -7 then i1ilIlII1iI1I1i1iI1 = iilI11l1ili1iI11liI() end if lIll11l1liliI1iiiI1i1 == #{ 1340, 6591, 3317, 5423, 1183, 2417, 3223, 559, 5975, 6199, 1610, 394, 4914, 3785, 6757, 3365, 5239, 4822, 901, 3843, 4224, 2843, 5374 } + lIliI1iIiI1lIli1IIllI + 130 then i1ilIlII1iI1I1i1iI1 = lIllil111I1I11l1111II(ii11iii1lI1I1iI11II(i1IiIliI1l1iI11I1lI), #{ 2061, 1734, 4147 }) end if lIll11l1liliI1iiiI1i1 == #{ 10, 108, 225, 1062, 417, 485, 4581, 6723, 3646, 5939, 3835, 5543, 6366, 4753, 3610, 4667, 5834, 4077, 5429, 5009, 5036 } + lIliI1iIiI1lIli1IIllI + -25 then i1ilIlII1iI1I1i1iI1 = l1ilI1lil1li1lllIlI() end if lIll11l1liliI1iiiI1i1 == #{ 5941, 4603, 2931, 5900, 4732, 383, 4547, 4601, 5450, 4779, 4040, 6095, 6401, 1859, 3418, 6574, 4146, 3640, 2905, 3571, 2848, 6585, 3450, 2565 } + lIliI1iIiI1lIli1IIllI + 2 then i1ilIlII1iI1I1i1iI1 = lll1l1I11iiIl1l1iii() + l1ilI1lil1li1lllIlI() + iilI11l1ili1iI11liI() end li1I1lililIil11II1l[3][lIlIlIiiIl1li1liIIiIi - i111lii1liI1Iiili1i] = i1ilIlII1iI1I1i1iI1 end l1ilI1lil1li1lllIlI() l1ilI1lil1li1lllIlI() lll1l1I11iiIl1l1iii() local liiIliIIIii1iIilil1 = l1ilI1lil1li1lllIlI() for lIlIlIiiIl1li1liIIiIi = i111lii1liI1Iiili1i, liiIliIIIii1iIilil1 do li1I1lililIil11II1l[1][lIlIlIiiIl1li1liIIiIi] = l1ilI1lil1li1lllIlI() end lll1l1I11iiIl1l1iii() l1ilI1lil1li1lllIlI() l1ilI1lil1li1lllIlI() local i1iiiII1l1l11111l1i = l1ilI1lil1li1lllIlI() - (#{ 6024, 5246, 414, 6045, 3957, 2953, 3753, 4101, 4344, 6269, 4902, 6312, 4970, 6711, 3484, 1487, 2027, 3464, 4506, 6432, 3948, 2396 } + lIliI1iIiI1lIli1IIllI + 133630) local lIlI11liI1llllIIIlIll = lll1l1I11iiIl1l1iii() for lIlIlIiiIl1li1liIIiIi = i111lii1liI1Iiili1i, i1iiiII1l1l11111l1i do local lilliIi1II1Ili1iiIl = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local IilIiIIi1li11Il111I = lIliliIl1l1Iii1i1iIIl(lIlI11liI1llllIIIlIll) lilliIi1II1Ili1iiIl[17021] = lIliI1iilI11iiIl1l1Ii(IilIiIIi1li11Il111I, #{3920}, #{ 936, 1896, 1609, 4932, 2218, 2621, 2666, 4390, 5098, 2363, 2740, 4946, 5521, 6125, 2668, 2624, 231, 2446 }) lilliIi1II1Ili1iiIl[104041] = lIliI1iilI11iiIl1l1Ii(IilIiIIi1li11Il111I, #{ 4486, 2141, 3721, 1148, 5570, 4109, 3023, 2871, 1344, 5865, 925, 2761, 1642, 6255, 1107, 722, 5118, 1689, 5858 }, #{ 736, 5332, 3470, 6874, 6916, 2257, 4878, 3858, 6124, 411, 5669, 3982, 4817, 4421, 2404, 3626, 682, 1096, 4488, 5738, 6900, 1157 } + lIliI1iIiI1lIli1IIllI + -68) lilliIi1II1Ili1iiIl[9] = lIliI1iilI11iiIl1l1Ii(IilIiIIi1li11Il111I, #{5062}, #{ 3353, 6553, 3681, 2951, 3053, 4898, 6891, 3345, 3181, 1058, 1818, 4383, 4202, 2020, 6623, 4934, 4805, 5566 }) lilliIi1II1Ili1iiIl[3] = lIliI1iilI11iiIl1l1Ii(IilIiIIi1li11Il111I, #{ 4408, 5576, 1818, 5431, 6536, 5516, 6738, 2594, 268, 3456 }, #{ 883, 3226, 3157, 1659, 232, 310, 5752, 1937, 45, 4393, 3512, 3908, 416, 1636, 3371, 2499, 3908, 6067 }) lilliIi1II1Ili1iiIl[7] = lIliI1iilI11iiIl1l1Ii(IilIiIIi1li11Il111I, #{ 492, 722, 5394, 4774, 3913, 983, 372, 5487, 1602, 2985, 6026, 1065, 1921, 1819, 6242, 2560, 894, 3704, 1306 }, #{ 1132, 5465, 2074, 1324, 6905, 5152, 2697, 1042, 6326, 4006, 4919, 1204, 2307, 3785, 128, 6653, 2114, 1890, 1723, 205, 3153, 5727, 4051 } + lIliI1iIiI1lIli1IIllI + -69) lilliIi1II1Ili1iiIl[10] = lIliI1iilI11iiIl1l1Ii(IilIiIIi1li11Il111I, #{ 875, 5425, 2713, 1575, 742, 4081, 2917, 4738, 6824, 1733, 1536, 1079, 948, 8, 2752, 4307, 521, 785, 380, 3599, 2905 } + lIliI1iIiI1lIli1IIllI + -66, #{ 5439, 1249, 5914, 5661, 1773, 3702, 1429, 6207, 2570, 3400, 6042, 4869, 6834, 3834, 5856, 4465, 4244, 4730, 4963, 6350, 5770, 6169, 4673 } + lIliI1iIiI1lIli1IIllI + -63) lilliIi1II1Ili1iiIl[1] = lIliI1iilI11iiIl1l1Ii(IilIiIIi1li11Il111I, #{5775}, #{ 4595, 3042, 3740, 1727, 2988, 6236, 55, 5109, 1765 }) lilliIi1II1Ili1iiIl[21218] = lIliI1iilI11iiIl1l1Ii(IilIiIIi1li11Il111I, #{ 4486, 2141, 3721, 1148, 5570, 4109, 3023, 2871, 1344, 5865, 925, 2761, 1642, 6255, 1107, 722, 5118, 1689, 5858 }, #{ 736, 5332, 3470, 6874, 6916, 2257, 4878, 3858, 6124, 411, 5669, 3982, 4817, 4421, 2404, 3626, 682, 1096, 4488, 5738, 6900, 1157 } + lIliI1iIiI1lIli1IIllI + -68) li1I1lililIil11II1l[2][lIlIlIiiIl1li1liIIiIi] = lilliIi1II1Ili1iiIl end for lIlIlIiiIl1li1liIIiIi = i111lii1liI1Iiili1i, i1iiiII1l1l11111l1i do local lilliIi1II1Ili1iiIl = li1I1lililIil11II1l[2][lIlIlIiiIl1li1liIIiIi] local lIlIliliIl1lII1IIii1l = lIl1I1l1lI1l1I1lIiiI1[lilliIi1II1Ili1iiIl[10]] if lIlIliliIl1lII1IIii1l == #{ 5181, 3462, 5612 } then if lilliIi1II1Ili1iiIl[1] > 255 then lilliIi1II1Ili1iiIl[6] = true lilliIi1II1Ili1iiIl[4] = li1I1lililIil11II1l[3][lilliIi1II1Ili1iiIl[1] - 256] end if lilliIi1II1Ili1iiIl[3] > 255 then lilliIi1II1Ili1iiIl[8] = true lilliIi1II1Ili1iiIl[5] = li1I1lililIil11II1l[3][lilliIi1II1Ili1iiIl[3] - 256] end end if lIlIliliIl1lII1IIii1l == #{5920, 2023} and lilliIi1II1Ili1iiIl[3] > 255 then lilliIi1II1Ili1iiIl[8] = true lilliIi1II1Ili1iiIl[5] = li1I1lililIil11II1l[3][lilliIi1II1Ili1iiIl[3] - 256] end if lIlIliliIl1lII1IIii1l == #{6598} and lilliIi1II1Ili1iiIl[1] > 255 then lilliIi1II1Ili1iiIl[6] = true lilliIi1II1Ili1iiIl[4] = li1I1lililIil11II1l[3][lilliIi1II1Ili1iiIl[1] - 256] end if lIlIliliIl1lII1IIii1l == #{ 3297, 1850, 2006, 5063 } then lilliIi1II1Ili1iiIl[2] = li1I1lililIil11II1l[3][lilliIi1II1Ili1iiIl[9]] end end li1I1lililIil11II1l[6] = lll1l1I11iiIl1l1iii() local liiIliIIIii1iIilil1 = l1ilI1lil1li1lllIlI() for lIlIlIiiIl1li1liIIiIi = i111lii1liI1Iiili1i, liiIliIIIii1iIilil1 do li1I1lililIil11II1l[5][lIlIlIiiIl1li1liIIiIi - i111lii1liI1Iiili1i] = lIll1i1iiI11iIIlIl1Ii() end lll1l1I11iiIl1l1iii() return li1I1lililIil11II1l end local function i1lIlll11iIli1l1Ii1(li1I1lililIil11II1l, lIlIll1I1IIiiIIIIl1ll, III1IIIIllI1iIIIIIl) local iI11lllliil1ll11liI, lIlll1lIiilIlIlliillI = 17, 20 local lIlI1lIIlllilIlIIiIil = li1I1lililIil11II1l[2] local I1IIII11llil1I1II1I = 6 local Iliii1iIlI1I1IlIiIl = li1I1lililIil11II1l[5] local iii1iiIl1l1I1lll11i = li1I1lililIil11II1l[7] local lil1i1lIIIi1iil111l = li1I1lililIil11II1l[4] local i1ilIl11IiilI11iili = 10 local IlIiIiI1llI1l1i1iII = li1I1lililIil11II1l[1] local lIl1111II1IiIi1l1I11I = 1 local function IIliiIlIlI1Ii1iIIii(...) local IIIII1il1lI1iIi1l1i = 0 local illi1iIli1llilI11II = { ilI111I1lilIllII1II({}, 1, lil1i1lIIIi1iil111l) } local liilIiiilIIII1I1l1I = 1 local IliIIIl1l1i1IIillil = {} local iIlll1IlilIilII1lii = {} local lIlIll1I1IIiiIIIIl1ll = lIlIIili11IIlII1i1iIl() local lI1iiliilII1lIi11i1 = { ... } local l1Illli1Ill1lIil1li = #lI1iiliilII1lIi11i1 - 1 for lIlIlIiiIl1li1liIIiIi = 0, l1Illli1Ill1lIil1li do if lIlIlIiiIl1li1liIIiIi < iii1iiIl1l1I1lll11i then illi1iIli1llilI11II[lIlIlIiiIl1li1liIIiIi] = lI1iiliilII1lIi11i1[lIlIlIiiIl1li1liIIiIi + 1] end end local function lIlllillIilIllIliIl11(...) local lIllIli1I1i1i1Ilil1iI = lililiI11I11Iill1lI("#", ...) local lIIIilIl11liI11ilIl = { ... } return lIllIli1I1i1i1Ilil1iI, lIIIilIl11liI11ilIl end local function iII111I1I1Ii1i11III() while true do local liIiiii1lli1Iii111i = lIlI1lIIlllilIlIIiIil[liilIiiilIIII1I1l1I] local lIllilI1Il11lI1ilI11I = liIiiii1lli1Iii111i[10] liilIiiilIIII1I1l1I = liilIiiilIIII1I1l1I + 1 if lIllilI1Il11lI1ilI11I < 12 then if lIllilI1Il11lI1ilI11I < 6 then if lIllilI1Il11lI1ilI11I >= 3 then if lIllilI1Il11lI1ilI11I >= 4 then if lIllilI1Il11lI1ilI11I ~= 5 then if liIiiii1lli1Iii111i[3] == 190 then liilIiiilIIII1I1l1I = liilIiiilIIII1I1l1I - 1 lIlI1lIIlllilIlIIiIil[liilIiiilIIII1I1l1I] = { [10] = 17, [7] = (liIiiii1lli1Iii111i[7] - 248) % 256, [1] = (liIiiii1lli1Iii111i[1] - 248) % 256 } elseif liIiiii1lli1Iii111i[3] == 40 then liilIiiilIIII1I1l1I = liilIiiilIIII1I1l1I - 1 lIlI1lIIlllilIlIIiIil[liilIiiilIIII1I1l1I] = { [10] = 20, [7] = (liIiiii1lli1Iii111i[7] - 157) % 256, [1] = (liIiiii1lli1Iii111i[1] - 157) % 256 } elseif liIiiii1lli1Iii111i[3] == 255 then liilIiiilIIII1I1l1I = liilIiiilIIII1I1l1I - 1 lIlI1lIIlllilIlIIiIil[liilIiiilIIII1I1l1I] = { [10] = 19, [7] = (liIiiii1lli1Iii111i[7] - 25) % 256, [1] = (liIiiii1lli1Iii111i[1] - 25) % 256 } else local i1Iil1I1Iii11lI1lii = liIiiii1lli1Iii111i[7] local liiIliIIIii1iIilil1 = liIiiii1lli1Iii111i[1] local iiiillIiIlIIliilili = liiIliIIIii1iIilil1 > 0 and liiIliIIIii1iIilil1 - 1 or l1Illli1Ill1lIil1li - iii1iiIl1l1I1lll11i if iiiillIiIlIIliilili < 0 then iiiillIiIlIIliilili = -1 end for lIlIlIiiIl1li1liIIiIi = i1Iil1I1Iii11lI1lii, i1Iil1I1Iii11lI1lii + iiiillIiIlIIliilili do illi1iIli1llilI11II[lIlIlIiiIl1li1liIIiIi] = lI1iiliilII1lIi11i1[iii1iiIl1l1I1lll11i + (lIlIlIiiIl1li1liIIiIi - i1Iil1I1Iii11lI1lii) + 1] end if liiIliIIIii1iIilil1 == 0 then IIIII1il1lI1iIi1l1i = i1Iil1I1Iii11lI1lii + iiiillIiIlIIliilili for lIlIlIiiIl1li1liIIiIi = IIIII1il1lI1iIi1l1i + 1, lil1i1lIIIi1iil111l do illi1iIli1llilI11II[lIlIlIiiIl1li1liIIiIi] = nil end end end elseif not not illi1iIli1llilI11II[liIiiii1lli1Iii111i[7]] == (liIiiii1lli1Iii111i[3] == 0) then liilIiiilIIII1I1l1I = liilIiiilIIII1I1l1I + 1 end else illi1iIli1llilI11II[liIiiii1lli1Iii111i[7]] = lIlIll1I1IIiiIIIIl1ll[liIiiii1lli1Iii111i[2]] end elseif lIllilI1Il11lI1ilI11I < 1 then lIlIll1I1IIiiIIIIl1ll[liIiiii1lli1Iii111i[2]] = illi1iIli1llilI11II[liIiiii1lli1Iii111i[7]] elseif lIllilI1Il11lI1ilI11I ~= 2 then local lIllIli1I1i1i1Ilil1iI if liIiiii1lli1Iii111i[8] then lIllIli1I1i1i1Ilil1iI = liIiiii1lli1Iii111i[5] else lIllIli1I1i1i1Ilil1iI = illi1iIli1llilI11II[liIiiii1lli1Iii111i[3]] end illi1iIli1llilI11II[liIiiii1lli1Iii111i[7]] = illi1iIli1llilI11II[liIiiii1lli1Iii111i[1]][lIllIli1I1i1i1Ilil1iI] else III1IIIIllI1iIIIIIl[liIiiii1lli1Iii111i[1]] = illi1iIli1llilI11II[liIiiii1lli1Iii111i[7]] end elseif lIllilI1Il11lI1ilI11I < 9 then if lIllilI1Il11lI1ilI11I >= 7 then if lIllilI1Il11lI1ilI11I == 8 then local i1Iil1I1Iii11lI1lii = liIiiii1lli1Iii111i[7] local lI1iiliilII1lIi11i1 = liIiiii1lli1Iii111i[1] local i11I11i1Ii1lI1l11I1 = liIiiii1lli1Iii111i[3] local illii1llIIlIliIlill, lIlIll1iIliIIiII1IIli, iII111I1I1Ii1i11III if lI1iiliilII1lIi11i1 ~= 1 then if lI1iiliilII1lIi11i1 ~= 0 then lIlIll1iIliIIiII1IIli = i1Iil1I1Iii11lI1lii + lI1iiliilII1lIi11i1 - 1 else lIlIll1iIliIIiII1IIli = IIIII1il1lI1iIi1l1i end lIlIll1iIliIIiII1IIli, illii1llIIlIliIlill = lIlllillIilIllIliIl11(illi1iIli1llilI11II[i1Iil1I1Iii11lI1lii](ilI111I1lilIllII1II(illi1iIli1llilI11II, i1Iil1I1Iii11lI1lii + 1, lIlIll1iIliIIiII1IIli))) else lIlIll1iIliIIiII1IIli, illii1llIIlIliIlill = lIlllillIilIllIliIl11(illi1iIli1llilI11II[i1Iil1I1Iii11lI1lii]()) end if i11I11i1Ii1lI1l11I1 ~= 1 then if i11I11i1Ii1lI1l11I1 ~= 0 then lIlIll1iIliIIiII1IIli = i1Iil1I1Iii11lI1lii + i11I11i1Ii1lI1l11I1 - 2 IIIII1il1lI1iIi1l1i = lIlIll1iIliIIiII1IIli + 1 else lIlIll1iIliIIiII1IIli = lIlIll1iIliIIiII1IIli + i1Iil1I1Iii11lI1lii - 1 IIIII1il1lI1iIi1l1i = lIlIll1iIliIIiII1IIli end iII111I1I1Ii1i11III = 0 for lIlIlIiiIl1li1liIIiIi = i1Iil1I1Iii11lI1lii, lIlIll1iIliIIiII1IIli do iII111I1I1Ii1i11III = iII111I1I1Ii1i11III + 1 illi1iIli1llilI11II[lIlIlIiiIl1li1liIIiIi] = illii1llIIlIliIlill[iII111I1I1Ii1i11III] end else IIIII1il1lI1iIi1l1i = i1Iil1I1Iii11lI1lii - 1 end for lIlIlIiiIl1li1liIIiIi = IIIII1il1lI1iIi1l1i + 1, lil1i1lIIIi1iil111l do illi1iIli1llilI11II[lIlIlIiiIl1li1liIIiIi] = nil end else local i1Iil1I1Iii11lI1lii = liIiiii1lli1Iii111i[7] local lIlIllI1l1lIIllI1l11i = i1Iil1I1Iii11lI1lii + 2 local IIiII1i11lli1llliii = { illi1iIli1llilI11II[i1Iil1I1Iii11lI1lii](illi1iIli1llilI11II[i1Iil1I1Iii11lI1lii + 1], illi1iIli1llilI11II[i1Iil1I1Iii11lI1lii + 2]) } for lIlIlIiiIl1li1liIIiIi = 1, liIiiii1lli1Iii111i[3] do illi1iIli1llilI11II[lIlIllI1l1lIIllI1l11i + lIlIlIiiIl1li1liIIiIi] = IIiII1i11lli1llliii[lIlIlIiiIl1li1liIIiIi] end if illi1iIli1llilI11II[i1Iil1I1Iii11lI1lii + 3] ~= nil then illi1iIli1llilI11II[i1Iil1I1Iii11lI1lii + 2] = illi1iIli1llilI11II[i1Iil1I1Iii11lI1lii + 3] else liilIiiilIIII1I1l1I = liilIiiilIIII1I1l1I + 1 end end elseif liIiiii1lli1Iii111i[3] == 142 then liilIiiilIIII1I1l1I = liilIiiilIIII1I1l1I - 1 lIlI1lIIlllilIlIIiIil[liilIiiilIIII1I1l1I] = { [10] = 7, [7] = (liIiiii1lli1Iii111i[7] - 213) % 256, [3] = (liIiiii1lli1Iii111i[1] - 213) % 256 } else illi1iIli1llilI11II[liIiiii1lli1Iii111i[7]] = not illi1iIli1llilI11II[liIiiii1lli1Iii111i[1]] end elseif lIllilI1Il11lI1ilI11I < 10 then local lIli1ililIlI1IIIi11li = illi1iIli1llilI11II[liIiiii1lli1Iii111i[1]] local lIllIli1I1i1i1Ilil1iI if liIiiii1lli1Iii111i[8] then lIllIli1I1i1i1Ilil1iI = liIiiii1lli1Iii111i[5] else lIllIli1I1i1i1Ilil1iI = illi1iIli1llilI11II[liIiiii1lli1Iii111i[3]] end illi1iIli1llilI11II[liIiiii1lli1Iii111i[7] + 1] = lIli1ililIlI1IIIi11li illi1iIli1llilI11II[liIiiii1lli1Iii111i[7]] = lIli1ililIlI1IIIi11li[lIllIli1I1i1i1Ilil1iI] elseif lIllilI1Il11lI1ilI11I ~= 11 then local l1iIlilil11lliIllll, lIllIli1I1i1i1Ilil1iI if liIiiii1lli1Iii111i[6] then l1iIlilil11lliIllll = liIiiii1lli1Iii111i[4] else l1iIlilil11lliIllll = illi1iIli1llilI11II[liIiiii1lli1Iii111i[1]] end if liIiiii1lli1Iii111i[8] then lIllIli1I1i1i1Ilil1iI = liIiiii1lli1Iii111i[5] else lIllIli1I1i1i1Ilil1iI = illi1iIli1llilI11II[liIiiii1lli1Iii111i[3]] end illi1iIli1llilI11II[liIiiii1lli1Iii111i[7]] = l1iIlilil11lliIllll - lIllIli1I1i1i1Ilil1iI else illi1iIli1llilI11II[liIiiii1lli1Iii111i[7]] = { ilI111I1lilIllII1II(lIliil1li1lii1i1i1Iil, 1, liIiiii1lli1Iii111i[1] == 0 and 255 or liIiiii1lli1Iii111i[1]) } end elseif lIllilI1Il11lI1ilI11I >= 18 then if lIllilI1Il11lI1ilI11I >= 21 then if lIllilI1Il11lI1ilI11I < 22 then illi1iIli1llilI11II[liIiiii1lli1Iii111i[7]] = liIiiii1lli1Iii111i[2] elseif lIllilI1Il11lI1ilI11I ~= 23 then local l1iIlilil11lliIllll, lIllIli1I1i1i1Ilil1iI if liIiiii1lli1Iii111i[6] then l1iIlilil11lliIllll = liIiiii1lli1Iii111i[4] else l1iIlilil11lliIllll = illi1iIli1llilI11II[liIiiii1lli1Iii111i[1]] end if liIiiii1lli1Iii111i[8] then lIllIli1I1i1i1Ilil1iI = liIiiii1lli1Iii111i[5] else lIllIli1I1i1i1Ilil1iI = illi1iIli1llilI11II[liIiiii1lli1Iii111i[3]] end illi1iIli1llilI11II[liIiiii1lli1Iii111i[7]][l1iIlilil11lliIllll] = lIllIli1I1i1i1Ilil1iI else illi1iIli1llilI11II[liIiiii1lli1Iii111i[7]] = liIiiii1lli1Iii111i[1] ~= 0 if liIiiii1lli1Iii111i[3] ~= 0 then liilIiiilIIII1I1l1I = liilIiiilIIII1I1l1I + 1 end end elseif lIllilI1Il11lI1ilI11I >= 19 then if lIllilI1Il11lI1ilI11I ~= 20 then if liIiiii1lli1Iii111i[3] == 237 then liilIiiilIIII1I1l1I = liilIiiilIIII1I1l1I - 1 lIlI1lIIlllilIlIIiIil[liilIiiilIIII1I1l1I] = { [10] = 2, [7] = (liIiiii1lli1Iii111i[7] - 35) % 256, [1] = (liIiiii1lli1Iii111i[1] - 35) % 256 } else IliIIIl1l1i1IIillil[illi1iIli1llilI11II] = nil local i1Iil1I1Iii11lI1lii = liIiiii1lli1Iii111i[7] local lIlIIilil11ii1111I1ll = liIiiii1lli1Iii111i[1] if lIlIIilil11ii1111I1ll == 1 then return true end local lIlIll1iIliIIiII1IIli = i1Iil1I1Iii11lI1lii + lIlIIilil11ii1111I1ll - 2 if lIlIIilil11ii1111I1ll == 0 then lIlIll1iIliIIiII1IIli = IIIII1il1lI1iIi1l1i end return true, i1Iil1I1Iii11lI1lii, lIlIll1iIliIIiII1IIli end elseif liIiiii1lli1Iii111i[3] == 222 then liilIiiilIIII1I1l1I = liilIiiilIIII1I1l1I - 1 lIlI1lIIlllilIlIIiIil[liilIiiilIIII1I1l1I] = { [10] = 5, [7] = (liIiiii1lli1Iii111i[7] - 156) % 256, [3] = (liIiiii1lli1Iii111i[1] - 156) % 256 } else illi1iIli1llilI11II[liIiiii1lli1Iii111i[7]] = III1IIIIllI1iIIIIIl[liIiiii1lli1Iii111i[1]] end else local l1iIlilil11lliIllll, lIllIli1I1i1i1Ilil1iI if liIiiii1lli1Iii111i[6] then l1iIlilil11lliIllll = liIiiii1lli1Iii111i[4] else l1iIlilil11lliIllll = illi1iIli1llilI11II[liIiiii1lli1Iii111i[1]] end if liIiiii1lli1Iii111i[8] then lIllIli1I1i1i1Ilil1iI = liIiiii1lli1Iii111i[5] else lIllIli1I1i1i1Ilil1iI = illi1iIli1llilI11II[liIiiii1lli1Iii111i[3]] end illi1iIli1llilI11II[liIiiii1lli1Iii111i[7]] = l1iIlilil11lliIllll + lIllIli1I1i1i1Ilil1iI end elseif lIllilI1Il11lI1ilI11I >= 15 then if lIllilI1Il11lI1ilI11I >= 16 then if lIllilI1Il11lI1ilI11I ~= 17 then liilIiiilIIII1I1l1I = liilIiiilIIII1I1l1I + (liIiiii1lli1Iii111i[9] - IiIiiii11IllIIIlll1) else illi1iIli1llilI11II[liIiiii1lli1Iii111i[7]] = illi1iIli1llilI11II[liIiiii1lli1Iii111i[1]] end else local l1iIlilil11lliIllll, lIllIli1I1i1i1Ilil1iI if liIiiii1lli1Iii111i[6] then l1iIlilil11lliIllll = liIiiii1lli1Iii111i[4] else l1iIlilil11lliIllll = illi1iIli1llilI11II[liIiiii1lli1Iii111i[1]] end if liIiiii1lli1Iii111i[8] then lIllIli1I1i1i1Ilil1iI = liIiiii1lli1Iii111i[5] else lIllIli1I1i1i1Ilil1iI = illi1iIli1llilI11II[liIiiii1lli1Iii111i[3]] end if l1iIlilil11lliIllll < lIllIli1I1i1i1Ilil1iI ~= (liIiiii1lli1Iii111i[7] ~= 0) then liilIiiilIIII1I1l1I = liilIiiilIIII1I1l1I + 1 end end elseif lIllilI1Il11lI1ilI11I < 13 then local l1iIlilil11lliIllll, lIllIli1I1i1i1Ilil1iI if liIiiii1lli1Iii111i[6] then l1iIlilil11lliIllll = liIiiii1lli1Iii111i[4] else l1iIlilil11lliIllll = illi1iIli1llilI11II[liIiiii1lli1Iii111i[1]] end if liIiiii1lli1Iii111i[8] then lIllIli1I1i1i1Ilil1iI = liIiiii1lli1Iii111i[5] else lIllIli1I1i1i1Ilil1iI = illi1iIli1llilI11II[liIiiii1lli1Iii111i[3]] end if l1iIlilil11lliIllll == lIllIli1I1i1i1Ilil1iI ~= (liIiiii1lli1Iii111i[7] ~= 0) then liilIiiilIIII1I1l1I = liilIiiilIIII1I1l1I + 1 end elseif lIllilI1Il11lI1ilI11I ~= 14 then local IIiII1i11lli1llliii = illi1iIli1llilI11II[liIiiii1lli1Iii111i[1]] for lIlIlIiiIl1li1liIIiIi = liIiiii1lli1Iii111i[1] + 1, liIiiii1lli1Iii111i[3] do IIiII1i11lli1llliii = IIiII1i11lli1llliii .. illi1iIli1llilI11II[lIlIlIiiIl1li1liIIiIi] end illi1iIli1llilI11II[liIiiii1lli1Iii111i[7]] = IIiII1i11lli1llliii else local lIl11il1IiII1IiiiIi11 = Iliii1iIlI1I1IlIiIl[liIiiii1lli1Iii111i[9]] local l1iiliIll11Il11liIl = {} if lIl11il1IiII1IiiiIi11[I1IIII11llil1I1II1I] > 0 then do local lIllIi1llI1iliIlIlii1 = {} l1iiliIll11Il11liIl = l111Iii1l1Ii11I1I1l({}, { __index = function(lIIIilIl11liI11ilIl, IiilII1iIIil11IIl1I) local II111I1Illilii111I1 = lIllIi1llI1iliIlIlii1[IiilII1iIIil11IIl1I] return II111I1Illilii111I1[1][II111I1Illilii111I1[2]] end, __newindex = function(lIIIilIl11liI11ilIl, IiilII1iIIil11IIl1I, lIIiIl11l1lI1iiIiIi) local II111I1Illilii111I1 = lIllIi1llI1iliIlIlii1[IiilII1iIIil11IIl1I] II111I1Illilii111I1[1][II111I1Illilii111I1[2]] = lIIiIl11l1lI1iiIiIi end }) for lIlIlIiiIl1li1liIIiIi = 1, lIl11il1IiII1IiiiIi11[I1IIII11llil1I1II1I] do local iillllIl1IiIiilIllI = lIlI1lIIlllilIlIIiIil[liilIiiilIIII1I1l1I] if iillllIl1IiIiilIllI[i1ilIl11IiilI11iili] == iI11lllliil1ll11liI then lIllIi1llI1iliIlIlii1[lIlIlIiiIl1li1liIIiIi - 1] = { illi1iIli1llilI11II, iillllIl1IiIiilIllI[lIl1111II1IiIi1l1I11I] } elseif iillllIl1IiIiilIllI[i1ilIl11IiilI11iili] == lIlll1lIiilIlIlliillI then lIllIi1llI1iliIlIlii1[lIlIlIiiIl1li1liIIiIi - 1] = { III1IIIIllI1iIIIIIl, iillllIl1IiIiilIllI[lIl1111II1IiIi1l1I11I] } end liilIiiilIIII1I1l1I = liilIiiilIIII1I1l1I + 1 end if not IliIIIl1l1i1IIillil[illi1iIli1llilI11II] then IliIIIl1l1i1IIillil[illi1iIli1llilI11II] = {lIllIi1llI1iliIlIlii1} else lIlli11iiIiIiIiiIII11(IliIIIl1l1i1IIillil[illi1iIli1llilI11II], lIllIi1llI1iliIlIlii1) end end end local II1IlIl1IlIilliii11 = i1lIlll11iIli1l1Ii1(lIl11il1IiII1IiiiIi11, lIlIll1I1IIiiIIIIl1ll, l1iiliIll11Il11liIl) illi1iIli1llilI11II[liIiiii1lli1Iii111i[7]] = II1IlIl1IlIilliii11 end end end local lIlIiIlII11IliI1i11ii, lIlIliili1i1IIl1ll1Il, l1IIIl1lil1i1l1iili, lIlIi1l1IiIli1IIl11ii = IlII1llliiIIliiiIIi(iII111I1I1Ii1i11III) if lIlIiIlII11IliI1i11ii then if l1IIIl1lil1i1l1iili then return ilI111I1lilIllII1II(illi1iIli1llilI11II, l1IIIl1lil1i1l1iili, lIlIi1l1IiIli1IIl11ii) end else lI1111llIIIIIll1il1("Luraph Script:" .. (IlIiIiI1llI1l1i1iII[liilIiiilIIII1I1l1I - 1] or "") .. ": " .. l1I1I1iil11l1ii1Ill(lIlIliili1i1IIl1ll1Il), 0) end end IlI11illiI11IliII1l(IIliiIlIlI1Ii1iIIii, lIlIll1I1IIiiIIIIl1ll) return IIliiIlIlI1Ii1iIIii end local iIl11ii1III1I11111i = lIll1i1iiI11iIIlIl1Ii() return i1lIlll11iIli1l1Ii1(iIl11ii1III1I11111i, lIlIll1I1IIiiIIIIl1ll)() end llliIllI111lIilli11("LPH!A0650C24402H00202H033000034003C92H00470A020049785H00E49440C315D879216D0A7DA74H00F96FEDE369BE9B6D3A630A02000B2H656725512H50683H5B634H863HD1DD3D2H3C1C3HC78B00013H00880013A00A02004DE1083H00A01B7DA4D027CB43E1043H00E8C3D6C5E1073H006C77B5F9511C44E10A3H009D34D6A0820C72DCE699E1053H00C7D637A5CCE10B3H003A6D978CACA46D0D8520E5E10B3H0017E67D35733E71355D8BFDE10A3H0098B3876C5F0884978529E1073H005A0DA2FD9F0C4DE10C3H0003E2A1C9CF728B05DF1EB21AE10C3H00DF0E78D53295A0706674FC6CE1083H00FB7AFD655D7B6F3CE1063H00A302F2AD3A43E1093H0069901BE61CED1A5CA2E10D3H00D8F35E0A3FC65A694CFAE32856E10E3H00CF3EF6092A567383850561D987CEE10B3H001DB44F221081F64042092EE1103H0056D91A72D48921171C24E08234BC63E5E1063H0066A995E5BFD0E1093H00D4BF3D787A5F3BCBFBE1063H00E7763701B6BFE1063H008D64631186C7E1123H008362374D54ED2E82449F33901CE1DD57A141E1083H0045BCC4F975EF09C9E1093H002D84C9ECEEA571C557785H00E06F40E10A3H004CD7F68663A27E947B91E1073H00AE510D37FB88EE78E5EE3160E232E73F788H0078CC287FBFE4FBD83FE1063H0027B6EAC9617F785H00E06D40785H00606440E1063H00CDA409D14F9CE10C3H00C3A2E60302B4EA55384BF347E10C3H009FCEA51D6B2HC693ABB92BF3E10A3H00BB3A39A197AA926119A7786H002C40E10E3H00558C54895B3E6E386F355B87E4EBE1063H00B3D270580E9B78941CE59D2H99B93F786H001040783ABD6AA0DBFD9D3F78059D5F80BCD8A23F785H00206C40785H00C06240E10B3H00F9E0353B6081E39F034D6FE10D3H00E2F5E0D67FA605DF25AF10BA7C787H00C0783F89C9BF814E9B3F78E2324C80B1E4A73F785H00A06A40786H003F40E1143H0031B8009DB04E6473CA619509FE6142776327CF66E1063H0095CC034311E4E11F3H004B8A39E61658B8B694322031D75F4B45BBDD2442BB1EE01D374D15AA963464786H003340789047C66C3D0AC73FE1103H00B0EBCB68C07028108AFE2H70083339B7789A3F5FE03HDD3F785H00805240E1103H00403BE982311D3D24DB822CA64EF80ACDE10B3H00D02H8BE880F04E5759611F786H003D40E1093H00A59C850F1501B9BFE178AAA06A40F9C5D23FE1203H00640F3C9888E10E004919FC6793518B29817CB78801EA5224D2E3B67FE9089945E1183H0084AFDCE0AB48E56723A2C88D44B96B93678FCF233D1DF19C786H00F03FE10E3H00DC27F4D6D22H7FBFE720D24E9AF078CE8EAADFB20ED63F78AE9B69FAA0F2DE3FE1073H00A2B5251AA7EE55E12C3H006B2AF540EBBECB573CC5F28BE9A436A2D75515EA8CB1AC2702B126E963C916396F770F6406DDA9AC80E61C2BE1133H0067F6B08D3A3D68B0FD9F0F5B738387C9D965B0786H00E03FE16D3H0070AB02A900AF7D0B977C96AA5F7438FE6F941DC161017D6E258C64FABE3A5546E564BA52F0504BFEE9B5532H2CF67A6A43C8E2295CAD09E93A045A049ACF0D60D383DA76F5761847AAF5546F333664AE2B7CCBD40E563135B0D12BBF6AD02AF8FFEDA5CFB9ED0B62685C3CD6F9E1063H00E7760D05A8AEE1073H008D647F1D80C4EFE1083H0062756D54F220864E35E10B3H00EA5DB02DEFD65FB21029D9E1133H00879654EF0E8948C6DAEAF5A74DB35620BEC582E1093H0010CB49927A91CB322CE1063H00732H92BD4EC2E10B3H00B9A05872ACD62EDD558DB1E10A3H00A2B52402ABE85E0443F9E1053H00349F9D980CBD39EEBA21C484E323B85E012H00013H00323H00023H00343H00403H00343H00423H004B3H00423H004D3H004D3H004D3H004D3H004E3H004E3H004E3H004E3H004F3H004F3H004F3H004F3H00503H00503H00503H00503H00513H00513H00513H00513H00523H00523H00523H00523H00533H00533H00533H00533H00543H00543H00543H00543H00553H00553H00553H00553H00563H00563H00563H00563H00573H00573H00573H00573H00583H00583H00583H00583H005C3H005C3H005C3H005C3H005C3H005C3H005C3H005D3H005D3H005D3H005D3H005F3H00603H00613H00613H00613H00613H00613H00613H00613H00623H00623H00623H00623H00623H00623H00623H00623H00633H00633H00633H00633H00633H00633H00633H00633H00643H00643H00643H00643H00653H00653H00653H00653H00653H00653H00653H00663H00683H00683H00683H00683H00683H00683H00693H006B3H006C3H006C3H006C3H006C3H006C3H006C3H006C3H006D3H006D3H006D3H006D3H006D3H006D3H006D3H006D3H006E3H006E3H006E3H006E3H006E3H006E3H006E3H006E3H00703H00713H00723H00723H00723H00723H00723H00723H00723H00733H00743H00743H00743H00743H00743H00743H00743H00743H00753H00753H00753H00753H00753H00753H00753H00753H00763H00763H00763H00763H00773H00783H00783H00783H00783H00783H00783H00783H00793H007B3H007B3H007B3H007B3H007B3H007B3H007C3H007E3H007E3H007E3H007E3H007E3H007E3H007F3H00813H00823H00833H00833H00833H00833H00833H00833H00833H00843H00843H00843H00843H00843H00843H00843H00843H00853H00853H00853H00853H00853H00853H00853H00853H00863H00863H00863H00863H00873H00883H00883H00883H00883H00883H00883H00883H00893H008B3H008D3H008E3H008F3H008F3H008F3H008F3H008F3H008F3H008F3H00903H00913H00913H00913H00913H00913H00913H00913H00913H00923H00923H00923H00923H00923H00923H00923H00923H00933H00933H00933H00933H00943H00953H00953H00953H00953H00953H00953H00953H00963H00983H00983H00983H00983H00983H00983H00993H009B3H009C3H009C3H009C3H009C3H009C3H009C3H009C3H009D3H009E3H009E3H009E3H009E3H009E3H009E3H009E3H009F3H009F3H009F3H009F3H009F3H009F3H009F3H009F3H00A03H00A03H00A03H00A03H00A03H00A03H00A03H00A03H00A13H00A23H00A33H00A43H00A43H00A43H00A43H00A43H00A53H00AE3H00AE3H00AE3H00A53H00AF3H00B03H00B13H00B23H00B33H00B33H00D33H00D33H00D33H00B33H00D43H00D43H00D43H00D43H00D43H00D53H00D53H00D53H00D53H00D53H00D53H00D53H00D53H00D63H00D63H00D63H00D63H00D63H00D63H00D73H00D83H000B2CC54C6A783DA17CBA0B0200BD3H72262HEFEBD74D4C484C8B898D85A7A6AE9E2HA1A7838280848C3F3D35052HD8DEFA5457535BB5BCB2B0F4F1F9A50C2H0A2E080B0307EAE0E2ECA3A5A9F140464A62BCBF2HB31F1412185E59490D74727A567073637F54584254050D1959A8AEBA8A2427332B818C9280C7C1D995DCDACAFED8DBC3D7BEB0A2BC7275692110160A328C8F9383EBE4F2E82E29097D44425A664043634F2H280224D4DDF989787E2H5AF4F7D3FB5D5C72509691B9C5ACAA8A8EA8AB83A78280A28C43456911E0E6CAC25C5F7353B7B492B8FEF9C9AD14123A361013231FFCF8C2F4A7AD99F9484E7A6ACBC7F3CB293E12206C7D57657360485A6B7B472F5B5C6C781E0E114DA0B286BE220D192B81AABA88D8D2CD91F2CDECBEE8E0EBBBD7C0F4CC704D4B79031A224E8E97ABC3EDF4B4A02H35051158554616504B7F4725201E2CF9E5DDB19F82BED6E1FFBFAB415C18089C9DADB9ACADBEEEA8B387BF9D98A694504D7519CAEAD6BE7A672733E5C480900405352101051646091B2F17F5BCCEFCB8F383B170495A0AD8CFFBC3211C1A287469513D9B86BAD29E83C3D72H645440390615459FF7B0E21F37033B999CA290F8D1E985F3EED2BAE8EFDFCBEFD3C4908E8089DD2927327A889FAB93F1CCCAF82039016D4B566A02795313072H340410FBF6FDB5918ABE860A0F31034F645C30BCA19DF592BEFEEAA6BBFFEF9D9CACB84F4E450DE9F2C6FE6267596BD1CCF4982409355D3B2666720D23677705043420A2A6ADE54E054C02DCDEC38F233400387C414775978EB6DA928BB7DF7168283C2H211105D4D9D69A0F5C2967879CA890D4D1EFDDC4F6CEA2EEF3CFA7E3D09084908DC9D92F2E1E0ABDBCB3FF1F0430084C497745435E660A6F5B670F2538786CC0F5B1A19796A6B210141B577E6C5860A4ED9FADCBAAF0C2E1D8D79B97D1B6F84A5D6951F7CACCFE6E774F23C9D4E8803B1151452H2A1A0E0F303F732D7B1E50EDC5F1C96F6A5466E5DFE78B213C00687A7D4D59B18D8ECE2H988BCB5870447C20251B29E3CAF29E5A477B13A7A09084C6FAFDB9F5F7E2A6EF8CD9A3D3D1F8808295A1993F020436B6AF97FB150C30585049091D2H6252467578433B5B40744CF0F5CBF9A89AA2CE0A172B4348743420ACB1F5E5CBCAFAEED1D0EB93B3A89CA4686D53611F023A564B7F432BC1DC9C8824195D4D333202162C28136B0210241CC089FBC967165C6EC5FCC7BF733B661C9681B58D93AEA89A829BA3CF6578442C1F3575612HD6E6F26B546F17892D8EF4E2F8CDB112852C5E080A2B5BF7E0D4EC90ADAB99233A026EAEB78BE30D1454402H556571787546365B08413353487C44080D330190A29AF6021F234B3E7C3C28A4B9FDEDD3D2E2F6C9C8FB8BABB084BC60655B69170A325EB387BBD3F9E4A4B0182165753B3A0A1E242013630A182C14D891E3D17F1E4476CDF4C7B77BCB66149E89BD85AB9690A2BAA39BF79D80BCD4173D7D692HDEEEFA734C7F0F91C79EECD9F1C5FD0306380A310B335FF5E8D4BCA6A1918565596E1AB4AA93E717192C444E596D557B4640726A734B274D506C04270D4D592HAE9E8A313C177FC00FB6DCD6C1F5CDD3EEE8DAC2DBE38FA5B884EC5F7535212H162632C994BFD7F7ECD8E024211F2D01467E125E437F1768206074C0DD99897F7E4E5AEDECC7AF4F5460589C99A795B3AE96FA96AB97FF9588C8DC78450111E7E6D6C240446F07F5298EE4B260CBA15B1622421F132B1FFEEACAF4A3B197A94462704E89C7FFC76B241C2862615D59732H7E3A3H7B3F2H5A607845B61F4DE011B8EA2H2F17732H8CB0D0C16F8BCDF64EA4C2E7E3ABDBCE2HC084752H7D3919185A3AC297D79BB1F4B0A033357111D2F2FF1C454B490B24286824F5FFA7E1929EC086EF53BDFB4CF21E588929DB9DA614B486414CB2F39C90D09C5D570F49FAF6A8EE77CB2563D46A86C059B24359F5E11F5E01E57E0B00053H00C9030A5C0A02002D786H003440E1083H0013520BD3645A1030E10A3H003B5AAC6ACCD60E7A2H06E1083H00354C3A293FB9E50DE1063H009D9498AF5CFDE1093H00B37255B0C62F7C12A8E10D3H007A6D6820BD604453EEB4159214E10B3H00E9F068E25CC6FE8DA5DD21E1123H0092A5B4321BD8EE14F369168091D518C2D001E10A3H008C97D6E663A2DEB4BB51E1033H000E7180E1063H00F3B2327D8EE2E1083H0059A058FCDF05E27BE1053H0041682DA762E1093H00AC37F04C531FA50FC7E1033H00DF2E48E1033H00F89388E1083H00E53CCAD98FA5EFB535E1063H004D84675B80ECE10A3H00E3E2F4A2B4AEA6226E8EBD66FA0436C610CC711E69012H00033H00043H00043H00053H00053H00083H00083H00093H00093H00093H00093H00093H00093H00093H00093H00093H000A3H000A3H000A3H000A3H000A3H000A3H000A3H000A3H000A3H000B3H000B3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000C3H000F3H000F3H000F3H000F3H000F3H000F3H000F3H000F3H000F3H00103H00103H00103H00103H00103H00103H00103H00103H00103H00113H00113H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00123H00153H00153H00153H00153H00153H00153H00153H00153H00153H00163H00163H00163H00163H00163H00163H00163H00163H00163H00173H00173H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H00183H001B3H001B3H001B3H001B3H001B3H001B3H001B3H001B3H001B3H001C3H001C3H001C3H001C3H001C3H001C3H001C3H001C3H001C3H001D3H001D3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H001E3H00213H00213H00213H00213H00213H00213H00213H00213H00213H00223H00223H00223H00223H00223H00223H00223H00223H00223H00233H00233H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00243H00273H00273H00273H00273H00273H00273H00273H00273H00273H00283H00283H00283H00283H00283H00283H00283H00283H00283H00293H00293H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002A3H002D3H002D3H002E3H002E3H002E3H002E3H002E3H002E3H002E3H002E3H002E3H002E3H002E3H002E3H002F3H002F3H002F3H00303H00303H00303H00303H00303H00303H00323H005801BBF853EC536F34C50B02005B2HF8F4AC2H53430FCFCEDECE2H69793526243424FEFFEFA3F9FAEAFA11150519545A4254AFA7B9AF22283422C5D1D3C5782H6E7853434553525A526E406D6F2DACA8B8A4070911077A726C7A1D170B1DD0C4C6D0AB2HBDABAEBEB8AEC5CDC5F924000240505B4B57D7D4C6F67571617D28263E28030B1503060C1006190D0F1954584C54B6A9A5B7202E3622CF2HD3CD808498885855415B5D56445E727B6B71B7A0AEB40C19150F8192988226273D09D8DCFCD0BFBD95B3BABE90B6C5C3EFC900182A0C6B714167D6C0FCDA7D795D753D3E12300603290B03042C0E2C35032169724664B29B9DBF32362E16D1D5C5F180879CD4B69866276662726E79776F79BCB4AABC171D01178A9E9C8A2D2H3B2DE0C4F6E0BDB7BF8397BAB8FAD1D5C5D9141A02146F67796FE2E8F4E285919385382H2E3813370513101A122E092D2F6D63687864C2C1D3E33A3E2E32DDD3CBDD909886906B617D6B6E7A786E89859189C5DAD6C4151B0317902H8C9235312D3DEBE6F2E8C0CBD9C3C5CCDCC6DACDC3D91F0A061C74676D77EAEECEE28183AB8D4C48664017113D1B120A381E3D271731786E5274CFCBEFC74F4C6042E8EDC7E59592BA987E6751737B60547684ADAB89C1CEECE027233B039E9A8ABE35322961250BF5B4CBCFDFC3CEC0D8CEE1E9F7E1242E32247F6B697FF22HE4F295858395482H4C700A2725672622322E39372F397C746A7CD7DDC1D74A5E5C4AED2HFBEDA0B0B6A07B2H7F435E7A783A9E958599D1D2C0F02F2B3B27A2ACB4A2454D5345F8F2EEF8D3C7C5D3DED2C6DEE8F7FBE926283024852H9987FAFEE2F29E93879D53584A502821312B2D3A342E42575B4187949E84DCDDC7935256765AF9FBD3F5A4A08EA88F89A5838A92A086958FBF99D0C6FADC3733173FA7A488AA40456F4D0D0A2200D6CFF9DBD3C8FCDEFCD5D3F1343028108B8F9FAB0A0D165E705EA0E1585C4C50333D2533363E203649435F498C989A8CE72HF1E75A7E4C5A2HFDF9C599B4B6F48B8F9F838E80988EA1A9B7A1E4EEF2E43F2B293FB22HA4B2557143552H080C30C3E7E5A7E9E2F2EEFCFFEDDD3C382834979981970A021C0AADA7BBAD60747660333F2B333F202C3E5B554D59962H8A94EFEBF7E7616C7862060D1F05BBB2A2B89087899395808C96AAB9B3A9ECE8C8E44B496147B6B29CBA51577B5D1C043610E7FDCDEBE2F4C8EE01052109494A66449297BD9F1F183012B8A197B5657E4A684E6761434B44660A595D457D989C8CB8FFF8E3ABBF916F2E0D091905C0CED6C09B938D9B9E94889EB1A5A7B1F42HE2F44F55594FC7CEC6FA4C616321181C0C10F3FDE5F3F6FEE0F609031F094C585A4CA72HB1A71A000C1AB8B1B98550747634444F5F434B485A6A61657569A4AAB2A4FFF7E9FF7278647215010315C0CCD8C0A2BDB1A3ACA2BAAEBB2HA7B9FCF8E4F454594D57C9C2D0CA6E67776D23343A20F8EDE1FBFDEEE4FE11153519585A7254A3A789AF2E280422C9D1E3C5746E5E785F4975535A54727A696D4961A1A28EAC0A0F25077770587A10093F1DDDC6F2D0A68F89ABAEAAB28AC5C1D1E50C0B10588AA45A1BD2D6C6DA757B637528203E280309150306121006192H0F195C464A5CB7B1B38F032E2C6ECDC9D9C5808E96805B534D5B5E54485E71656771B42HA2B40F15190F828486BA05212361D7DCCCD0B6B5A797B6B2A2BEC9C7DFC90C041A0C676D7167DACECCDA75796D75312E2230010F17030C2H100E21253929676A7E64BCB7A5BF31382832D6C1CFD58B9E9288607379636662426E75775F79B0B49ABC1B1D3117869EAC8A213B0B2DECFAC6E0B7B99FF7BEBA9EB6DCDFF3D1191C361462654D6FEFF6C0E28893A785351C1A3813170F371216063221263D75B99769282HC3D39F3D3E2E3EDDD9C9D5909E86906B637D6B6E64786E81A797A1CEC0D8CC1D2H011F6EEA6B85C84D30211690E9FCC3C7DFE7C2C0D2E2DFDDCDD11C3C1A2876737133EAEEFEE28D839B8D404856401B110D1B1E3C081E211E276D6A8E15605H0076D100054C0A020001E1063H001D18746F6461E10C3H00FFFA92959FB584AEA1BBAEADE10C3H00C3BEEB2HC1F9C0D2EDFFF2E9E1123H0087823F111D0A3D0B0D3F3B342E3412485242E1023H002D28788H006AE55443C24810732A0A3H00353H00353H00353H00353H00353H00353H00353H003F3H00353H00403H00CB7D93582D62C5C852660A0200833HCBC76E2H6C4A3331396517101434171115333E3A326E787D71292HE0F0D8666163431CF8631600013H00280003550A020065E1063H00232HCA5DCABBE1093H009130BBDE549D8A34EAE10D3H0058B3D6D2EF56C2F1EC1AFB2046E10B3H007F16EAC02218ACBFB31BC3E1173H00D00B343CEA6BA0D08AA04E9E443E22A56FFD6109B5ECC5E10A3H00C9482B7F801D8971B814E1083H002BF2184B59EFB7FF35E1083H00F3DA93A3148288B0E10D3H00BBC2C61CDE388E8DD0DE6C6862786H002640E10A3H00BEF17125F1FDAB3D439DE1063H00381332780DF3E10A3H008E0121B501CD7BAD936DBD28D19D0EE16C7A7E40243H00363H00363H00363H00363H00363H00363H00363H00363H00363H00363H00373H00373H00373H00383H00383H00383H00393H00393H00393H00393H00393H00393H00393H00393H00393H00393H003B3H003B3H003B3H003C3H003C3H003C3H003C3H003C3H003C3H003F3H00B286D21A473AFCF354800A0200213HC9C54A2H484E2B2F292F6C6A6E680D050F290B0E065A6C6B6F4FAD8C41622H515311C82CB7C2B52HB3BFF4FAF6C4809597D59E2H969AF7F9F5C7B1B8BAF83HD9D55A2H585E3B3F393F7C7A7E781D151F391B1E164A7C7B7F5F405242646B616935E1E0E2C2C82HC3CF040A0634A0A5A7E53HA6AA072H0503C8CCCACCE9EFEBED6A72686E465649139672E99C5H00C9EC3100054C0A0200E5E1063H0088A3ADCCD142E10C3H00DE91D70EC666011D30F0BB56E10C3H009ABD5EC2C0F26589F42CD79AE1123H0016A96AAA04A908282CD43EEF372757FB83C9E1023H007853788H00C39104199096F400DD0A3H00433H00433H00433H00433H00433H00433H00433H004A3H00433H004B3H00AECF07F478D7CE865C660A0200B73H2D21C42HC6E0F9FBF3AFD1D6D2F2494F4B6D6460683412171B432H6E7E5660676545E60299EC00013H00DF0003510A0200B1E1063H003A15E71A6B44E1093H00CC07824179EAFB4B17E10D3H001F6A09DFC8573DAC5B63242DB1E10B3H00CE69D727FB0781B812E45EE1173H006732EB119D9ADFAD0DB9D15363FFDD38D804FEC4425DBAE10A3H00F4AFB2A02D5AA88EE5A3E1083H0092EDB53C28904AB835E1083H002A051E04957DD587E10D3H00C21D4BEBEF47336A0941C1EF43786H0026402A07864BF7F23350101B3H00443H00443H00443H00443H00443H00443H00443H00443H00443H00443H00453H00453H00453H00463H00463H00463H00473H00473H00473H00473H00473H00473H00473H00473H00473H00473H004A3H002558AE8057C18C055B770A0200853H333FD82HDADC5D595F59C2C4C0C6070F0523292C2478323531118BAA67442HDBD99B9A7EE590032H05096A64685AA3AFADEFDC2HD4D8D9D7DBE9B7BEBCFE3H838F282H2A2CADA9AFA912141016575F5573797C7428828581A166746442212B237FD3D2D0F04FAB30455H000C67CE0006510A020071E1053H0041AC948BA3E1093H0078F34C3C358AEF9664E1053H000BD624AE7BE1083H0022FDE5461AE11B4BE1063H00BA15107455F5E1063H000C471042BC2AE1123H009EB9C1319E37094504E90545B66F31B0F8D4E1063H00D48F6E10D3EFE1143H0066014AC2DCF94ACAD0283D8C7B95E9F9A702ACEAE1063H00E2BD258C4A2CE1093H0034EF14BA2D98A913BF150BCC7C60F6FC23310F3H00A63H00A63H00A63H00A83H00A83H00A93H00AA3H00AA3H00AA3H00AA3H00AA3H00AA3H00AB3H00A63H00AE3H00475686484E1B69E3726B0A0200373HBAB6B12HB3B548404C64E22F036D5453520ECEC4CB95E2E4ECB09C9B2H97FAF2E2A677B961FB828A88B42HB2B3EF879B88D60701052506E2790C024H0019A6000E7B0A0200A9BDE1123H00079AE789407DE656D067B38498E1D57305B9E1083H0015D8D0699D7B5D31E1093H004DD02D0C4661B53DC7786H001440785H00E06F40785H00405D40E1063H00C803910069FAE1093H00F2BD90D70FE0992519E10D3H00F5B83F89B29563B241D1523B7BE10B3H00ECC7190DC991B722901AA0E1123H009DA0D33B14BD5925BCFC01A9DEA0BFA37FE4E1083H000B3EAA8AD55B28EDE1053H00C3B64FA128784F22C2BF0815714078761085E002B43940784F401361C3BC8FC0787661F75FDFD5EF3F788BF539613C93453E785D03B6DECAEDB93F78BA3C352052AF38BE786H00F03F7863B7DBDF18F266BE785D03B6DECAEDB9BF7896FBAAFFE183663EE1063H00B27DF71A472D787H0040786H004440E1073H00BC175AD41141D5E10C3H0091B488C799238E6CBFC5E47FE10B3H002568F4F973CF4CE23C033EE1063H000E39DB9667F0E10E3H005813D603F1DCE7A3248E88CCE213E10A3H00FA050CF11991EB79144EE10D3H00403BA97C0894821C549714341AE1063H008F62E051C2B0E10E3H00896C13A884461026A0169A3C7E59E1033H001BCE96E10A3H005CB79A3A6BBA32583B01E1033H00428D48E1033H008BBE01E1033H004C27E3E1033H00C50819E1043H0036A130AFE1063H0032FD489ECFBDE10A3H003C97EB5B9BDB4963512BE1073H00226D8019F72758E1033H00079ADCE1033H00E82364E1033H008124CF786H002440786H000440786H0008401D437C589F6CD274448C3H00B53H00B53H00B53H00B63H00B63H00B73H00B73H00B73H00B73H00B73H00B73H00B73H00B73H00B83H00B83H00B83H00B83H00B83H00B83H00B83H00B83H00B83H00B83H00B83H00B83H00B83H00B83H00B83H00B83H00B83H00B83H00B83H00B83H00B83H00B93H00B93H00B93H00BB3H00BB3H00BB3H00BB3H00BB3H00BB3H00BB3H00BB3H00BB3H00BB3H00BB3H00BB3H00BB3H00BB3H00BB3H00BB3H00BB3H00BB3H00BB3H00BB3H00BB3H00BC3H00BC3H00BC3H00BD3H00BD3H00BD3H00BD3H00BD3H00BD3H00BD3H00BD3H00BD3H00BD3H00BD3H00BD3H00BE3H00BE3H00BE3H00BE3H00BF3H00BF3H00BF3H00BF3H00C03H00C03H00C03H00C03H00C13H00C13H00C13H00C23H00C23H00C23H00C23H00C23H00C33H00C33H00C33H00C33H00C33H00C33H00C43H00C43H00C43H00C53H00C53H00C53H00C63H00C63H00C63H00C73H00C73H00C73H00C83H00C83H00C83H00C93H00C93H00C93H00C93H00C93H00C93H00BD3H00CA3H00CC3H00CC3H00CC3H00CD3H00CD3H00CD3H00CD3H00D03H00D03H00D13H00D13H00D13H00D13H00D13H00D13H00D13H00D13H00D33H00A3A250854181AC303BE80A0200954E83A7C12H888AB8601D1F5D932H92CEC43D6AAB824C680E3331353D272H2022FFFBF3AFB5B0BCE4434555113HBE9A0E0C0F57432H444859495B5D4E5C4C4A23372127D8CEDADC616D6961E3F8E4E639373F2H636C6038918191D567766222594B531F13001C548195B5C11F0A2E5E495F770B8394B8C0B1A999FD8F9EAACA7E2H7753242B2870A42HBDB1283236662H8587A7BB2HBCB0D1C1D3D5C6D4C4C29B8F999F50465254E9E5E1E95B405C5EA1AFA7FBEBE4E8B0E9F9E9ADFFEEFABAD1C3DB976B78642C190D2D599782A6D6C1D7FF831B0C20583921117507162242E62HEFCBACA3A0F82C2H3539B1AAAEFE2HFDFFDF282H34384E494D453F04381A0D131F47CB2HCCE85C635B59D392D4D6266521235D185A7873717551666E6646153B397BF4B6E6F480CD9381FFD0FCCA654F4D0F80C292809CD58F9D8BC0988A466377631C5E0E1CA8E1BBA9277034265F776377A8EABAA8C48DD7C5B3E2B8B2A08B9F876540584CFDD5C9D9B1364B5A9B9D8BBFD3D4C0D8ECF9FFEDDBCCC8DAB6A7A5B76D307E6CD0FCEBA55C72667EE8C7DF932HFEE8DC0811051D02061E522HD9CFFBB590849C202D330DAA9A8E9AC7EFFBE32140320C08392D39372E3A2230031B572HBAAC984A4D5941C7D2D4C61205011349585A48643977657B57400EFC377E302E1FE1A06C2H7579DEEAEEBE2H3D3F1FE92400662H898BB9DA817F3E5A5351133H0854BE4710D18C4266006567636B9D2H9A98B4B1B9E5A3A6AAF27E7B6B2F3H3410C4C6C59D20C45F2A024H00215D28", lIlIIili11IIlII1i1iIl()) 
