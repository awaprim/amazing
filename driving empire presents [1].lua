local II1i1iIllIl11l1Il11 = assert local lIllii1II111liII1iII1 = select local I1l11lI1I11i1lIlll1 = tonumber local lIl1I1111iilI1l1lIi1i = unpack local i1lllIIl1lillIl1il1 = pcall local i11lIiii1ilIliiilIi = setfenv local l1I11Illl1llIiI1ili = setmetatable local lIli1I1liiIlil11IlIi1 = type local llI1IIl1IlIIi11ii1l = getfenv local ii1IIIii1Il1llI1I1i = tostring local lllllIllIIliIiIl1ll = error local lIl11IIIl1IlllIlIiliI = string.sub local lIiiIlilIllIll11l1i = string.byte local li1IIlI1lii1iI1iI1I = string.char local lIl1IIli1liIIilIlIIl1 = string.rep local li1lIiiliili111iIl1 = string.gsub local lIli11Ii11lII1l111IlI = string.match local IIiIi1IlIII1iIIi1ii = table.insert local lIlIiliiI1l1lII11lliI = lIiiIlilIllIll11l1i("F", 1) local lIlIlIiili1ii1iII1III, lllIli1i1i11I1lIli1 = #{1760}, #{ 5675, 3281, 236, 4048, 1028, 6371, 1885, 1484, 738, 298, 5269, 275, 5605, 543, 1827, 1625, 3891, 6104, 3926, 6762, 6039 } + lIlIiliiI1l1lII11lliI + 130980 local lIlliI1iiilllIilIIiil = {} local iIlli1I1Ill1i1lIl1l = 1 local llililIIi11II1Ii1Ii, IIi1Iiilli1ilIll1li local function lIl11Illl111Illli1l11(lIl11Iilii1iillllilil, iII1llll1liIllIIiii) local IIiI1IilIIi1IliI1Ii lIl11Iilii1iillllilil = li1lIiiliili111iIl1(lIl11IIIl1IlllIlIiliI(lIl11Iilii1iillllilil, 5), "..", function(llIlli1I1lii11iil1i) if lIiiIlilIllIll11l1i(llIlli1I1lii11iil1i, 2) == 72 then IIiI1IilIIi1IliI1Ii = I1l11lI1I11i1lIlll1(lIl11IIIl1IlllIlIiliI(llIlli1I1lii11iil1i, 1, 1)) return "" else local Iiill1llI1llI1111lI = li1IIlI1lii1iI1iI1I(I1l11lI1I11i1lIlll1(llIlli1I1lii11iil1i, 16)) if IIiI1IilIIi1IliI1Ii then local iiiiIil1Il1I1ll11l1 = lIl1IIli1liIIilIlIIl1(Iiill1llI1llI1111lI, IIiI1IilIIi1IliI1Ii) IIiI1IilIIi1IliI1Ii = nil return iiiiIil1Il1I1ll11l1 else return Iiill1llI1llI1111lI end end end) local function llilIilIIlIIili11I1() local llIi1lIllilli1IIl1l = lIiiIlilIllIll11l1i(lIl11Iilii1iillllilil, iIlli1I1Ill1i1lIl1l, iIlli1I1Ill1i1lIl1l) iIlli1I1Ill1i1lIl1l = iIlli1I1Ill1i1lIl1l + 1 return llIi1lIllilli1IIl1l end local function lIIIi1il1illIlli1ii() local llIi1lIllilli1IIl1l, Iiill1llI1llI1111lI, iiiiIil1Il1I1ll11l1, i111illii1II1l1llll = lIiiIlilIllIll11l1i(lIl11Iilii1iillllilil, iIlli1I1Ill1i1lIl1l, iIlli1I1Ill1i1lIl1l + 3) iIlli1I1Ill1i1lIl1l = iIlli1I1Ill1i1lIl1l + 4 return i111illii1II1l1llll * 16777216 + iiiiIil1Il1I1ll11l1 * 65536 + Iiill1llI1llI1111lI * 256 + llIi1lIllilli1IIl1l end local function I1i1iI1iIiili1iI1li(liilIliIiliiI1iilil, lIlill1IIlIlIIliiIiiI, Il1lIliiiIIlIli1l11) if Il1lIliiiIIlIli1l11 then local i1iiI1il1llI1l1III1, l1ii11I1iIIiilllI1i = 0, 0 for l1Ii1l111ll1iliii1l = lIlill1IIlIlIIliiIiiI, Il1lIliiiIIlIli1l11 do i1iiI1il1llI1l1III1 = i1iiI1il1llI1l1III1 + 2 ^ l1ii11I1iIIiilllI1i * I1i1iI1iIiili1iI1li(liilIliIiliiI1iilil, l1Ii1l111ll1iliii1l) l1ii11I1iIIiilllI1i = l1ii11I1iIIiilllI1i + 1 end return i1iiI1il1llI1l1III1 else local i1I1Il1ii1IIilI1Ill = 2 ^ (lIlill1IIlIlIIliiIiiI - 1) return i1I1Il1ii1IIilI1Ill <= liilIliIiliiI1iilil % (i1I1Il1ii1IIilI1Ill + i1I1Il1ii1IIilI1Ill) and 1 or 0 end end local function lIll11l1Iiil1iIIIlilI() local llIi1lIllilli1IIl1l, Iiill1llI1llI1111lI = lIIIi1il1illIlli1ii(), lIIIi1il1illIlli1ii() if llIi1lIllilli1IIl1l == 0 and Iiill1llI1llI1111lI == 0 then return 0 end return (-2 * I1i1iI1iIiili1iI1li(Iiill1llI1llI1111lI, 32) + 1) * 2 ^ (I1i1iI1iIiili1iI1li(Iiill1llI1llI1111lI, 21, 31) - 1023) * ((I1i1iI1iIiili1iI1li(Iiill1llI1llI1111lI, 1, 20) * 4294967296 + llIi1lIllilli1IIl1l) / 4503599627370496 + 1) end local lIl1liI1IlI11IIiiIl1i = bit or bit32 local IilIlllliliiIili1l1 = lIl1liI1IlI11IIiiIl1i and lIl1liI1IlI11IIiiIl1i.bxor or function(llIi1lIllilli1IIl1l, Iiill1llI1llI1111lI) local ili1Il1ll1liI1l1ll1 = 1 local iiiiIil1Il1I1ll11l1 = 0 while llIi1lIllilli1IIl1l > 0 and Iiill1llI1llI1111lI > 0 do local liliil1IIIliIli1l1l = llIi1lIllilli1IIl1l % 2 local i1IiliilII1lilIilIi = Iiill1llI1llI1111lI % 2 if liliil1IIIliIli1l1l ~= i1IiliilII1lilIilIi then iiiiIil1Il1I1ll11l1 = iiiiIil1Il1I1ll11l1 + ili1Il1ll1liI1l1ll1 end llIi1lIllilli1IIl1l = (llIi1lIllilli1IIl1l - liliil1IIIliIli1l1l) / 2 Iiill1llI1llI1111lI = (Iiill1llI1llI1111lI - i1IiliilII1lilIilIi) / 2 ili1Il1ll1liI1l1ll1 = ili1Il1ll1liI1l1ll1 * 2 end if llIi1lIllilli1IIl1l < Iiill1llI1llI1111lI then llIi1lIllilli1IIl1l = Iiill1llI1llI1111lI end while llIi1lIllilli1IIl1l > 0 do local liliil1IIIliIli1l1l = llIi1lIllilli1IIl1l % 2 if liliil1IIIliIli1l1l > 0 then iiiiIil1Il1I1ll11l1 = iiiiIil1Il1I1ll11l1 + ili1Il1ll1liI1l1ll1 end llIi1lIllilli1IIl1l = (llIi1lIllilli1IIl1l - liliil1IIIliIli1l1l) / 2 ili1Il1ll1liI1l1ll1 = ili1Il1ll1liI1l1ll1 * 2 end return iiiiIil1Il1I1ll11l1 end local function il1iiIiIiIi11I1lI11(iIIl1i11l1IIiI1Il1I) local llI11i1liIiii11liIl = { lIiiIlilIllIll11l1i(lIl11Iilii1iillllilil, iIlli1I1Ill1i1lIl1l, iIlli1I1Ill1i1lIl1l + 3) } iIlli1I1Ill1i1lIl1l = iIlli1I1Ill1i1lIl1l + 4 local llIi1lIllilli1IIl1l = IilIlllliliiIili1l1(llI11i1liIiii11liIl[1], IIi1Iiilli1ilIll1li) local Iiill1llI1llI1111lI = IilIlllliliiIili1l1(llI11i1liIiii11liIl[2], IIi1Iiilli1ilIll1li) local iiiiIil1Il1I1ll11l1 = IilIlllliliiIili1l1(llI11i1liIiii11liIl[3], IIi1Iiilli1ilIll1li) local i111illii1II1l1llll = IilIlllliliiIili1l1(llI11i1liIiii11liIl[4], IIi1Iiilli1ilIll1li) IIi1Iiilli1ilIll1li = (61 * IIi1Iiilli1ilIll1li + iIIl1i11l1IIiI1Il1I) % 256 return i111illii1II1l1llll * 16777216 + iiiiIil1Il1I1ll11l1 * 65536 + Iiill1llI1llI1111lI * 256 + llIi1lIllilli1IIl1l end local function Ii1il11l1ilIllii11i(IiIl11liilIiiilllI1) local ii1li1Il1llIl1ll1lI = lIIIi1il1illIlli1ii() local l11l1IIII1iIlI1I1i1 = "" for l1Ii1l111ll1iliii1l = lIlIlIiili1ii1iII1III, ii1li1Il1llIl1ll1lI do l11l1IIII1iIlI1I1i1 = l11l1IIII1iIlI1I1i1 .. li1IIlI1lii1iI1iI1I(IilIlllliliiIili1l1(lIiiIlilIllIll11l1i(lIl11Iilii1iillllilil, iIlli1I1Ill1i1lIl1l + l1Ii1l111ll1iliii1l - 1), llililIIi11II1Ii1Ii)) llililIIi11II1Ii1Ii = (IiIl11liilIiiilllI1 * llililIIi11II1Ii1Ii + 121) % 256 end iIlli1I1Ill1i1lIl1l = iIlli1I1Ill1i1lIl1l + ii1li1Il1llIl1ll1lI return l11l1IIII1iIlI1I1i1 end llililIIi11II1Ii1Ii = llilIilIIlIIili11I1() IIi1Iiilli1ilIll1li = llilIilIIlIIili11I1() local i1IlI1IIi1i1I1111iI = {} for l1Ii1l111ll1iliii1l = lIlIlIiili1ii1iII1III, llilIilIIlIIili11I1() do local lIli1llll1lIIl1iIi1lI = llilIilIIlIIili11I1() local i1IlilI1Iii1IIil1i1 = (l1Ii1l111ll1iliii1l - 1) * 2 i1IlI1IIi1i1I1111iI[i1IlilI1Iii1IIil1i1] = I1i1iI1iIiili1iI1li(lIli1llll1lIIl1iIi1lI, 1, 4) i1IlI1IIi1i1I1111iI[i1IlilI1Iii1IIil1i1 + 1] = I1i1iI1iIiili1iI1li(lIli1llll1lIIl1iIi1lI, 5, 8) end local function lIl1111Il1lIil1l1il11() local lil1111illIIli1llIi = { nil, {}, {}, nil, {}, nil, {} } lIIIi1il1illIlli1ii() lIIIi1il1illIlli1ii() lIIIi1il1illIlli1ii() llilIilIIlIIili11I1() llilIilIIlIIili11I1() lIIIi1il1illIlli1ii() llilIilIIlIIili11I1() lil1111illIIli1llIi[4] = llilIilIIlIIili11I1() llilIilIIlIIili11I1() local il1I1l11IIllliIlI1I = lIIIi1il1illIlli1ii() for l1Ii1l111ll1iliii1l = lIlIlIiili1ii1iII1III, il1I1l11IIllliIlI1I do lil1111illIIli1llIi[3][l1Ii1l111ll1iliii1l] = lIIIi1il1illIlli1ii() end llilIilIIlIIili11I1() local il1I1l11IIllliIlI1I = lIIIi1il1illIlli1ii() - (#{ 3277, 5574, 4233, 883, 3285, 5946, 1970, 2537, 3704, 3478, 5468, 6062, 2193, 2974, 6509, 1619, 3090, 1986, 4578, 5951, 1075, 4475 } + lIlIiliiI1l1lII11lliI + 133640) local Ili1l1Ii1lllIIlliIi = llilIilIIlIIili11I1() for l1Ii1l111ll1iliii1l = lIlIlIiili1ii1iII1III, il1I1l11IIllliIlI1I do local Ili1IIlil1l1ii1IIil local lIli1I1liiIlil11IlIi1 = llilIilIIlIIili11I1() if lIli1I1liiIlil11IlIi1 == #{ 4548, 164, 5533, 6064, 6021, 2863, 6678, 359, 5254, 6065, 1003, 5073, 5784, 3291, 1970, 3636, 3184, 2330, 6643, 1238 } + lIlIiliiI1l1lII11lliI + 146 then Ili1IIlil1l1ii1IIil = lIIIi1il1illIlli1ii() end if lIli1I1liiIlil11IlIi1 == #{ 2363, 3629, 612, 4799, 5734, 61, 1171, 5511, 2160, 5960, 1544, 4489, 3711, 2802, 3937, 1878, 1435, 2791, 2207, 4115, 3996 } + lIlIiliiI1l1lII11lliI + 4 then Ili1IIlil1l1ii1IIil = llilIilIIlIIili11I1() + lIIIi1il1illIlli1ii() + lIll11l1Iiil1iIIIlilI() end if lIli1I1liiIlil11IlIi1 == #{ 2525, 3297, 2740, 730, 3198, 821, 5859, 4760, 4739, 4999, 5392, 1458, 6423, 2906, 3677, 3383, 6252, 5533, 6100, 3971 } + lIlIiliiI1l1lII11lliI + -30 then Ili1IIlil1l1ii1IIil = lIll11l1Iiil1iIIIlilI() end if lIli1I1liiIlil11IlIi1 == #{ 3133, 5183, 2699, 640, 929, 5585, 4865, 3164, 2922, 6119, 4028, 5887, 2510, 4372, 5552, 2004, 4450, 3613, 2456, 4973, 4811, 1473, 4427, 4705 } + lIlIiliiI1l1lII11lliI + 114 then Ili1IIlil1l1ii1IIil = #{ 4359, 4944, 1692, 3069, 1428, 3014, 2487, 203, 2275, 3278, 5444, 456, 5224, 2775, 5960, 2289, 176, 1892, 3761, 5221, 4183, 5226, 5136, 6495 } + lIlIiliiI1l1lII11lliI + 107390 == #{ 4359, 4944, 1692, 3069, 1428, 3014, 2487, 203, 2275, 3278, 5444, 456, 5224, 2775, 5960, 2289, 176, 1892, 3761, 5221, 4183, 5226, 5136, 6495 } + lIlIiliiI1l1lII11lliI + 107390 end if lIli1I1liiIlil11IlIi1 == #{ 2910, 4378, 1911, 4157, 6662, 950, 3722, 3683, 4501, 4406, 1814, 3504, 4822, 4858, 1201, 231, 3486, 531, 880, 1447, 4737 } + lIlIiliiI1l1lII11lliI + 131 then Ili1IIlil1l1ii1IIil = lIll11l1Iiil1iIIIlilI() end if lIli1I1liiIlil11IlIi1 == #{ 4366, 3464, 5611, 3569, 2407, 13, 4713, 6258, 6026, 5473, 3944, 4033, 6604, 5500, 2071, 4164, 4068, 6146, 5414, 2887, 1214, 3371, 4559 } + lIlIiliiI1l1lII11lliI + 86 then Ili1IIlil1l1ii1IIil = #{ 6201, 1426, 5793, 5184, 768, 1855, 679, 303, 2991, 1088, 5540, 1091, 3906, 3960, 6045, 4704, 1885, 3611, 1568, 412, 6301 } + lIlIiliiI1l1lII11lliI + 42515 == #{ 5043, 4771, 6539, 5605, 4916, 1947, 6204, 6137, 3050, 280, 1066, 1206, 4093, 4444, 6230, 4543, 3966, 2625, 642, 5811, 2863, 6577 } + lIlIiliiI1l1lII11lliI + 41511 end if lIli1I1liiIlil11IlIi1 == #{ 5373, 546, 2091, 2572, 648, 5618, 3899, 6814, 857, 2965, 114, 3964, 3918, 4555, 6341, 3100, 281, 5512, 5052, 6086, 5123, 5977, 6733, 4264 } + lIlIiliiI1l1lII11lliI + 102 then Ili1IIlil1l1ii1IIil = lIl11IIIl1IlllIlIiliI(Ii1il11l1ilIllii11i(Ili1l1Ii1lllIIlliIi), #{ 6165, 1675, 4902, 4863 }) end if lIli1I1liiIlil11IlIi1 == #{ 2857, 4859, 3551, 3715, 6045, 5771, 5890, 6389, 3602, 1880, 1249, 989, 1649, 6277, 6136, 1441, 5316, 4363, 6389, 4202, 1795, 6087 } + lIlIiliiI1l1lII11lliI + 3 then Ili1IIlil1l1ii1IIil = lIIIi1il1illIlli1ii() end if lIli1I1liiIlil11IlIi1 == #{ 1178, 2207, 4234, 3217, 5389, 6586, 4944, 1842, 2947, 4625, 3542, 2394, 6654, 3400, 4040, 6509, 5871, 6130, 266, 6417, 2304 } + lIlIiliiI1l1lII11lliI + -52 then Ili1IIlil1l1ii1IIil = lIIIi1il1illIlli1ii() end lil1111illIIli1llIi[5][l1Ii1l111ll1iliii1l - lIlIlIiili1ii1iII1III] = Ili1IIlil1l1ii1IIil end llilIilIIlIIili11I1() lil1111illIIli1llIi[6] = llilIilIIlIIili11I1() local liil1iIli1i1iiii1I1 = lIIIi1il1illIlli1ii() - (#{ 6223, 3361, 5289, 4493, 4232, 589, 491, 4257, 6232, 4375, 5323, 5923, 5759, 6587, 6116, 5878, 3004, 164, 4637, 6024, 1539 } + lIlIiliiI1l1lII11lliI + 133673) local lIliIiliI1iI1iillI111 = llilIilIIlIIili11I1() for l1Ii1l111ll1iliii1l = lIlIlIiili1ii1iII1III, liil1iIli1i1iiii1I1 do local iiiI11I1lilil111iii = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local lIli1llll1lIIl1iIi1lI = il1iiIiIiIi11I1lI11(lIliIiliI1iI1iillI111) iiiI11I1lilil111iii[120556] = I1i1iI1iIiili1iI1li(lIli1llll1lIIl1iIi1lI, #{ 5765, 2154, 3394, 5283, 4659, 2779, 4716, 777, 1635, 1070, 6831, 138, 4623, 607, 2754, 4072, 6345, 4955, 589 }, #{ 3484, 2381, 3822, 4235, 4853, 1855, 3096, 1427, 457, 1315, 5996, 2146, 1942, 3577, 726, 2700, 5421, 342, 4803, 4854, 4633, 5407, 1024 } + lIlIiliiI1l1lII11lliI + -67) iiiI11I1lilil111iii[36538] = I1i1iI1iIiili1iI1li(lIli1llll1lIIl1iIi1lI, #{2329}, #{ 3137, 4092, 4447, 4077, 3287, 4413, 6804, 2664, 5391 }) iiiI11I1lilil111iii[5] = I1i1iI1iIiili1iI1li(lIli1llll1lIIl1iIi1lI, #{ 3957, 1022, 653, 2828, 4509, 1374, 3071, 6117, 5091, 6212, 3530, 5319, 4763, 2532, 1037, 6791, 4513, 30, 1320 }, #{ 1680, 5865, 552, 5033, 6539, 3087, 4939, 2757, 1315, 5098, 5434, 2372, 1548, 358, 276, 1027, 907, 2977, 6494, 3350, 4518, 4344, 5858 } + lIlIiliiI1l1lII11lliI + -67) iiiI11I1lilil111iii[10] = I1i1iI1iIiili1iI1li(lIli1llll1lIIl1iIi1lI, #{ 6614, 2174, 282, 1397, 773, 6545, 6597, 839, 5575, 1459 }, #{ 4489, 5834, 1766, 1610, 2072, 5858, 255, 6380, 3993, 335, 4107, 4981, 553, 3222, 6084, 5069, 3681, 1894 }) iiiI11I1lilil111iii[3] = I1i1iI1iIiili1iI1li(lIli1llll1lIIl1iIi1lI, #{ 5524, 2791, 656, 595, 6523, 2914, 3111, 747, 4031, 6061, 4293, 2362, 1641, 6052, 6394, 3050, 2276, 5000, 1948, 5617 } + lIlIiliiI1l1lII11lliI + -63, #{ 4399, 4051, 3741, 1430, 1880, 2264, 171, 6408, 4976, 5116, 6522, 4381, 6039, 2480, 2403, 4570, 5794, 772, 962, 5698, 5151, 3362, 6850, 1900 } + lIlIiliiI1l1lII11lliI + -62) iiiI11I1lilil111iii[4] = I1i1iI1iIiili1iI1li(lIli1llll1lIIl1iIi1lI, #{3461}, #{ 3314, 5121, 357, 5565, 5180, 4924, 6087, 6894, 6421, 6792, 1830, 3389, 2974, 444, 5583, 3274, 4256, 1854 }) iiiI11I1lilil111iii[7] = I1i1iI1iIiili1iI1li(lIli1llll1lIIl1iIi1lI, #{6178}, #{ 580, 4190, 3711, 6091, 6498, 688, 6589, 482, 4325 }) lil1111illIIli1llIi[7][l1Ii1l111ll1iliii1l] = iiiI11I1lilil111iii end for l1Ii1l111ll1iliii1l = lIlIlIiili1ii1iII1III, liil1iIli1i1iiii1I1 do local iiiI11I1lilil111iii = lil1111illIIli1llIi[7][l1Ii1l111ll1iliii1l] local lIlIili1IIiIi1lIIilil = i1IlI1IIi1i1I1111iI[iiiI11I1lilil111iii[3]] if lIlIili1IIiIi1lIIilil == #{6697, 4761} and iiiI11I1lilil111iii[10] > 255 then iiiI11I1lilil111iii[2] = true iiiI11I1lilil111iii[8] = lil1111illIIli1llIi[5][iiiI11I1lilil111iii[10] - 256] end if lIlIili1IIiIi1lIIilil == #{ 1023, 677, 5530, 3217 } then iiiI11I1lilil111iii[6] = lil1111illIIli1llIi[5][iiiI11I1lilil111iii[4]] end if lIlIili1IIiIi1lIIilil == #{3709} and 255 < iiiI11I1lilil111iii[7] then iiiI11I1lilil111iii[9] = true iiiI11I1lilil111iii[1] = lil1111illIIli1llIi[5][iiiI11I1lilil111iii[7] - 256] end if lIlIili1IIiIi1lIIilil == #{ 568, 1957, 5657 } then if 255 < iiiI11I1lilil111iii[7] then iiiI11I1lilil111iii[9] = true iiiI11I1lilil111iii[1] = lil1111illIIli1llIi[5][iiiI11I1lilil111iii[7] - 256] end if iiiI11I1lilil111iii[10] > 255 then iiiI11I1lilil111iii[2] = true iiiI11I1lilil111iii[8] = lil1111illIIli1llIi[5][iiiI11I1lilil111iii[10] - 256] end end end lil1111illIIli1llIi[1] = llilIilIIlIIili11I1() llilIilIIlIIili11I1() local il1I1l11IIllliIlI1I = lIIIi1il1illIlli1ii() for l1Ii1l111ll1iliii1l = lIlIlIiili1ii1iII1III, il1I1l11IIllliIlI1I do lil1111illIIli1llIi[2][l1Ii1l111ll1iliii1l - lIlIlIiili1ii1iII1III] = lIl1111Il1lIil1l1il11() end lIIIi1il1illIlli1ii() lIIIi1il1illIlli1ii() lIIIi1il1illIlli1ii() return lil1111illIIli1llIi end local function lIlliliIiIlllI11l1iI1(lil1111illIIli1llIi, iII1llll1liIllIIiii, lIlilil1i1iI1ilIiiIi1) local Ii1IlI11illi111iI1i, I1iiIllIlIii11ii11l = 1, 16 local ilii1Ii1Ii1Iii11Iii = lil1111illIIli1llIi[7] local Il1i1i11IIi1lii1I11 = 6 local iIi1iiIlii1iI1iIill = lil1111illIIli1llIi[2] local illl1ii1llI111lil1i = lil1111illIIli1llIi[1] local Il11Ill11iII1l111I1 = lil1111illIIli1llIi[4] local lIl1illii1IiIIllii1li = 3 local lliiiiIIliii1iIiliI = lil1111illIIli1llIi[3] local lIlIi1lli1iIiil1ll1ii = 7 local function il1i1I1i11lIlIIilll(...) local lIlIliiI1i11i11lliIiI = 0 local llili11IIi1i1lIi1il = { lIl1I1111iilI1l1lIi1i({}, 1, Il11Ill11iII1l111I1) } local lllllIil1liI1lii1Il = 1 local iI1lll111iliIIiiIl1 = {} local Ilil11l1111lllll1II = {} local iII1llll1liIllIIiii = llI1IIl1IlIIi11ii1l() local lil1iIII1Ii1i1liiI1 = { ... } local iiiIl1l1l11l1I1IiIi = #lil1iIII1Ii1i1liiI1 - 1 for l1Ii1l111ll1iliii1l = 0, iiiIl1l1l11l1I1IiIi do if l1Ii1l111ll1iliii1l < illl1ii1llI111lil1i then llili11IIi1i1lIi1il[l1Ii1l111ll1iliii1l] = lil1iIII1Ii1i1liiI1[l1Ii1l111ll1iliii1l + 1] end end local function l1IiIIiI11Ili1li1iI(...) local iiiiIil1Il1I1ll11l1 = lIllii1II111liII1iII1("#", ...) local II1liiIli11lIiIi1Il = { ... } return iiiiIil1Il1I1ll11l1, II1liiIli11lIiIi1Il end local function ili1i1111l1I11iili1() while true do local III1iiliIilIllliIii = ilii1Ii1Ii1Iii11Iii[lllllIil1liI1lii1Il] local lIliI1IlI1Ii1IIl1IIll = III1iiliIilIllliIii[3] lllllIil1liI1lii1Il = lllllIil1liI1lii1Il + 1 if lIliI1IlI1Ii1IIl1IIll < 12 then if lIliI1IlI1Ii1IIl1IIll >= 6 then if lIliI1IlI1Ii1IIl1IIll >= 9 then if lIliI1IlI1Ii1IIl1IIll >= 10 then if lIliI1IlI1Ii1IIl1IIll == 11 then local Iiill1llI1llI1111lI, iiiiIil1Il1I1ll11l1 if III1iiliIilIllliIii[9] then Iiill1llI1llI1111lI = III1iiliIilIllliIii[1] else Iiill1llI1llI1111lI = llili11IIi1i1lIi1il[III1iiliIilIllliIii[7]] end if III1iiliIilIllliIii[2] then iiiiIil1Il1I1ll11l1 = III1iiliIilIllliIii[8] else iiiiIil1Il1I1ll11l1 = llili11IIi1i1lIi1il[III1iiliIilIllliIii[10]] end if Iiill1llI1llI1111lI == iiiiIil1Il1I1ll11l1 ~= (III1iiliIilIllliIii[5] ~= 0) then lllllIil1liI1lii1Il = lllllIil1liI1lii1Il + 1 end else llili11IIi1i1lIi1il[III1iiliIilIllliIii[5]] = III1iiliIilIllliIii[7] ~= 0 if III1iiliIilIllliIii[10] ~= 0 then lllllIil1liI1lii1Il = lllllIil1liI1lii1Il + 1 end end else iII1llll1liIllIIiii[III1iiliIilIllliIii[6]] = llili11IIi1i1lIi1il[III1iiliIilIllliIii[5]] end elseif lIliI1IlI1Ii1IIl1IIll >= 7 then if lIliI1IlI1Ii1IIl1IIll ~= 8 then local Ii11iIIllIIillli1II = III1iiliIilIllliIii[5] local i1IlilI1Iii1IIil1i1 = Ii11iIIllIIillli1II + 2 local iIil1IIi1lIil1I1il1 = { llili11IIi1i1lIi1il[Ii11iIIllIIillli1II](llili11IIi1i1lIi1il[Ii11iIIllIIillli1II + 1], llili11IIi1i1lIi1il[Ii11iIIllIIillli1II + 2]) } for l1Ii1l111ll1iliii1l = 1, III1iiliIilIllliIii[10] do llili11IIi1i1lIi1il[i1IlilI1Iii1IIil1i1 + l1Ii1l111ll1iliii1l] = iIil1IIi1lIil1I1il1[l1Ii1l111ll1iliii1l] end if llili11IIi1i1lIi1il[Ii11iIIllIIillli1II + 3] ~= nil then llili11IIi1i1lIi1il[Ii11iIIllIIillli1II + 2] = llili11IIi1i1lIi1il[Ii11iIIllIIillli1II + 3] else lllllIil1liI1lii1Il = lllllIil1liI1lii1Il + 1 end else llili11IIi1i1lIi1il[III1iiliIilIllliIii[5]] = iII1llll1liIllIIiii[III1iiliIilIllliIii[6]] end else lllllIil1liI1lii1Il = lllllIil1liI1lii1Il + (III1iiliIilIllliIii[4] - lllIli1i1i11I1lIli1) end elseif lIliI1IlI1Ii1IIl1IIll < 3 then if lIliI1IlI1Ii1IIl1IIll < 1 then local lll111illIi1lI11Il1 = llili11IIi1i1lIi1il[III1iiliIilIllliIii[7]] local iiiiIil1Il1I1ll11l1 if III1iiliIilIllliIii[2] then iiiiIil1Il1I1ll11l1 = III1iiliIilIllliIii[8] else iiiiIil1Il1I1ll11l1 = llili11IIi1i1lIi1il[III1iiliIilIllliIii[10]] end llili11IIi1i1lIi1il[III1iiliIilIllliIii[5] + 1] = lll111illIi1lI11Il1 llili11IIi1i1lIi1il[III1iiliIilIllliIii[5]] = lll111illIi1lI11Il1[iiiiIil1Il1I1ll11l1] elseif lIliI1IlI1Ii1IIl1IIll == 2 then local Iiill1llI1llI1111lI, iiiiIil1Il1I1ll11l1 if III1iiliIilIllliIii[9] then Iiill1llI1llI1111lI = III1iiliIilIllliIii[1] else Iiill1llI1llI1111lI = llili11IIi1i1lIi1il[III1iiliIilIllliIii[7]] end if III1iiliIilIllliIii[2] then iiiiIil1Il1I1ll11l1 = III1iiliIilIllliIii[8] else iiiiIil1Il1I1ll11l1 = llili11IIi1i1lIi1il[III1iiliIilIllliIii[10]] end if Iiill1llI1llI1111lI < iiiiIil1Il1I1ll11l1 ~= (III1iiliIilIllliIii[5] ~= 0) then lllllIil1liI1lii1Il = lllllIil1liI1lii1Il + 1 end else llili11IIi1i1lIi1il[III1iiliIilIllliIii[5]] = llili11IIi1i1lIi1il[III1iiliIilIllliIii[7]] end elseif lIliI1IlI1Ii1IIl1IIll < 4 then if III1iiliIilIllliIii[7] == 199 then lllllIil1liI1lii1Il = lllllIil1liI1lii1Il - 1 ilii1Ii1Ii1Iii11Iii[lllllIil1liI1lii1Il] = { [3] = 18, [5] = (III1iiliIilIllliIii[5] - 151) % 256, [7] = (III1iiliIilIllliIii[10] - 151) % 256 } elseif not not llili11IIi1i1lIi1il[III1iiliIilIllliIii[5]] == (III1iiliIilIllliIii[10] == 0) then lllllIil1liI1lii1Il = lllllIil1liI1lii1Il + 1 end elseif lIliI1IlI1Ii1IIl1IIll ~= 5 then local iiiiIil1Il1I1ll11l1 if III1iiliIilIllliIii[2] then iiiiIil1Il1I1ll11l1 = III1iiliIilIllliIii[8] else iiiiIil1Il1I1ll11l1 = llili11IIi1i1lIi1il[III1iiliIilIllliIii[10]] end llili11IIi1i1lIi1il[III1iiliIilIllliIii[5]] = llili11IIi1i1lIi1il[III1iiliIilIllliIii[7]][iiiiIil1Il1I1ll11l1] elseif III1iiliIilIllliIii[10] == 192 then lllllIil1liI1lii1Il = lllllIil1liI1lii1Il - 1 ilii1Ii1Ii1Iii11Iii[lllllIil1liI1lii1Il] = { [3] = 1, [5] = (III1iiliIilIllliIii[5] - 4) % 256, [7] = (III1iiliIilIllliIii[7] - 4) % 256 } elseif III1iiliIilIllliIii[10] == 2 then lllllIil1liI1lii1Il = lllllIil1liI1lii1Il - 1 ilii1Ii1Ii1Iii11Iii[lllllIil1liI1lii1Il] = { [3] = 16, [5] = (III1iiliIilIllliIii[5] - 185) % 256, [7] = (III1iiliIilIllliIii[7] - 185) % 256 } elseif III1iiliIilIllliIii[10] == 14 then lllllIil1liI1lii1Il = lllllIil1liI1lii1Il - 1 ilii1Ii1Ii1Iii11Iii[lllllIil1liI1lii1Il] = { [3] = 3, [5] = (III1iiliIilIllliIii[5] - 131) % 256, [10] = (III1iiliIilIllliIii[7] - 131) % 256 } else local l1l1lIiil11il11IiiI = III1iiliIilIllliIii[5] local lIl11l1i1iiiiII1liill = {} for l1lilIiI1ili11lIii1, ll1iII1l11liIII1I1I in pairs(iI1lll111iliIIiiIl1[llili11IIi1i1lIi1il]) do for l1lilIiI1ili11lIii1, iilll1I1lllII1IliIl in pairs(ll1iII1l11liIII1I1I) do if iilll1I1lllII1IliIl[1] == llili11IIi1i1lIi1il and l1l1lIiil11il11IiiI <= iilll1I1lllII1IliIl[2] then local lIliIilliII1IiIIIl1iI = iilll1I1lllII1IliIl[2] if not lIl11l1i1iiiiII1liill[lIliIilliII1IiIIIl1iI] then lIlliliIiIlllI11l1iI1(Ilil11l1111lllll1II, llili11IIi1i1lIi1il[lIliIilliII1IiIIIl1iI]) lIl11l1i1iiiiII1liill[lIliIilliII1IiIIIl1iI] = #Ilil11l1111lllll1II end iilll1I1lllII1IliIl[1] = Ilil11l1111lllll1II iilll1I1lllII1IliIl[2] = lIl11l1i1iiiiII1liill[lIliIilliII1IiIIIl1iI] end end end end elseif lIliI1IlI1Ii1IIl1IIll >= 18 then if lIliI1IlI1Ii1IIl1IIll >= 21 then if lIliI1IlI1Ii1IIl1IIll >= 22 then if lIliI1IlI1Ii1IIl1IIll ~= 23 then local l1ii1l1ilii1lii1Il1 = iIi1iiIlii1iI1iIill[III1iiliIilIllliIii[4]] local illlllI1lII1l111I1I = {} if l1ii1l1ilii1lii1Il1[Il1i1i11IIi1lii1I11] > 0 then do local ll1iII1l11liIII1I1I = {} illlllI1lII1l111I1I = l1I11Illl1llIiI1ili({}, { __index = function(II1liiIli11lIiIi1Il, lIllilII11Ill1illll1l) local iilll1I1lllII1IliIl = ll1iII1l11liIII1I1I[lIllilII11Ill1illll1l] return iilll1I1lllII1IliIl[1][iilll1I1lllII1IliIl[2]] end, __newindex = function(II1liiIli11lIiIi1Il, lIllilII11Ill1illll1l, l1liiiI1I1iII1i1iII) local iilll1I1lllII1IliIl = ll1iII1l11liIII1I1I[lIllilII11Ill1illll1l] iilll1I1lllII1IliIl[1][iilll1I1lllII1IliIl[2]] = l1liiiI1I1iII1i1iII end }) for l1Ii1l111ll1iliii1l = 1, l1ii1l1ilii1lii1Il1[Il1i1i11IIi1lii1I11] do local illIliIIiliillI1lI1 = ilii1Ii1Ii1Iii11Iii[lllllIil1liI1lii1Il] if illIliIIiliillI1lI1[lIl1illii1IiIIllii1li] == Ii1IlI11illi111iI1i then ll1iII1l11liIII1I1I[l1Ii1l111ll1iliii1l - 1] = { llili11IIi1i1lIi1il, illIliIIiliillI1lI1[lIlIi1lli1iIiil1ll1ii] } elseif illIliIIiliillI1lI1[lIl1illii1IiIIllii1li] == I1iiIllIlIii11ii11l then ll1iII1l11liIII1I1I[l1Ii1l111ll1iliii1l - 1] = { lIlilil1i1iI1ilIiiIi1, illIliIIiliillI1lI1[lIlIi1lli1iIiil1ll1ii] } end lllllIil1liI1lii1Il = lllllIil1liI1lii1Il + 1 end if not iI1lll111iliIIiiIl1[llili11IIi1i1lIi1il] then iI1lll111iliIIiiIl1[llili11IIi1i1lIi1il] = {ll1iII1l11liIII1I1I} else IIiIi1IlIII1iIIi1ii(iI1lll111iliIIiiIl1[llili11IIi1i1lIi1il], ll1iII1l11liIII1I1I) end end end local lIlIIli11lli1Ii1iiIil = lIlliliIiIlllI11l1iI1(l1ii1l1ilii1lii1Il1, iII1llll1liIllIIiii, illlllI1lII1l111I1I) llili11IIi1i1lIi1il[III1iiliIilIllliIii[5]] = lIlIIli11lli1Ii1iiIil else local Iiill1llI1llI1111lI, iiiiIil1Il1I1ll11l1 if III1iiliIilIllliIii[9] then Iiill1llI1llI1111lI = III1iiliIilIllliIii[1] else Iiill1llI1llI1111lI = llili11IIi1i1lIi1il[III1iiliIilIllliIii[7]] end if III1iiliIilIllliIii[2] then iiiiIil1Il1I1ll11l1 = III1iiliIilIllliIii[8] else iiiiIil1Il1I1ll11l1 = llili11IIi1i1lIi1il[III1iiliIilIllliIii[10]] end llili11IIi1i1lIi1il[III1iiliIilIllliIii[5]][Iiill1llI1llI1111lI] = iiiiIil1Il1I1ll11l1 end else local Ii11iIIllIIillli1II = III1iiliIilIllliIii[5] local lil1iIII1Ii1i1liiI1 = III1iiliIilIllliIii[7] local IliI11IilIlIlillIiI = III1iiliIilIllliIii[10] local IllIilIi111Il1Ili1l, lIlii1l1IlIllilI1Iil1, ili1i1111l1I11iili1 if lil1iIII1Ii1i1liiI1 ~= 1 then if lil1iIII1Ii1i1liiI1 ~= 0 then lIlii1l1IlIllilI1Iil1 = Ii11iIIllIIillli1II + lil1iIII1Ii1i1liiI1 - 1 else lIlii1l1IlIllilI1Iil1 = lIlIliiI1i11i11lliIiI end lIlii1l1IlIllilI1Iil1, IllIilIi111Il1Ili1l = l1IiIIiI11Ili1li1iI(llili11IIi1i1lIi1il[Ii11iIIllIIillli1II](lIl1I1111iilI1l1lIi1i(llili11IIi1i1lIi1il, Ii11iIIllIIillli1II + 1, lIlii1l1IlIllilI1Iil1))) else lIlii1l1IlIllilI1Iil1, IllIilIi111Il1Ili1l = l1IiIIiI11Ili1li1iI(llili11IIi1i1lIi1il[Ii11iIIllIIillli1II]()) end if IliI11IilIlIlillIiI ~= 1 then if IliI11IilIlIlillIiI ~= 0 then lIlii1l1IlIllilI1Iil1 = Ii11iIIllIIillli1II + IliI11IilIlIlillIiI - 2 lIlIliiI1i11i11lliIiI = lIlii1l1IlIllilI1Iil1 + 1 else lIlii1l1IlIllilI1Iil1 = lIlii1l1IlIllilI1Iil1 + Ii11iIIllIIillli1II - 1 lIlIliiI1i11i11lliIiI = lIlii1l1IlIllilI1Iil1 end ili1i1111l1I11iili1 = 0 for l1Ii1l111ll1iliii1l = Ii11iIIllIIillli1II, lIlii1l1IlIllilI1Iil1 do ili1i1111l1I11iili1 = ili1i1111l1I11iili1 + 1 llili11IIi1i1lIi1il[l1Ii1l111ll1iliii1l] = IllIilIi111Il1Ili1l[ili1i1111l1I11iili1] end else lIlIliiI1i11i11lliIiI = Ii11iIIllIIillli1II - 1 end for l1Ii1l111ll1iliii1l = lIlIliiI1i11i11lliIiI + 1, Il11Ill11iII1l111I1 do llili11IIi1i1lIi1il[l1Ii1l111ll1iliii1l] = nil end end elseif lIliI1IlI1Ii1IIl1IIll < 19 then iI1lll111iliIIiiIl1[llili11IIi1i1lIi1il] = nil local Ii11iIIllIIillli1II = III1iiliIilIllliIii[5] local iliI1I1iliiIiIIi1lI = III1iiliIilIllliIii[7] if iliI1I1iliiIiIIi1lI == 1 then return true end local lIlii1l1IlIllilI1Iil1 = Ii11iIIllIIillli1II + iliI1I1iliiIiIIi1lI - 2 if iliI1I1iliiIiIIi1lI == 0 then lIlii1l1IlIllilI1Iil1 = lIlIliiI1i11i11lliIiI end return true, Ii11iIIllIIillli1II, lIlii1l1IlIllilI1Iil1 elseif lIliI1IlI1Ii1IIl1IIll ~= 20 then local Iiill1llI1llI1111lI, iiiiIil1Il1I1ll11l1 if III1iiliIilIllliIii[9] then Iiill1llI1llI1111lI = III1iiliIilIllliIii[1] else Iiill1llI1llI1111lI = llili11IIi1i1lIi1il[III1iiliIilIllliIii[7]] end if III1iiliIilIllliIii[2] then iiiiIil1Il1I1ll11l1 = III1iiliIilIllliIii[8] else iiiiIil1Il1I1ll11l1 = llili11IIi1i1lIi1il[III1iiliIilIllliIii[10]] end llili11IIi1i1lIi1il[III1iiliIilIllliIii[5]] = Iiill1llI1llI1111lI - iiiiIil1Il1I1ll11l1 elseif III1iiliIilIllliIii[10] == 87 then lllllIil1liI1lii1Il = lllllIil1liI1lii1Il - 1 ilii1Ii1Ii1Iii11Iii[lllllIil1liI1lii1Il] = { [3] = 14, [5] = (III1iiliIilIllliIii[5] - 148) % 256, [7] = (III1iiliIilIllliIii[7] - 148) % 256 } else for l1Ii1l111ll1iliii1l = III1iiliIilIllliIii[5], III1iiliIilIllliIii[7] do llili11IIi1i1lIi1il[l1Ii1l111ll1iliii1l] = nil end end elseif lIliI1IlI1Ii1IIl1IIll >= 15 then if lIliI1IlI1Ii1IIl1IIll < 16 then local Iiill1llI1llI1111lI, iiiiIil1Il1I1ll11l1 if III1iiliIilIllliIii[9] then Iiill1llI1llI1111lI = III1iiliIilIllliIii[1] else Iiill1llI1llI1111lI = llili11IIi1i1lIi1il[III1iiliIilIllliIii[7]] end if III1iiliIilIllliIii[2] then iiiiIil1Il1I1ll11l1 = III1iiliIilIllliIii[8] else iiiiIil1Il1I1ll11l1 = llili11IIi1i1lIi1il[III1iiliIilIllliIii[10]] end llili11IIi1i1lIi1il[III1iiliIilIllliIii[5]] = Iiill1llI1llI1111lI + iiiiIil1Il1I1ll11l1 elseif lIliI1IlI1Ii1IIl1IIll == 17 then llili11IIi1i1lIi1il[III1iiliIilIllliIii[5]] = { lIl1I1111iilI1l1lIi1i(lIlliI1iiilllIilIIiil, 1, III1iiliIilIllliIii[7] == 0 and 255 or III1iiliIilIllliIii[7]) } elseif III1iiliIilIllliIii[10] == 182 then lllllIil1liI1lii1Il = lllllIil1liI1lii1Il - 1 ilii1Ii1Ii1Iii11Iii[lllllIil1liI1lii1Il] = { [3] = 7, [5] = (III1iiliIilIllliIii[5] - 20) % 256, [10] = (III1iiliIilIllliIii[7] - 20) % 256 } else llili11IIi1i1lIi1il[III1iiliIilIllliIii[5]] = lIlilil1i1iI1ilIiiIi1[III1iiliIilIllliIii[7]] end elseif lIliI1IlI1Ii1IIl1IIll < 13 then llili11IIi1i1lIi1il[III1iiliIilIllliIii[5]] = III1iiliIilIllliIii[6] elseif lIliI1IlI1Ii1IIl1IIll ~= 14 then local iIil1IIi1lIil1I1il1 = llili11IIi1i1lIi1il[III1iiliIilIllliIii[7]] for l1Ii1l111ll1iliii1l = III1iiliIilIllliIii[7] + 1, III1iiliIilIllliIii[10] do iIil1IIi1lIil1I1il1 = iIil1IIi1lIil1I1il1 .. llili11IIi1i1lIi1il[l1Ii1l111ll1iliii1l] end llili11IIi1i1lIi1il[III1iiliIilIllliIii[5]] = iIil1IIi1lIil1I1il1 else lIlilil1i1iI1ilIiiIi1[III1iiliIilIllliIii[7]] = llili11IIi1i1lIi1il[III1iiliIilIllliIii[5]] end end end local ll11illIiIiIiIl1llI, l11l1IIII1iIlI1I1i1, l1l1lIiil11il11IiiI, i11IiiIIl1IIlil11iI = i1lllIIl1lillIl1il1(ili1i1111l1I11iili1) if ll11illIiIiIiIl1llI then if l1l1lIiil11il11IiiI then return lIl1I1111iilI1l1lIi1i(llili11IIi1i1lIi1il, l1l1lIiil11il11IiiI, i11IiiIIl1IIlil11iI) end else lllllIllIIliIiIl1ll("Luraph Script:" .. (lliiiiIIliii1iIiliI[lllllIil1liI1lii1Il - 1] or "") .. ": " .. ii1IIIii1Il1llI1I1i(l11l1IIII1iIlI1I1i1), 0) end end i11lIiii1ilIliiilIi(il1i1I1i11lIlIIilll, iII1llll1liIllIIiii) return il1i1I1i11lIlIIilll end local lIl11l1i1iiiiII1liill = lIl1111Il1lIil1l1il11() return lIlliliIiIlllI11l1iI1(lIl11l1i1iiiiII1liill, iII1llll1liIllIIiii)() end lIl11Illl111Illli1lllI1IIl1IlIIi11ii1l()) 
