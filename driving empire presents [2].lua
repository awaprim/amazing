local Iii1IIiIiIllI1iiiI1 = assert local iiiliI1lIi1IlliIi1l = select local lIlI1ll1liii1IIIlllil = tonumber local lIllil1I1liI1I1iI1i11 = unpack local i1Ii1IiliIlIl1iIlI1 = pcall local IlIll11Il1IIl1IIill = setfenv local lIlIiiliIiilillIII11i = setmetatable local IiilIill1lIiIIIiII1 = type local lIllI1iIl1iilI1iliiIl = getfenv local ili1IIllllliI1I11i1 = tostring local i1l11IllIiIi1ii11l1 = error local lIlIiilIIlillI1Iill11 = string.sub local lIlI1illIllIl1ilIi1lI = string.byte local liiIllIllliiIli1lll = string.char local i1lili1III1II1lliIi = string.rep local lIlIlIi1I11lliili111i = string.gsub local lIli1ilIIil11IIi11I1i = string.match local l1lI1iIllllIIll1lIi = table.insert local I1ii1lIiIIiIl1llIii = lIlI1illIllIl1ilIi1lI("U", 1) local I1Ili11l11I1II1iIII, l111IIlIiii1i1l1lIi = #{5970}, #{ 5025, 579, 2526, 2347, 1128, 2123, 6943, 2429, 491, 1454, 4136, 2069, 5270, 3416, 5757, 2427, 3047, 5948, 4814, 3945, 4296, 3281 } + I1ii1lIiIIiIl1llIii + 130964 local iIi1i11IlIIlIliil11 = {} local lIl1liiII1i1illlilII1 = 1 local llII1liIiIl1lI111ii, iIlIllllIiIIi1iI1l1 local function I1IIll1lI11Ii1lIIIl(IiI1iI1iiIlI1iili11, lIlll11Il1IlIIlIIlill) local lllIlllIllli1ili1i1 IiI1iI1iiIlI1iili11 = lIlIlIi1I11lliili111i(lIlIiilIIlillI1Iill11(IiI1iI1iiIlI1iili11, 5), "..", function(IiIlliIiiilliIliIIi) if lIlI1illIllIl1ilIi1lI(IiIlliIiiilliIliIIi, 2) == 72 then lllIlllIllli1ili1i1 = lIlI1ll1liii1IIIlllil(lIlIiilIIlillI1Iill11(IiIlliIiiilliIliIIi, 1, 1)) return "" else local Illiiilll111iiIl1lI = liiIllIllliiIli1lll(lIlI1ll1liii1IIIlllil(IiIlliIiiilliIliIIi, 16)) if lllIlllIllli1ili1i1 then local lIlIil1I1IlIl11111l = i1lili1III1II1lliIi(Illiiilll111iiIl1lI, lllIlllIllli1ili1i1) lllIlllIllli1ili1i1 = nil return lIlIil1I1IlIl11111l else return Illiiilll111iiIl1lI end end end) local function I11ilIllliIllillllI() local l1l1l1il1ililIll1ii = lIlI1illIllIl1ilIi1lI(IiI1iI1iiIlI1iili11, lIl1liiII1i1illlilII1, lIl1liiII1i1illlilII1) lIl1liiII1i1illlilII1 = lIl1liiII1i1illlilII1 + 1 return l1l1l1il1ililIll1ii end local function lIlllliII11lliIIll1i1() local l1l1l1il1ililIll1ii, Illiiilll111iiIl1lI, lIlIil1I1IlIl11111l, li1i111lI11ilIl1lii = lIlI1illIllIl1ilIi1lI(IiI1iI1iiIlI1iili11, lIl1liiII1i1illlilII1, lIl1liiII1i1illlilII1 + 3) lIl1liiII1i1illlilII1 = lIl1liiII1i1illlilII1 + 4 return li1i111lI11ilIl1lii * 16777216 + lIlIil1I1IlIl11111l * 65536 + Illiiilll111iiIl1lI * 256 + l1l1l1il1ililIll1ii end local function ii1IiIIili1iliiilIi(iIIliIli111lI1I1III, iiIiiIilI1liI1i1Ii1, lIlIl1llIllIIiI1Il1II) if lIlIl1llIllIIiI1Il1II then local liil1l111iiI1Ilii1I, IIlillIl11liiIII1Ii = 0, 0 for IilII1IiIllIlIl1llI = iiIiiIilI1liI1i1Ii1, lIlIl1llIllIIiI1Il1II do liil1l111iiI1Ilii1I = liil1l111iiI1Ilii1I + 2 ^ IIlillIl11liiIII1Ii * ii1IiIIili1iliiilIi(iIIliIli111lI1I1III, IilII1IiIllIlIl1llI) IIlillIl11liiIII1Ii = IIlillIl11liiIII1Ii + 1 end return liil1l111iiI1Ilii1I else local ilIIIIliliIl1i11ilI = 2 ^ (iiIiiIilI1liI1i1Ii1 - 1) return ilIIIIliliIl1i11ilI <= iIIliIli111lI1I1III % (ilIIIIliliIl1i11ilI + ilIIIIliliIl1i11ilI) and 1 or 0 end end local function liiI1Ii1IlIiil1iliI() local l1l1l1il1ililIll1ii, Illiiilll111iiIl1lI = lIlllliII11lliIIll1i1(), lIlllliII11lliIIll1i1() if l1l1l1il1ililIll1ii == 0 and Illiiilll111iiIl1lI == 0 then return 0 end return (-2 * ii1IiIIili1iliiilIi(Illiiilll111iiIl1lI, 32) + 1) * 2 ^ (ii1IiIIili1iliiilIi(Illiiilll111iiIl1lI, 21, 31) - 1023) * ((ii1IiIIili1iliiilIi(Illiiilll111iiIl1lI, 1, 20) * 4294967296 + l1l1l1il1ililIll1ii) / 4503599627370496 + 1) end local IllIlli1IiI1IliIliI = bit or bit32 local iIIilIiIli1111iiiIl = IllIlli1IiI1IliIliI and IllIlli1IiI1IliIliI.bxor or function(l1l1l1il1ililIll1ii, Illiiilll111iiIl1lI) local iili1IlI1li1iilIlII = 1 local lIlIil1I1IlIl11111l = 0 while l1l1l1il1ililIll1ii > 0 and Illiiilll111iiIl1lI > 0 do local iI1IlI11l1Ill1i11Ii = l1l1l1il1ililIll1ii % 2 local IlI1IIi11lIliliI1i1 = Illiiilll111iiIl1lI % 2 if iI1IlI11l1Ill1i11Ii ~= IlI1IIi11lIliliI1i1 then lIlIil1I1IlIl11111l = lIlIil1I1IlIl11111l + iili1IlI1li1iilIlII end l1l1l1il1ililIll1ii = (l1l1l1il1ililIll1ii - iI1IlI11l1Ill1i11Ii) / 2 Illiiilll111iiIl1lI = (Illiiilll111iiIl1lI - IlI1IIi11lIliliI1i1) / 2 iili1IlI1li1iilIlII = iili1IlI1li1iilIlII * 2 end if l1l1l1il1ililIll1ii < Illiiilll111iiIl1lI then l1l1l1il1ililIll1ii = Illiiilll111iiIl1lI end while l1l1l1il1ililIll1ii > 0 do local iI1IlI11l1Ill1i11Ii = l1l1l1il1ililIll1ii % 2 if iI1IlI11l1Ill1i11Ii > 0 then lIlIil1I1IlIl11111l = lIlIil1I1IlIl11111l + iili1IlI1li1iilIlII end l1l1l1il1ililIll1ii = (l1l1l1il1ililIll1ii - iI1IlI11l1Ill1i11Ii) / 2 iili1IlI1li1iilIlII = iili1IlI1li1iilIlII * 2 end return lIlIil1I1IlIl11111l end local function IiII1lI1i1IiiiIllll(lIlIIIlIii111illii11I) local lIlIiIlIl1ll1i11lliiI = { lIlI1illIllIl1ilIi1lI(IiI1iI1iiIlI1iili11, lIl1liiII1i1illlilII1, lIl1liiII1i1illlilII1 + 3) } lIl1liiII1i1illlilII1 = lIl1liiII1i1illlilII1 + 4 local l1l1l1il1ililIll1ii = iIIilIiIli1111iiiIl(lIlIiIlIl1ll1i11lliiI[1], iIlIllllIiIIi1iI1l1) local Illiiilll111iiIl1lI = iIIilIiIli1111iiiIl(lIlIiIlIl1ll1i11lliiI[2], iIlIllllIiIIi1iI1l1) local lIlIil1I1IlIl11111l = iIIilIiIli1111iiiIl(lIlIiIlIl1ll1i11lliiI[3], iIlIllllIiIIi1iI1l1) local li1i111lI11ilIl1lii = iIIilIiIli1111iiiIl(lIlIiIlIl1ll1i11lliiI[4], iIlIllllIiIIi1iI1l1) iIlIllllIiIIi1iI1l1 = (189 * iIlIllllIiIIi1iI1l1 + lIlIIIlIii111illii11I) % 256 return li1i111lI11ilIl1lii * 16777216 + lIlIil1I1IlIl11111l * 65536 + Illiiilll111iiIl1lI * 256 + l1l1l1il1ililIll1ii end local function llil1III1lIIiiIli1I(IliillIiI11i1IIlIl1) local lIllIIill11IIIi11il11 = lIlllliII11lliIIll1i1() local lIlliI1l1iiII1111ii1l = "" for IilII1IiIllIlIl1llI = I1Ili11l11I1II1iIII, lIllIIill11IIIi11il11 do lIlliI1l1iiII1111ii1l = lIlliI1l1iiII1111ii1l .. liiIllIllliiIli1lll(iIIilIiIli1111iiiIl(lIlI1illIllIl1ilIi1lI(IiI1iI1iiIlI1iili11, lIl1liiII1i1illlilII1 + IilII1IiIllIlIl1llI - 1), llII1liIiIl1lI111ii)) llII1liIiIl1lI111ii = (IliillIiI11i1IIlIl1 * llII1liIiIl1lI111ii + 187) % 256 end lIl1liiII1i1illlilII1 = lIl1liiII1i1illlilII1 + lIllIIill11IIIi11il11 return lIlliI1l1iiII1111ii1l end llII1liIiIl1lI111ii = I11ilIllliIllillllI() iIlIllllIiIIi1iI1l1 = I11ilIllliIllillllI() local IlliIIii11li1liI1ii = {} for IilII1IiIllIlIl1llI = I1Ili11l11I1II1iIII, I11ilIllliIllillllI() do local lIlIi1llil1lli111llii = I11ilIllliIllillllI() local li1liI1lli1i1l11iII = (IilII1IiIllIlIl1llI - 1) * 2 IlliIIii11li1liI1ii[li1liI1lli1i1l11iII] = ii1IiIIili1iliiilIi(lIlIi1llil1lli111llii, 1, 4) IlliIIii11li1liI1ii[li1liI1lli1i1l11iII + 1] = ii1IiIIili1iliiilIi(lIlIi1llil1lli111llii, 5, 8) end local function II1ll1ilII1ilI1iiil() local ililIiII1i11Il11lIl = { {}, {}, {}, {}, nil, nil, nil } lIlllliII11lliIIll1i1() local IillIii1IIiI1llIllI = lIlllliII11lliIIll1i1() for IilII1IiIllIlIl1llI = I1Ili11l11I1II1iIII, IillIii1IIiI1llIllI do ililIiII1i11Il11lIl[1][IilII1IiIllIlIl1llI] = lIlllliII11lliIIll1i1() end ililIiII1i11Il11lIl[5] = I11ilIllliIllillllI() I11ilIllliIllillllI() local IillIii1IIiI1llIllI = lIlllliII11lliIIll1i1() - (#{ 4290, 4641, 4194, 654, 5244, 3129, 4244, 1398, 1005, 1775, 6504, 1261, 1284, 1243, 685, 6779, 3415, 6680, 5137, 4859 } + I1ii1lIiIIiIl1llIii + 133606) local IiIIii11lII1ll11iii = I11ilIllliIllillllI() for IilII1IiIllIlIl1llI = I1Ili11l11I1II1iIII, IillIii1IIiI1llIllI do local lIlilliii1iIilIii1ii1 local IiilIill1lIiIIIiII1 = I11ilIllliIllillllI() if IiilIill1lIiIIIiII1 == #{ 363, 5514, 3171, 5865, 2297, 3745, 383, 1921, 6171, 569, 3022, 4674, 5826, 2991, 64, 5390, 655, 2467, 556, 449, 4561 } + I1ii1lIiIIiIl1llIii + 41 then lIlilliii1iIilIii1ii1 = liiI1Ii1IlIiil1iliI() end if IiilIill1lIiIIIiII1 == #{ 6280, 266, 214, 3095, 5193, 4736, 3186, 2204, 5135, 3367, 5754, 5859, 2515, 3828, 1845, 1044, 1942, 765, 4329, 1863, 4567, 6604, 2672 } + I1ii1lIiIIiIl1llIii + 56 then lIlilliii1iIilIii1ii1 = liiI1Ii1IlIiil1iliI() + liiI1Ii1IlIiil1iliI() end if IiilIill1lIiIIIiII1 == #{ 1443, 2146, 3171, 4575, 3806, 3433, 1871, 6702, 2576, 3511, 4111, 6847, 3226, 348, 2975, 1664, 1160, 6571, 898, 127, 3096, 757 } + I1ii1lIiIIiIl1llIii + -37 then lIlilliii1iIilIii1ii1 = liiI1Ii1IlIiil1iliI() end if IiilIill1lIiIIIiII1 == #{ 3192, 4417, 3941, 6077, 3128, 3480, 2646, 3679, 309, 6661, 3217, 3180, 2424, 5134, 5952, 5245, 1640, 6871, 4783, 6622, 4533 } + I1ii1lIiIIiIl1llIii + 73 then lIlilliii1iIilIii1ii1 = lIlIiilIIlillI1Iill11(llil1III1lIIiiIli1I(insEncKey), #{ 4923, 1695, 6493, 1114 }) end if IiilIill1lIiIIIiII1 == #{ 3617, 6793, 4782, 4817, 2856, 6070, 4098, 1102, 1299, 4678, 5443, 4781, 5775, 5885, 1839, 5599, 4756, 5848, 856, 2146, 1820 } + I1ii1lIiIIiIl1llIii + 48 then lIlilliii1iIilIii1ii1 = liiI1Ii1IlIiil1iliI() end if IiilIill1lIiIIIiII1 == #{ 6164, 4475, 4306, 288, 1319, 2162, 332, 3593, 4488, 6382, 4033, 3456, 4943, 4264, 2443, 3670, 2686, 6496, 5550, 6608, 4252, 4157, 1748 } + I1ii1lIiIIiIl1llIii + 11 then lIlilliii1iIilIii1ii1 = I11ilIllliIllillllI() + lIlllliII11lliIIll1i1() + liiI1Ii1IlIiil1iliI() end if IiilIill1lIiIIIiII1 == #{ 2407, 4233, 4108, 4980, 1700, 2678, 6127, 4804, 6283, 403, 4868, 4670, 1931, 3271, 4200 } then lIlilliii1iIilIii1ii1 = lIlIiilIIlillI1Iill11(llil1III1lIIiiIli1I(IiIIii11lII1ll11iii), #{ 2028, 2628, 761 }) end if IiilIill1lIiIIIiII1 == #{ 1293, 6614, 1427, 449, 1635, 6792, 3241, 5054, 5096, 5621, 2691, 6586, 5114, 3724, 5217, 1071, 5405, 1667, 489, 1047, 4910 } + I1ii1lIiIIiIl1llIii + -78 then lIlilliii1iIilIii1ii1 = #{ 5018, 6401, 6263, 2511, 2418, 2080, 6968, 3795, 4016, 4586, 4046, 6352, 460, 741, 5353, 6865, 6279, 1627, 4077, 4078, 5754, 3027, 813, 6108 } + I1ii1lIiIIiIl1llIii + 132262 == #{ 5018, 6401, 6263, 2511, 2418, 2080, 6968, 3795, 4016, 4586, 4046, 6352, 460, 741, 5353, 6865, 6279, 1627, 4077, 4078, 5754, 3027, 813, 6108 } + I1ii1lIiIIiIl1llIii + 132262 end if IiilIill1lIiIIIiII1 == #{ 225, 4113, 1426, 2929, 3590, 1925, 5819, 823, 3706, 2587, 6570, 1257, 2525, 2159, 2874, 4713, 4942, 4007, 5692, 6332, 4499, 877, 899, 1823 } + I1ii1lIiIIiIl1llIii + 86 then lIlilliii1iIilIii1ii1 = #{ 3508, 715, 4741, 2760, 5844, 4415, 2447, 1619, 6395, 3303, 6672, 3603, 1807, 675, 192, 4977, 4401, 3365, 5707, 5641, 5703, 3289, 5932 } + I1ii1lIiIIiIl1llIii + 5183 == #{ 1561, 5679, 6789, 4227, 3068, 5468, 5206, 1648, 1731, 3782, 6195, 3228, 4764, 5513, 4849, 2787, 6685, 5647, 3679, 4660 } + I1ii1lIiIIiIl1llIii + 132954 end ililIiII1i11Il11lIl[4][IilII1IiIllIlIl1llI - I1Ili11l11I1II1iIII] = lIlilliii1iIilIii1ii1 end ililIiII1i11Il11lIl[6] = I11ilIllliIllillllI() lIlllliII11lliIIll1i1() lIlllliII11lliIIll1i1() I11ilIllliIllillllI() local ii1IliIi1i1liii1iil = lIlllliII11lliIIll1i1() - (#{ 2187, 5711, 1923, 1889, 2879, 918, 2512, 3334, 3682, 4634, 3982, 5107, 4945, 586, 5084, 2375, 6601, 3459, 4200, 2484 } + I1ii1lIiIIiIl1llIii + 133609) local lIll1ill1lliI1iIl1lll = I11ilIllliIllillllI() for IilII1IiIllIlIl1llI = I1Ili11l11I1II1iIII, ii1IliIi1i1liii1iil do local iIi1i1lliIl1iili1I1 = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local lIlIi1llil1lli111llii = IiII1lI1i1IiiiIllll(lIll1ill1lliI1iIl1lll) iIi1i1lliIl1iili1I1[50935] = ii1IiIIili1iliiilIi(lIlIi1llil1lli111llii, #{1099}, #{ 5503, 3690, 3071, 6799, 4548, 6367, 2927, 4757, 5083 }) iIi1i1lliIl1iili1I1[9] = ii1IiIIili1iliiilIi(lIlIi1llil1lli111llii, #{ 3919, 1712, 6370, 3204, 5772, 3075, 869, 3896, 6386, 614, 3681, 4125, 1271, 3046, 4238, 2940, 1872, 3696, 3429 }, #{ 649, 1764, 1663, 4000, 2539, 3339, 3505, 3591, 881, 1180, 6591, 408, 525, 6058, 5561, 632, 5664, 111, 4436, 1370, 4245, 5332 } + I1ii1lIiIIiIl1llIii + -81) iIi1i1lliIl1iili1I1[6] = ii1IiIIili1iliiilIi(lIlIi1llil1lli111llii, #{ 3801, 753, 701, 6331, 5879, 2931, 283, 6915, 1311, 5703 }, #{ 6459, 4301, 1138, 6429, 3375, 733, 2047, 6612, 4258, 4999, 2088, 6096, 2774, 5581, 980, 3765, 2512, 1896 }) iIi1i1lliIl1iili1I1[8] = ii1IiIIili1iliiilIi(lIlIi1llil1lli111llii, #{5132}, #{ 5438, 1310, 6349, 3067, 6435, 656, 6641, 4861, 1259 }) iIi1i1lliIl1iili1I1[2] = ii1IiIIili1iliiilIi(lIlIi1llil1lli111llii, #{ 1131, 1441, 1859, 4029, 2191, 6831, 1642, 3267, 6025, 2682, 5849, 313, 4594, 2450, 2491, 364, 215, 5111, 2944, 1533, 2864, 6583 } + I1ii1lIiIIiIl1llIii + -80, #{ 4938, 2389, 3879, 3345, 433, 2229, 6675, 4059, 1625, 5821, 2944, 616, 1372, 1901, 622, 154, 3161, 5506, 6843, 5134, 5593, 5505 } + I1ii1lIiIIiIl1llIii + -75) iIi1i1lliIl1iili1I1[1] = ii1IiIIili1iliiilIi(lIlIi1llil1lli111llii, #{1283}, #{ 2507, 2906, 6129, 2589, 4347, 6032, 3483, 1958, 2380, 210, 3880, 1517, 747, 4167, 5263, 1471, 4671, 3038 }) ililIiII1i11Il11lIl[3][IilII1IiIllIlIl1llI] = iIi1i1lliIl1iili1I1 end for IilII1IiIllIlIl1llI = I1Ili11l11I1II1iIII, ii1IliIi1i1liii1iil do local iIi1i1lliIl1iili1I1 = ililIiII1i11Il11lIl[3][IilII1IiIllIlIl1llI] local lIll1iIlII11il1Iii1i1 = IlliIIii11li1liI1ii[iIi1i1lliIl1iili1I1[2]] if lIll1iIlII11il1Iii1i1 == #{ 3936, 5775, 3161, 3079 } then iIi1i1lliIl1iili1I1[4] = ililIiII1i11Il11lIl[4][iIi1i1lliIl1iili1I1[1]] end if lIll1iIlII11il1Iii1i1 == #{1853, 3910} and iIi1i1lliIl1iili1I1[6] > 255 then iIi1i1lliIl1iili1I1[10] = true iIi1i1lliIl1iili1I1[5] = ililIiII1i11Il11lIl[4][iIi1i1lliIl1iili1I1[6] - 256] end if lIll1iIlII11il1Iii1i1 == #{ 2056, 4935, 390 } then if iIi1i1lliIl1iili1I1[8] > 255 then iIi1i1lliIl1iili1I1[7] = true iIi1i1lliIl1iili1I1[3] = ililIiII1i11Il11lIl[4][iIi1i1lliIl1iili1I1[8] - 256] end if iIi1i1lliIl1iili1I1[6] > 255 then iIi1i1lliIl1iili1I1[10] = true iIi1i1lliIl1iili1I1[5] = ililIiII1i11Il11lIl[4][iIi1i1lliIl1iili1I1[6] - 256] end end if lIll1iIlII11il1Iii1i1 == #{1261} and iIi1i1lliIl1iili1I1[8] > 255 then iIi1i1lliIl1iili1I1[7] = true iIi1i1lliIl1iili1I1[3] = ililIiII1i11Il11lIl[4][iIi1i1lliIl1iili1I1[8] - 256] end end ililIiII1i11Il11lIl[7] = I11ilIllliIllillllI() I11ilIllliIllillllI() local IillIii1IIiI1llIllI = lIlllliII11lliIIll1i1() for IilII1IiIllIlIl1llI = I1Ili11l11I1II1iIII, IillIii1IIiI1llIllI do ililIiII1i11Il11lIl[2][IilII1IiIllIlIl1llI - I1Ili11l11I1II1iIII] = II1ll1ilII1ilI1iiil() end return ililIiII1i11Il11lIl end local function lliiiII1lIIlliIIl1l(ililIiII1i11Il11lIl, lIlll11Il1IlIIlIIlill, IiIl1lI1ilIilIii1l1) local IlIl1lil1IIlll1llIi, i1ii1IlIii1IiIIlIil = 12, 14 local lIlIlii1I11iIIlllI1l1 = ililIiII1i11Il11lIl[3] local lIliiiliIiIliililIiil = 5 local lIlIllli1iiIIlIlIllIi = ililIiII1i11Il11lIl[2] local iii1Il1II1iIllIll1i = ililIiII1i11Il11lIl[7] local III1llliiII1lll1lli = ililIiII1i11Il11lIl[6] local lliI1lil1IlliIllIIi = 2 local lIli1111lIil1IlI1liii = ililIiII1i11Il11lIl[1] local iiiII1lIiI1Ii1l1iiI = 8 local function lliIIlIlIIIi11ii1i1(...) local lIlIIl1illIIl1il1IIll = 0 local ii11111ilIllill11ll = { lIllil1I1liI1I1iI1i11({}, 1, III1llliiII1lll1lli) } local ii1iIiiIIl1illl1il1 = 1 local i1iI1l1iIll111llIli = {} local iiiI1liil1IllIlliil = {} local lIlll11Il1IlIIlIIlill = lIllI1iIl1iilI1iliiIl() local II111liIiiIlIilIIIi = { ... } local lIliI11i1iiI1llililll = #II111liIiiIlIilIIIi - 1 for IilII1IiIllIlIl1llI = 0, lIliI11i1iiI1llililll do if IilII1IiIllIlIl1llI < iii1Il1II1iIllIll1i then ii11111ilIllill11ll[IilII1IiIllIlIl1llI] = II111liIiiIlIilIIIi[IilII1IiIllIlIl1llI + 1] end end local function lIl11iI1Iiillil1IIl(...) local lIlIil1I1IlIl11111l = iiiliI1lIi1IlliIi1l("#", ...) local I1IiiiiI1l1lill1iIi = { ... } return lIlIil1I1IlIl11111l, I1IiiiiI1l1lill1iIi end local function lIlIlIli11lI1I1Il11II() while true do local l1I1111I1IlIl1llIIl = lIlIlii1I11iIIlllI1l1[ii1iIiiIIl1illl1il1] local liI1ll1IIli1ilIIli1 = l1I1111I1IlIl1llIIl[2] ii1iIiiIIl1illl1il1 = ii1iIiiIIl1illl1il1 + 1 if liI1ll1IIli1ilIIli1 >= 10 then if liI1ll1IIli1ilIIli1 >= 15 then if liI1ll1IIli1ilIIli1 >= 17 then if liI1ll1IIli1ilIIli1 >= 18 then if liI1ll1IIli1ilIIli1 ~= 19 then ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[9]] = l1I1111I1IlIl1llIIl[8] ~= 0 if l1I1111I1IlIl1llIIl[6] ~= 0 then ii1iIiiIIl1illl1il1 = ii1iIiiIIl1illl1il1 + 1 end else local lIlII1iil1IIliIIilIil = l1I1111I1IlIl1llIIl[9] local II111liIiiIlIilIIIi = l1I1111I1IlIl1llIIl[8] local lIli1iii1l1l1IIIiIi1l = l1I1111I1IlIl1llIIl[6] local il1illiIiIliI1ii1i1, lIlI1ii1ill1lI1lilI, lIlIlIli11lI1I1Il11II if II111liIiiIlIilIIIi ~= 1 then if II111liIiiIlIilIIIi ~= 0 then lIlI1ii1ill1lI1lilI = lIlII1iil1IIliIIilIil + II111liIiiIlIilIIIi - 1 else lIlI1ii1ill1lI1lilI = lIlIIl1illIIl1il1IIll end lIlI1ii1ill1lI1lilI, il1illiIiIliI1ii1i1 = lIl11iI1Iiillil1IIl(ii11111ilIllill11ll[lIlII1iil1IIliIIilIil](lIllil1I1liI1I1iI1i11(ii11111ilIllill11ll, lIlII1iil1IIliIIilIil + 1, lIlI1ii1ill1lI1lilI))) else lIlI1ii1ill1lI1lilI, il1illiIiIliI1ii1i1 = lIl11iI1Iiillil1IIl(ii11111ilIllill11ll[lIlII1iil1IIliIIilIil]()) end if lIli1iii1l1l1IIIiIi1l ~= 1 then if lIli1iii1l1l1IIIiIi1l ~= 0 then lIlI1ii1ill1lI1lilI = lIlII1iil1IIliIIilIil + lIli1iii1l1l1IIIiIi1l - 2 lIlIIl1illIIl1il1IIll = lIlI1ii1ill1lI1lilI + 1 else lIlI1ii1ill1lI1lilI = lIlI1ii1ill1lI1lilI + lIlII1iil1IIliIIilIil - 1 lIlIIl1illIIl1il1IIll = lIlI1ii1ill1lI1lilI end lIlIlIli11lI1I1Il11II = 0 for IilII1IiIllIlIl1llI = lIlII1iil1IIliIIilIil, lIlI1ii1ill1lI1lilI do lIlIlIli11lI1I1Il11II = lIlIlIli11lI1I1Il11II + 1 ii11111ilIllill11ll[IilII1IiIllIlIl1llI] = il1illiIiIliI1ii1i1[lIlIlIli11lI1I1Il11II] end else lIlIIl1illIIl1il1IIll = lIlII1iil1IIliIIilIil - 1 end for IilII1IiIllIlIl1llI = lIlIIl1illIIl1il1IIll + 1, III1llliiII1lll1lli do ii11111ilIllill11ll[IilII1IiIllIlIl1llI] = nil end end elseif l1I1111I1IlIl1llIIl[6] == 54 then ii1iIiiIIl1illl1il1 = ii1iIiiIIl1illl1il1 - 1 lIlIlii1I11iIIlllI1l1[ii1iIiiIIl1illl1il1] = { [2] = 14, [9] = (l1I1111I1IlIl1llIIl[9] - 169) % 256, [8] = (l1I1111I1IlIl1llIIl[8] - 169) % 256 } else ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[9]] = not ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[8]] end elseif liI1ll1IIli1ilIIli1 ~= 16 then local lIIl11i1i1Ii1li1l1i = ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[8]] for IilII1IiIllIlIl1llI = l1I1111I1IlIl1llIIl[8] + 1, l1I1111I1IlIl1llIIl[6] do lIIl11i1i1Ii1li1l1i = lIIl11i1i1Ii1li1l1i .. ii11111ilIllill11ll[IilII1IiIllIlIl1llI] end ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[9]] = lIIl11i1i1Ii1li1l1i else local Illiiilll111iiIl1lI, lIlIil1I1IlIl11111l if l1I1111I1IlIl1llIIl[7] then Illiiilll111iiIl1lI = l1I1111I1IlIl1llIIl[3] else Illiiilll111iiIl1lI = ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[8]] end if l1I1111I1IlIl1llIIl[10] then lIlIil1I1IlIl11111l = l1I1111I1IlIl1llIIl[5] else lIlIil1I1IlIl11111l = ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[6]] end ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[9]][Illiiilll111iiIl1lI] = lIlIil1I1IlIl11111l end elseif liI1ll1IIli1ilIIli1 >= 12 then if liI1ll1IIli1ilIIli1 < 13 then ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[9]] = ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[8]] elseif liI1ll1IIli1ilIIli1 == 14 then ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[9]] = IiIl1lI1ilIilIii1l1[l1I1111I1IlIl1llIIl[8]] else ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[9]] = { lIllil1I1liI1I1iI1i11(iIi1i11IlIIlIliil11, 1, l1I1111I1IlIl1llIIl[8] == 0 and 255 or l1I1111I1IlIl1llIIl[8]) } end elseif liI1ll1IIli1ilIIli1 ~= 11 then if l1I1111I1IlIl1llIIl[8] == 253 then ii1iIiiIIl1illl1il1 = ii1iIiiIIl1illl1il1 - 1 lIlIlii1I11iIIlllI1l1[ii1iIiiIIl1illl1il1] = { [2] = 0, [9] = (l1I1111I1IlIl1llIIl[9] - 206) % 256, [8] = (l1I1111I1IlIl1llIIl[6] - 206) % 256 } elseif not not ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[9]] == (l1I1111I1IlIl1llIIl[6] == 0) then ii1iIiiIIl1illl1il1 = ii1iIiiIIl1illl1il1 + 1 end else local Illiiilll111iiIl1lI, lIlIil1I1IlIl11111l if l1I1111I1IlIl1llIIl[7] then Illiiilll111iiIl1lI = l1I1111I1IlIl1llIIl[3] else Illiiilll111iiIl1lI = ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[8]] end if l1I1111I1IlIl1llIIl[10] then lIlIil1I1IlIl11111l = l1I1111I1IlIl1llIIl[5] else lIlIil1I1IlIl11111l = ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[6]] end if Illiiilll111iiIl1lI == lIlIil1I1IlIl11111l ~= (l1I1111I1IlIl1llIIl[9] ~= 0) then ii1iIiiIIl1illl1il1 = ii1iIiiIIl1illl1il1 + 1 end end elseif liI1ll1IIli1ilIIli1 < 5 then if liI1ll1IIli1ilIIli1 >= 2 then if liI1ll1IIli1ilIIli1 >= 3 then if liI1ll1IIli1ilIIli1 ~= 4 then local li1liIllIii1illI1ll = lIlIllli1iiIIlIlIllIi[l1I1111I1IlIl1llIIl[1]] local II111iIlI1i1111IiI1 = {} if li1liIllIii1illI1ll[lIliiiliIiIliililIiil] > 0 then do local lIlIli1ilIllll11i1Iil = {} II111iIlI1i1111IiI1 = lIlIiiliIiilillIII11i({}, { __index = function(I1IiiiiI1l1lill1iIi, Iii11Ili1I1111l1111) local lIi1Ii1i1i1ii11lll1 = lIlIli1ilIllll11i1Iil[Iii11Ili1I1111l1111] return lIi1Ii1i1i1ii11lll1[1][lIi1Ii1i1i1ii11lll1[2]] end, __newindex = function(I1IiiiiI1l1lill1iIi, Iii11Ili1I1111l1111, IIi1l111i11I1i1IIii) local lIi1Ii1i1i1ii11lll1 = lIlIli1ilIllll11i1Iil[Iii11Ili1I1111l1111] lIi1Ii1i1i1ii11lll1[1][lIi1Ii1i1i1ii11lll1[2]] = IIi1l111i11I1i1IIii end }) for IilII1IiIllIlIl1llI = 1, li1liIllIii1illI1ll[lIliiiliIiIliililIiil] do local l1lii1liIiiiiiil1II = lIlIlii1I11iIIlllI1l1[ii1iIiiIIl1illl1il1] if l1lii1liIiiiiiil1II[lliI1lil1IlliIllIIi] == IlIl1lil1IIlll1llIi then lIlIli1ilIllll11i1Iil[IilII1IiIllIlIl1llI - 1] = { ii11111ilIllill11ll, l1lii1liIiiiiiil1II[iiiII1lIiI1Ii1l1iiI] } elseif l1lii1liIiiiiiil1II[lliI1lil1IlliIllIIi] == i1ii1IlIii1IiIIlIil then lIlIli1ilIllll11i1Iil[IilII1IiIllIlIl1llI - 1] = { IiIl1lI1ilIilIii1l1, l1lii1liIiiiiiil1II[iiiII1lIiI1Ii1l1iiI] } end ii1iIiiIIl1illl1il1 = ii1iIiiIIl1illl1il1 + 1 end if not i1iI1l1iIll111llIli[ii11111ilIllill11ll] then i1iI1l1iIll111llIli[ii11111ilIllill11ll] = {lIlIli1ilIllll11i1Iil} else l1lI1iIllllIIll1lIi(i1iI1l1iIll111llIli[ii11111ilIllill11ll], lIlIli1ilIllll11i1Iil) end end end local lIliIiIil1liii1III11I = lliiiII1lIIlliIIl1l(li1liIllIii1illI1ll, lIlll11Il1IlIIlIIlill, II111iIlI1i1111IiI1) ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[9]] = lIliIiIil1liii1III11I elseif l1I1111I1IlIl1llIIl[8] == 246 then ii1iIiiIIl1illl1il1 = ii1iIiiIIl1illl1il1 - 1 lIlIlii1I11iIIlllI1l1[ii1iIiiIIl1illl1il1] = { [2] = 6, [9] = (l1I1111I1IlIl1llIIl[9] - 121) % 256, [8] = (l1I1111I1IlIl1llIIl[6] - 121) % 256 } else local lIlII1iil1IIliIIilIil = l1I1111I1IlIl1llIIl[9] local li1liI1lli1i1l11iII = lIlII1iil1IIliIIilIil + 2 local lIIl11i1i1Ii1li1l1i = { ii11111ilIllill11ll[lIlII1iil1IIliIIilIil](ii11111ilIllill11ll[lIlII1iil1IIliIIilIil + 1], ii11111ilIllill11ll[lIlII1iil1IIliIIilIil + 2]) } for IilII1IiIllIlIl1llI = 1, l1I1111I1IlIl1llIIl[6] do ii11111ilIllill11ll[li1liI1lli1i1l11iII + IilII1IiIllIlIl1llI] = lIIl11i1i1Ii1li1l1i[IilII1IiIllIlIl1llI] end if ii11111ilIllill11ll[lIlII1iil1IIliIIilIil + 3] ~= nil then ii11111ilIllill11ll[lIlII1iil1IIliIIilIil + 2] = ii11111ilIllill11ll[lIlII1iil1IIliIIilIil + 3] else ii1iIiiIIl1illl1il1 = ii1iIiiIIl1illl1il1 + 1 end end else local lIlII11lIliiIilllIiii = ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[8]] local lIlIil1I1IlIl11111l if l1I1111I1IlIl1llIIl[10] then lIlIil1I1IlIl11111l = l1I1111I1IlIl1llIIl[5] else lIlIil1I1IlIl11111l = ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[6]] end ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[9] + 1] = lIlII11lIliiIilllIiii ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[9]] = lIlII11lIliiIilllIiii[lIlIil1I1IlIl11111l] end elseif liI1ll1IIli1ilIIli1 ~= 1 then i1iI1l1iIll111llIli[ii11111ilIllill11ll] = nil local lIlII1iil1IIliIIilIil = l1I1111I1IlIl1llIIl[9] local lIliIIiIIlIiilliilIil = l1I1111I1IlIl1llIIl[8] if lIliIIiIIlIiilliilIil == 1 then return true end local lIlI1ii1ill1lI1lilI = lIlII1iil1IIliIIilIil + lIliIIiIIlIiilliilIil - 2 if lIliIIiIIlIiilliilIil == 0 then lIlI1ii1ill1lI1lilI = lIlIIl1illIIl1il1IIll end return true, lIlII1iil1IIliIIilIil, lIlI1ii1ill1lI1lilI else lIlll11Il1IlIIlIIlill[l1I1111I1IlIl1llIIl[4]] = ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[9]] end elseif liI1ll1IIli1ilIIli1 < 7 then if liI1ll1IIli1ilIIli1 ~= 6 then local lIlIil1I1IlIl11111l if l1I1111I1IlIl1llIIl[10] then lIlIil1I1IlIl11111l = l1I1111I1IlIl1llIIl[5] else lIlIil1I1IlIl11111l = ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[6]] end ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[9]] = ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[8]][lIlIil1I1IlIl11111l] else IiIl1lI1ilIilIii1l1[l1I1111I1IlIl1llIIl[8]] = ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[9]] end elseif liI1ll1IIli1ilIIli1 < 8 then ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[9]] = lIlll11Il1IlIIlIIlill[l1I1111I1IlIl1llIIl[4]] elseif liI1ll1IIli1ilIIli1 ~= 9 then ii1iIiiIIl1illl1il1 = ii1iIiiIIl1illl1il1 + (l1I1111I1IlIl1llIIl[1] - l111IIlIiii1i1l1lIi) else ii11111ilIllill11ll[l1I1111I1IlIl1llIIl[9]] = l1I1111I1IlIl1llIIl[4] end end end local lil1i1IlIIll1iIii1I, lIlliI1l1iiII1111ii1l, IlIil11lllIIi1III1I, lIlI11iIiilIillii1I1l = i1Ii1IiliIlIl1iIlI1(lIlIlIli11lI1I1Il11II) if lil1i1IlIIll1iIii1I then if IlIil11lllIIi1III1I then return lIllil1I1liI1I1iI1i11(ii11111ilIllill11ll, IlIil11lllIIi1III1I, lIlI11iIiilIillii1I1l) end else i1l11IllIiIi1ii11l1("Luraph Script:" .. (lIli1111lIil1IlI1liii[ii1iIiiIIl1illl1il1 - 1] or "") .. ": " .. ili1IIllllliI1I11i1(lIlliI1l1iiII1111ii1l), 0) end end IlIll11Il1IIl1IIill(lliIIlIlIIIi11ii1i1, lIlll11Il1IlIIlIIlill) return lliIIlIlIIIi11ii1i1 end local i1I1Il1lI1iii111lll = II1ll1ilII1ilI1iiil() return lliiiII1lIIlliIIl1l(i1I1Il1lI1iii111lll, lIlll11Il1IlIIlIIlill)() end return I1IIll1lI11Ii1lIIIllIllI1iIl1iilI1iliiIl()) 
