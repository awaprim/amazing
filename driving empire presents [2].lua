local l11IIllIIiIIiiii1iI = assert local liI1IiIllllllliI1I1 = select local ii1IIiillll1iiil1li = tonumber local I1I1II1lil11I1iilll = unpack local lIlIiilIlIi11IIi1I1i1 = pcall local IIliII1liI1IiI1llll = setfenv local Il1i111lIiiiiI1lll1 = setmetatable local liii1IlIiIlIli11ll1 = type local lIliI1IllllI11l1iI1 = getfenv local liIl1lIiIiI1lliiIll = tostring local liIi1IIIi1II1IiillI = error local I1i1ii1iiIiIlII1Ii1 = string.sub local I111I1IIlilliI1l1il = string.byte local l1Ill1iiIIiliiIIIl1 = string.char local l1iliI1IIiI1iIIIIl1 = string.rep local lIl1ilI1lIIlllI1il1 = string.gsub local lil111lIlIlI1lIiiii = string.match local lIl1iIiiIl1liiill1iil = table.insert local II11lI11IIliI11I1ii = I111I1IIlilliI1l1il("#", 1) local lllillIili1iiiIlI1I, IIlI111ililiIi1lIlI = #{4451}, #{ 5650, 6073, 4024, 3332, 3124, 1461, 3857, 4413, 6891, 5107, 4323, 4901, 3627, 6052, 6077, 2731, 1462, 3238, 2862, 1829 } + II11lI11IIliI11I1ii + 131016 local i1i1Ii1II1Ii1Iii1ii = {} local lIll1l1l11i1Il1IIiil1 = 1 local Ii1Ii1lIlIIiIIIi11l, I1i11i1iIiIlI1II1il local function ill1IiiilI1I1ilil11(IlIiilillil1l11IiII, lIlill111l1Iilii1Iii1) local i1lli1i1II1ill11l1I IlIiilillil1l11IiII = lIl1ilI1lIIlllI1il1(I1i1ii1iiIiIlII1Ii1(IlIiilillil1l11IiII, 5), "..", function(llIIi111III1iIl11Il) if I111I1IIlilliI1l1il(llIIi111III1iIl11Il, 2) == 72 then i1lli1i1II1ill11l1I = ii1IIiillll1iiil1li(I1i1ii1iiIiIlII1Ii1(llIIi111III1iIl11Il, 1, 1)) return "" else local liI1llliI11111Ii1Ii = l1Ill1iiIIiliiIIIl1(ii1IIiillll1iiil1li(llIIi111III1iIl11Il, 16)) if i1lli1i1II1ill11l1I then local lii1Iii1l1iiI1lil1I = l1iliI1IIiI1iIIIIl1(liI1llliI11111Ii1Ii, i1lli1i1II1ill11l1I) i1lli1i1II1ill11l1I = nil return lii1Iii1l1iiI1lil1I else return liI1llliI11111Ii1Ii end end end) local function lIli11i1iIiillilIiil1() local l1i1ili11Iii1iii1ii = I111I1IIlilliI1l1il(IlIiilillil1l11IiII, lIll1l1l11i1Il1IIiil1, lIll1l1l11i1Il1IIiil1) lIll1l1l11i1Il1IIiil1 = lIll1l1l11i1Il1IIiil1 + 1 return l1i1ili11Iii1iii1ii end local function lIl1IiI1lI11ii1Iiliii() local l1i1ili11Iii1iii1ii, liI1llliI11111Ii1Ii, lii1Iii1l1iiI1lil1I, Ili11IillI1l1iI1l11 = I111I1IIlilliI1l1il(IlIiilillil1l11IiII, lIll1l1l11i1Il1IIiil1, lIll1l1l11i1Il1IIiil1 + 3) lIll1l1l11i1Il1IIiil1 = lIll1l1l11i1Il1IIiil1 + 4 return Ili11IillI1l1iI1l11 * 16777216 + lii1Iii1l1iiI1lil1I * 65536 + liI1llliI11111Ii1Ii * 256 + l1i1ili11Iii1iii1ii end local function lIl1i11iiiI11ilIi11(Ii1II11il11iIi1l1ll, IIiI11iIl1iIIIiii1l, lllIIlIIil1Iiiil1li) if lllIIlIIil1Iiiil1li then local IIiiiii11il1i1IiIll, iIIIiiI1lIliI1illii = 0, 0 for i11iIli1ll1I1iiIIi1 = IIiI11iIl1iIIIiii1l, lllIIlIIil1Iiiil1li do IIiiiii11il1i1IiIll = IIiiiii11il1i1IiIll + 2 ^ iIIIiiI1lIliI1illii * lIl1i11iiiI11ilIi11(Ii1II11il11iIi1l1ll, i11iIli1ll1I1iiIIi1) iIIIiiI1lIliI1illii = iIIIiiI1lIliI1illii + 1 end return IIiiiii11il1i1IiIll else local lll1ll1iiiIlIiiI1II = 2 ^ (IIiI11iIl1iIIIiii1l - 1) return lll1ll1iiiIlIiiI1II <= Ii1II11il11iIi1l1ll % (lll1ll1iiiIlIiiI1II + lll1ll1iiiIlIiiI1II) and 1 or 0 end end local function lIllIllllIiil1lliilli() local l1i1ili11Iii1iii1ii, liI1llliI11111Ii1Ii = lIl1IiI1lI11ii1Iiliii(), lIl1IiI1lI11ii1Iiliii() if l1i1ili11Iii1iii1ii == 0 and liI1llliI11111Ii1Ii == 0 then return 0 end return (-2 * lIl1i11iiiI11ilIi11(liI1llliI11111Ii1Ii, 32) + 1) * 2 ^ (lIl1i11iiiI11ilIi11(liI1llliI11111Ii1Ii, 21, 31) - 1023) * ((lIl1i11iiiI11ilIi11(liI1llliI11111Ii1Ii, 1, 20) * 4294967296 + l1i1ili11Iii1iii1ii) / 4503599627370496 + 1) end local lIlIII1lI1llIiilll1I1 = bit or bit32 local Iillliii1IllIlliIIl = lIlIII1lI1llIiilll1I1 and lIlIII1lI1llIiilll1I1.bxor or function(l1i1ili11Iii1iii1ii, liI1llliI11111Ii1Ii) local Iiill1i1ll1lI111IiI = 1 local lii1Iii1l1iiI1lil1I = 0 while l1i1ili11Iii1iii1ii > 0 and liI1llliI11111Ii1Ii > 0 do local lIlill1I1I1111ilIiIII = l1i1ili11Iii1iii1ii % 2 local i1iliI1iliilIiIIIlI = liI1llliI11111Ii1Ii % 2 if lIlill1I1I1111ilIiIII ~= i1iliI1iliilIiIIIlI then lii1Iii1l1iiI1lil1I = lii1Iii1l1iiI1lil1I + Iiill1i1ll1lI111IiI end l1i1ili11Iii1iii1ii = (l1i1ili11Iii1iii1ii - lIlill1I1I1111ilIiIII) / 2 liI1llliI11111Ii1Ii = (liI1llliI11111Ii1Ii - i1iliI1iliilIiIIIlI) / 2 Iiill1i1ll1lI111IiI = Iiill1i1ll1lI111IiI * 2 end if l1i1ili11Iii1iii1ii < liI1llliI11111Ii1Ii then l1i1ili11Iii1iii1ii = liI1llliI11111Ii1Ii end while l1i1ili11Iii1iii1ii > 0 do local lIlill1I1I1111ilIiIII = l1i1ili11Iii1iii1ii % 2 if lIlill1I1I1111ilIiIII > 0 then lii1Iii1l1iiI1lil1I = lii1Iii1l1iiI1lil1I + Iiill1i1ll1lI111IiI end l1i1ili11Iii1iii1ii = (l1i1ili11Iii1iii1ii - lIlill1I1I1111ilIiIII) / 2 Iiill1i1ll1lI111IiI = Iiill1i1ll1lI111IiI * 2 end return lii1Iii1l1iiI1lil1I end local function IlI1Il1I1IiliiI1IIi(IiiliilI111liiiiIII) local lIliiiIlIl1I1i1i1i1II = { I111I1IIlilliI1l1il(IlIiilillil1l11IiII, lIll1l1l11i1Il1IIiil1, lIll1l1l11i1Il1IIiil1 + 3) } lIll1l1l11i1Il1IIiil1 = lIll1l1l11i1Il1IIiil1 + 4 local l1i1ili11Iii1iii1ii = Iillliii1IllIlliIIl(lIliiiIlIl1I1i1i1i1II[1], I1i11i1iIiIlI1II1il) local liI1llliI11111Ii1Ii = Iillliii1IllIlliIIl(lIliiiIlIl1I1i1i1i1II[2], I1i11i1iIiIlI1II1il) local lii1Iii1l1iiI1lil1I = Iillliii1IllIlliIIl(lIliiiIlIl1I1i1i1i1II[3], I1i11i1iIiIlI1II1il) local Ili11IillI1l1iI1l11 = Iillliii1IllIlliIIl(lIliiiIlIl1I1i1i1i1II[4], I1i11i1iIiIlI1II1il) I1i11i1iIiIlI1II1il = (53 * I1i11i1iIiIlI1II1il + IiiliilI111liiiiIII) % 256 return Ili11IillI1l1iI1l11 * 16777216 + lii1Iii1l1iiI1lil1I * 65536 + liI1llliI11111Ii1Ii * 256 + l1i1ili11Iii1iii1ii end local function IiilIIiilI1li1lIl1l(lIli1Ill1llIi1I1II11I) local i1illlllIli1IliiIIl = lIl1IiI1lI11ii1Iiliii() local I1IIilIil11illlllli = "" for i11iIli1ll1I1iiIIi1 = lllillIili1iiiIlI1I, i1illlllIli1IliiIIl do I1IIilIil11illlllli = I1IIilIil11illlllli .. l1Ill1iiIIiliiIIIl1(Iillliii1IllIlliIIl(I111I1IIlilliI1l1il(IlIiilillil1l11IiII, lIll1l1l11i1Il1IIiil1 + i11iIli1ll1I1iiIIi1 - 1), Ii1Ii1lIlIIiIIIi11l)) Ii1Ii1lIlIIiIIIi11l = (lIli1Ill1llIi1I1II11I * Ii1Ii1lIlIIiIIIi11l + 125) % 256 end lIll1l1l11i1Il1IIiil1 = lIll1l1l11i1Il1IIiil1 + i1illlllIli1IliiIIl return I1IIilIil11illlllli end Ii1Ii1lIlIIiIIIi11l = lIli11i1iIiillilIiil1() I1i11i1iIiIlI1II1il = lIli11i1iIiillilIiil1() local l1lII1IiiIl1IiI1il1 = {} for i11iIli1ll1I1iiIIi1 = lllillIili1iiiIlI1I, lIli11i1iIiillilIiil1() do local iI1lllIIiIliilI1lil = lIli11i1iIiillilIiil1() local i1111lli1l1liI11il1 = (i11iIli1ll1I1iiIIi1 - 1) * 2 l1lII1IiiIl1IiI1il1[i1111lli1l1liI11il1] = lIl1i11iiiI11ilIi11(iI1lllIIiIliilI1lil, 1, 4) l1lII1IiiIl1IiI1il1[i1111lli1l1liI11il1 + 1] = lIl1i11iiiI11ilIi11(iI1lllIIiIliilI1lil, 5, 8) end local function iII11IliI11llIl1i1I() local lIl11iliiI11I1lllilII = { nil, {}, nil, {}, {}, nil, {} } lIli11i1iIiillilIiil1() local lIl1ii1lii1iiIl1I1IlI = lIl1IiI1lI11ii1Iiliii() for i11iIli1ll1I1iiIIi1 = lllillIili1iiiIlI1I, lIl1ii1lii1iiIl1I1IlI do lIl11iliiI11I1lllilII[5][i11iIli1ll1I1iiIIi1] = lIl1IiI1lI11ii1Iiliii() end lIli11i1iIiillilIiil1() lIli11i1iIiillilIiil1() lIl11iliiI11I1lllilII[3] = lIli11i1iIiillilIiil1() local lIl11IllIii1IiIIlii11 = lIl1IiI1lI11ii1Iiliii() - (#{ 5919, 3110, 2488, 2494, 4968, 6461, 2386, 2096, 70, 2237, 2470, 6815, 4735, 6752, 5495, 3417, 5461, 6787, 1201, 4044 } + II11lI11IIliI11I1ii + 133695) local iili1Illi1lllIlI1iI = lIli11i1iIiillilIiil1() for i11iIli1ll1I1iiIIi1 = lllillIili1iiiIlI1I, lIl11IllIii1IiIIlii11 do local iIIII1IiilI1IiIiIil = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local iI1lllIIiIliilI1lil = IlI1Il1I1IiliiI1IIi(iili1Illi1lllIlI1iI) iIIII1IiilI1IiIiIil[5] = lIl1i11iiiI11ilIi11(iI1lllIIiIliilI1lil, #{ 3969, 3654, 6363, 4262, 2798, 3211, 1162, 1088, 6050, 6377, 6282, 7, 349, 3237, 605, 2191, 1747, 3298, 3747 }, #{ 2249, 1483, 6802, 2843, 1262, 815, 5247, 503, 2099, 4136, 5062, 6913, 5016, 1634, 3576, 476, 4905, 1318, 2344, 920, 6564, 5117, 4901, 6143 } + II11lI11IIliI11I1ii + -33) iIIII1IiilI1IiIiIil[2] = lIl1i11iiiI11ilIi11(iI1lllIIiIliilI1lil, #{4797}, #{ 2938, 2025, 5721, 5775, 6322, 1265, 6941, 5067, 3631 }) iIIII1IiilI1IiIiIil[7] = lIl1i11iiiI11ilIi11(iI1lllIIiIliilI1lil, #{ 2690, 6046, 4831, 5713, 3265, 2490, 4892, 6045, 546, 2953 }, #{ 6230, 2717, 4140, 1142, 5984, 6600, 6579, 2646, 2017, 3338, 4591, 6117, 2089, 1406, 6226, 3861, 5884, 2859 }) iIIII1IiilI1IiIiIil[10] = lIl1i11iiiI11ilIi11(iI1lllIIiIliilI1lil, #{1311}, #{ 6224, 1091, 128, 4223, 113, 6246, 3465, 4271, 3741, 1047, 1815, 5614, 3478, 4950, 6021, 5195, 5952, 5581 }) iIIII1IiilI1IiIiIil[6] = lIl1i11iiiI11ilIi11(iI1lllIIiIliilI1lil, #{ 5793, 6280, 2705, 6031, 3042, 4289, 3727, 6553, 3900, 2055, 3222, 1499, 6736, 3893, 1350, 668, 1123, 240, 3671, 2284, 4728, 3415, 4882, 2672 } + II11lI11IIliI11I1ii + -32, #{ 855, 5028, 2885, 5292, 6084, 6877, 3802, 735, 6333, 1886, 1801, 4707, 496, 3113, 4305, 2180, 1622, 5921, 5948, 6800, 1874, 2937, 6140 } + II11lI11IIliI11I1ii + -26) lIl11iliiI11I1lllilII[7][i11iIli1ll1I1iiIIi1] = iIIII1IiilI1IiIiIil end lIl1IiI1lI11ii1Iiliii() lIl11iliiI11I1lllilII[1] = lIli11i1iIiillilIiil1() lIl1IiI1lI11ii1Iiliii() lIl1IiI1lI11ii1Iiliii() lIl1IiI1lI11ii1Iiliii() lIl11iliiI11I1lllilII[6] = lIli11i1iIiillilIiil1() lIli11i1iIiillilIiil1() lIl1IiI1lI11ii1Iiliii() local lIl1ii1lii1iiIl1I1IlI = lIl1IiI1lI11ii1Iiliii() for i11iIli1ll1I1iiIIi1 = lllillIili1iiiIlI1I, lIl1ii1lii1iiIl1I1IlI do lIl11iliiI11I1lllilII[2][i11iIli1ll1I1iiIIi1 - lllillIili1iiiIlI1I] = iII11IliI11llIl1i1I() end lIl1IiI1lI11ii1Iiliii() lIli11i1iIiillilIiil1() local lIl1ii1lii1iiIl1I1IlI = lIl1IiI1lI11ii1Iiliii() - (#{ 5930, 5128, 6040, 1134, 6491, 5173, 6099, 3758, 5759, 3518, 2245, 6878, 235, 3092, 1605, 59, 4793, 1708, 2591, 3976, 3780 } + II11lI11IIliI11I1ii + 133703) local lIlI1li11il1lIlii1I = lIli11i1iIiillilIiil1() for i11iIli1ll1I1iiIIi1 = lllillIili1iiiIlI1I, lIl1ii1lii1iiIl1I1IlI do local I1lIlI11I1Ii11IIi11 local liii1IlIiIlIli11ll1 = lIli11i1iIiillilIiil1() if liii1IlIiIlIli11ll1 == #{ 3926, 478, 768, 3351, 6841, 4271, 3973, 272, 6519, 6891, 2000, 2443, 4405, 2203, 554, 4471, 5491, 3244, 1658, 4475, 5519 } + II11lI11IIliI11I1ii + 70 then I1lIlI11I1Ii11IIi11 = I1i1ii1iiIiIlII1Ii1(IiilIIiilI1li1lIl1l(lIlI1li11il1lIlii1I), #{ 6371, 943, 6251, 947, 3162, 543 }) end if liii1IlIiIlIli11ll1 == #{ 808, 4330, 3690, 3489, 1586, 3205, 4610, 2829, 5483, 5110, 812, 1694, 2441, 6115, 2005, 5629, 1815, 331, 2027, 363, 191, 203 } + II11lI11IIliI11I1ii + 147 then I1lIlI11I1Ii11IIi11 = lIli11i1iIiillilIiil1() end if liii1IlIiIlIli11ll1 == #{ 5595, 283, 207, 4966, 2116, 2705, 1532, 6399, 4379, 730, 173, 1360, 1191, 6529, 6456, 4865, 4110, 2390, 5118, 1280, 1544 } + II11lI11IIliI11I1ii + 73 then I1lIlI11I1Ii11IIi11 = lIl1IiI1lI11ii1Iiliii() end if liii1IlIiIlIli11ll1 == #{ 5172, 125, 458, 6967, 6417, 3345, 1468, 6229, 3947, 700, 2581, 1948, 4788, 547, 2797, 304, 385, 6853, 1897, 6651 } + II11lI11IIliI11I1ii + 31 then I1lIlI11I1Ii11IIi11 = lIllIllllIiil1lliilli() end if liii1IlIiIlIli11ll1 == #{ 3389, 1482, 1399, 6862, 4329, 783, 4511, 4560, 5403, 2134, 293, 1245, 16, 1378, 5041, 1603, 3776, 1243, 633, 4338, 6635, 595 } + II11lI11IIliI11I1ii + 86 then I1lIlI11I1Ii11IIi11 = lIli11i1iIiillilIiil1() end if liii1IlIiIlIli11ll1 == #{ 2822, 3860, 6021, 323, 1055, 6364, 5842, 6443, 2538, 1117, 6334, 1785, 820, 1297, 6238, 6322, 2746, 3490, 3791, 3833, 4168, 2104 } + II11lI11IIliI11I1ii + -32 then I1lIlI11I1Ii11IIi11 = lIli11i1iIiillilIiil1() + lIl1IiI1lI11ii1Iiliii() + lIllIllllIiil1lliilli() end if liii1IlIiIlIli11ll1 == #{ 3356, 3893, 2567, 5141, 3230, 1261, 2436, 1317, 3900, 4931, 4630, 5232, 301, 5227, 6720, 2312, 562, 1557, 6656 } then I1lIlI11I1Ii11IIi11 = lIl1IiI1lI11ii1Iiliii() end if liii1IlIiIlIli11ll1 == #{ 3337, 3804, 3705, 6690, 13, 503, 5597, 2584, 3959, 281, 5828, 3805, 3819, 5542, 3339, 605, 6526, 6028, 3475, 5288, 958, 1911, 5065, 6395 } + II11lI11IIliI11I1ii + 17 then I1lIlI11I1Ii11IIi11 = #{ 5126, 4899, 6609, 5575, 4131, 384, 4084, 4764, 3457, 458, 3825, 3279, 6803, 2120, 4537, 4388, 6161, 5218, 1948, 6758, 6634, 1353, 2426 } + II11lI11IIliI11I1ii + 1488 == #{ 5126, 4899, 6609, 5575, 4131, 384, 4084, 4764, 3457, 458, 3825, 3279, 6803, 2120, 4537, 4388, 6161, 5218, 1948, 6758, 6634, 1353, 2426 } + II11lI11IIliI11I1ii + 1488 end if liii1IlIiIlIli11ll1 == #{ 6596, 1353, 3425, 3965, 2721, 4038, 2069, 2024, 2397, 3797, 3026, 1309, 2678, 3530, 3679, 1230, 5663, 130, 2286, 4105 } + II11lI11IIliI11I1ii + 21 then I1lIlI11I1Ii11IIi11 = #{ 1455, 4286, 6478, 4514, 5203, 5278, 1127, 2449, 5506, 1944, 1174, 4297, 3882, 3009, 4796, 3034, 6714, 6423, 6931, 398, 6896, 3699 } + II11lI11IIliI11I1ii + 14832 == #{ 4763, 2914, 6591, 3414, 867, 4371, 6121, 710, 2829, 1932, 714, 4625, 6934, 320, 3975, 1242, 1567, 5653, 2246, 3235, 6189, 4233 } + II11lI11IIliI11I1ii + 118711 end lIl11iliiI11I1lllilII[4][i11iIli1ll1I1iiIIi1 - lllillIili1iiiIlI1I] = I1lIlI11I1Ii11IIi11 end for i11iIli1ll1I1iiIIi1 = lllillIili1iiiIlI1I, lIl11IllIii1IiIIlii11 do local iIIII1IiilI1IiIiIil = lIl11iliiI11I1lllilII[7][i11iIli1ll1I1iiIIi1] local lii1lIiIi1IIll11iIi = l1lII1IiiIl1IiI1il1[iIIII1IiilI1IiIiIil[6]] if lii1lIiIi1IIll11iIi == #{ 2647, 1313, 646 } then if iIIII1IiilI1IiIiIil[2] > 255 then iIIII1IiilI1IiIiIil[3] = true iIIII1IiilI1IiIiIil[8] = lIl11iliiI11I1lllilII[4][iIIII1IiilI1IiIiIil[2] - 256] end if iIIII1IiilI1IiIiIil[7] > 255 then iIIII1IiilI1IiIiIil[1] = true iIIII1IiilI1IiIiIil[9] = lIl11iliiI11I1lllilII[4][iIIII1IiilI1IiIiIil[7] - 256] end end if lii1lIiIi1IIll11iIi == #{3844, 4945} and iIIII1IiilI1IiIiIil[7] > 255 then iIIII1IiilI1IiIiIil[1] = true iIIII1IiilI1IiIiIil[9] = lIl11iliiI11I1lllilII[4][iIIII1IiilI1IiIiIil[7] - 256] end if lii1lIiIi1IIll11iIi == #{6460} and iIIII1IiilI1IiIiIil[2] > 255 then iIIII1IiilI1IiIiIil[3] = true iIIII1IiilI1IiIiIil[8] = lIl11iliiI11I1lllilII[4][iIIII1IiilI1IiIiIil[2] - 256] end if lii1lIiIi1IIll11iIi == #{ 3391, 2496, 2461, 1781 } then iIIII1IiilI1IiIiIil[4] = lIl11iliiI11I1lllilII[4][iIIII1IiilI1IiIiIil[10]] end end lIli11i1iIiillilIiil1() return lIl11iliiI11I1lllilII end local function Ii1iI11iIilIi11i11l(lIl11iliiI11I1lllilII, lIlill111l1Iilii1Iii1, I1l1I1illlIIlIllI11) local li111iIiIiiIi111iil, i1il1iIli1liIii1i11 = 8, 17 local lii1iIilil1IlI1lIiI = lIl11iliiI11I1lllilII[7] local lIil1i1lllIIii1iilI = 6 local ili11lIilIlii1liIil = lIl11iliiI11I1lllilII[2] local i11Iil1lII1II1IllII = lIl11iliiI11I1lllilII[1] local liIilll1lII111IiiIi = lIl11iliiI11I1lllilII[3] local iIl1illiI111ili11I1 = 6 local iilIIiIIl1l11Iil1ll = lIl11iliiI11I1lllilII[5] local IlIlli1ilII1l111l1l = 2 local function lllii1IliIIlI1l1IlI(...) local lIl1lllI1iIlli1I1lIlI = 0 local i111ii1iiillIli1ii1 = { I1I1II1lil11I1iilll({}, 1, liIilll1lII111IiiIi) } local iilI1iIlIl1iilII1Ii = 1 local l1IiliiI1li1l1lIIii = {} local ilII1IIiIl11lI1liiI = {} local lIlill111l1Iilii1Iii1 = lIliI1IllllI11l1iI1() local lIlI11lI1iI11i111i11l = { ... } local i1ilill1iiIl1ilIlIl = #lIlI11lI1iI11i111i11l - 1 for i11iIli1ll1I1iiIIi1 = 0, i1ilill1iiIl1ilIlIl do if i11iIli1ll1I1iiIIi1 < i11Iil1lII1II1IllII then i111ii1iiillIli1ii1[i11iIli1ll1I1iiIIi1] = lIlI11lI1iI11i111i11l[i11iIli1ll1I1iiIIi1 + 1] end end local function I1Iiilliil1IllIIii1(...) local lii1Iii1l1iiI1lil1I = liI1IiIllllllliI1I1("#", ...) local liIii1iiiIIlI11III1 = { ... } return lii1Iii1l1iiI1lil1I, liIii1iiiIIlI11III1 end local function lIl1I1I1iIIlIllil1i1l() while true do local Ii1lI1lllIlillilIII = lii1iIilil1IlI1lIiI[iilI1iIlIl1iilII1Ii] local llI1ll1iIl1iIi1IIl1 = Ii1lI1lllIlillilIII[6] iilI1iIlIl1iilII1Ii = iilI1iIlIl1iilII1Ii + 1 if llI1ll1iIl1iIi1IIl1 < 10 then if llI1ll1iIl1iIi1IIl1 < 5 then if llI1ll1iIl1iIi1IIl1 >= 2 then if llI1ll1iIl1iIi1IIl1 < 3 then l1IiliiI1li1l1lIIii[i111ii1iiillIli1ii1] = nil local iI1ll1ilIlIlI1iIlll = Ii1lI1lllIlillilIII[5] local llIiIiiiIIl1IiIilIl = Ii1lI1lllIlillilIII[2] if llIiIiiiIIl1IiIilIl == 1 then return true end local II1l1liII11llll11il = iI1ll1ilIlIlI1iIlll + llIiIiiiIIl1IiIilIl - 2 if llIiIiiiIIl1IiIilIl == 0 then II1l1liII11llll11il = lIl1lllI1iIlli1I1lIlI end return true, iI1ll1ilIlIlI1iIlll, II1l1liII11llll11il elseif llI1ll1iIl1iIi1IIl1 ~= 4 then local iI1ll1ilIlIlI1iIlll = Ii1lI1lllIlillilIII[5] local lIlI11lI1iI11i111i11l = Ii1lI1lllIlillilIII[2] local lIl111liI11iiIl111I1i = Ii1lI1lllIlillilIII[7] local iIlIl1ll1lilIlIlI11, II1l1liII11llll11il, lIl1I1I1iIIlIllil1i1l if lIlI11lI1iI11i111i11l ~= 1 then if lIlI11lI1iI11i111i11l ~= 0 then II1l1liII11llll11il = iI1ll1ilIlIlI1iIlll + lIlI11lI1iI11i111i11l - 1 else II1l1liII11llll11il = lIl1lllI1iIlli1I1lIlI end II1l1liII11llll11il, iIlIl1ll1lilIlIlI11 = I1Iiilliil1IllIIii1(i111ii1iiillIli1ii1[iI1ll1ilIlIlI1iIlll](I1I1II1lil11I1iilll(i111ii1iiillIli1ii1, iI1ll1ilIlIlI1iIlll + 1, II1l1liII11llll11il))) else II1l1liII11llll11il, iIlIl1ll1lilIlIlI11 = I1Iiilliil1IllIIii1(i111ii1iiillIli1ii1[iI1ll1ilIlIlI1iIlll]()) end if lIl111liI11iiIl111I1i ~= 1 then if lIl111liI11iiIl111I1i ~= 0 then II1l1liII11llll11il = iI1ll1ilIlIlI1iIlll + lIl111liI11iiIl111I1i - 2 lIl1lllI1iIlli1I1lIlI = II1l1liII11llll11il + 1 else II1l1liII11llll11il = II1l1liII11llll11il + iI1ll1ilIlIlI1iIlll - 1 lIl1lllI1iIlli1I1lIlI = II1l1liII11llll11il end lIl1I1I1iIIlIllil1i1l = 0 for i11iIli1ll1I1iiIIi1 = iI1ll1ilIlIlI1iIlll, II1l1liII11llll11il do lIl1I1I1iIIlIllil1i1l = lIl1I1I1iIIlIllil1i1l + 1 i111ii1iiillIli1ii1[i11iIli1ll1I1iiIIi1] = iIlIl1ll1lilIlIlI11[lIl1I1I1iIIlIllil1i1l] end else lIl1lllI1iIlli1I1lIlI = iI1ll1ilIlIlI1iIlll - 1 end for i11iIli1ll1I1iiIIi1 = lIl1lllI1iIlli1I1lIlI + 1, liIilll1lII111IiiIi do i111ii1iiillIli1ii1[i11iIli1ll1I1iiIIi1] = nil end else local i1l1Iilll1IllllI1ii = i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[2]] local lii1Iii1l1iiI1lil1I if Ii1lI1lllIlillilIII[1] then lii1Iii1l1iiI1lil1I = Ii1lI1lllIlillilIII[9] else lii1Iii1l1iiI1lil1I = i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[7]] end i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[5] + 1] = i1l1Iilll1IllllI1ii i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[5]] = i1l1Iilll1IllllI1ii[lii1Iii1l1iiI1lil1I] end elseif llI1ll1iIl1iIi1IIl1 ~= 1 then if Ii1lI1lllIlillilIII[7] == 114 then iilI1iIlIl1iilII1Ii = iilI1iIlIl1iilII1Ii - 1 lii1iIilil1IlI1lIiI[iilI1iIlIl1iilII1Ii] = { [6] = 11, [5] = (Ii1lI1lllIlillilIII[5] - 244) % 256, [2] = (Ii1lI1lllIlillilIII[2] - 244) % 256 } else i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[5]] = #i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[2]] end elseif Ii1lI1lllIlillilIII[7] == 59 then iilI1iIlIl1iilII1Ii = iilI1iIlIl1iilII1Ii - 1 lii1iIilil1IlI1lIiI[iilI1iIlIl1iilII1Ii] = { [6] = 17, [5] = (Ii1lI1lllIlillilIII[5] - 204) % 256, [2] = (Ii1lI1lllIlillilIII[2] - 204) % 256 } else for i11iIli1ll1I1iiIIi1 = Ii1lI1lllIlillilIII[5], Ii1lI1lllIlillilIII[2] do i111ii1iiillIli1ii1[i11iIli1ll1I1iiIIi1] = nil end end elseif llI1ll1iIl1iIi1IIl1 < 7 then if llI1ll1iIl1iIi1IIl1 ~= 6 then lIlill111l1Iilii1Iii1[Ii1lI1lllIlillilIII[4]] = i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[5]] else local lIllIlllIIii11IlI1il1 = ili11lIilIlii1liIil[Ii1lI1lllIlillilIII[10]] local lli1lilI1iiliillII1 = {} if lIllIlllIIii11IlI1il1[lIil1i1lllIIii1iilI] > 0 then do local IliiIllllI1i1l1IlIl = {} lli1lilI1iiliillII1 = Il1i111lIiiiiI1lll1({}, { __index = function(liIii1iiiIIlI11III1, Iilii1i1iIi1l1iIIil) local Ii1I1ilIIiIllIiiIlI = IliiIllllI1i1l1IlIl[Iilii1i1iIi1l1iIIil] return Ii1I1ilIIiIllIiiIlI[1][Ii1I1ilIIiIllIiiIlI[2]] end, __newindex = function(liIii1iiiIIlI11III1, Iilii1i1iIi1l1iIIil, I111111il1I1ili1iIi) local Ii1I1ilIIiIllIiiIlI = IliiIllllI1i1l1IlIl[Iilii1i1iIi1l1iIIil] Ii1I1ilIIiIllIiiIlI[1][Ii1I1ilIIiIllIiiIlI[2]] = I111111il1I1ili1iIi end }) for i11iIli1ll1I1iiIIi1 = 1, lIllIlllIIii11IlI1il1[lIil1i1lllIIii1iilI] do local ii1ll1IIi1iiIi11l1I = lii1iIilil1IlI1lIiI[iilI1iIlIl1iilII1Ii] if ii1ll1IIi1iiIi11l1I[iIl1illiI111ili11I1] == li111iIiIiiIi111iil then IliiIllllI1i1l1IlIl[i11iIli1ll1I1iiIIi1 - 1] = { i111ii1iiillIli1ii1, ii1ll1IIi1iiIi11l1I[IlIlli1ilII1l111l1l] } elseif ii1ll1IIi1iiIi11l1I[iIl1illiI111ili11I1] == i1il1iIli1liIii1i11 then IliiIllllI1i1l1IlIl[i11iIli1ll1I1iiIIi1 - 1] = { I1l1I1illlIIlIllI11, ii1ll1IIi1iiIi11l1I[IlIlli1ilII1l111l1l] } end iilI1iIlIl1iilII1Ii = iilI1iIlIl1iilII1Ii + 1 end if not l1IiliiI1li1l1lIIii[i111ii1iiillIli1ii1] then l1IiliiI1li1l1lIIii[i111ii1iiillIli1ii1] = {IliiIllllI1i1l1IlIl} else lIl1iIiiIl1liiill1iil(l1IiliiI1li1l1lIIii[i111ii1iiillIli1ii1], IliiIllllI1i1l1IlIl) end end end local lIll1iIlillI1I1lIlIiI = Ii1iI11iIilIi11i11l(lIllIlllIIii11IlI1il1, lIlill111l1Iilii1Iii1, lli1lilI1iiliillII1) i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[5]] = lIll1iIlillI1I1lIlIiI end elseif llI1ll1iIl1iIi1IIl1 >= 8 then if llI1ll1iIl1iIi1IIl1 == 9 then i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[5]] = Ii1lI1lllIlillilIII[2] ~= 0 if Ii1lI1lllIlillilIII[7] ~= 0 then iilI1iIlIl1iilII1Ii = iilI1iIlIl1iilII1Ii + 1 end else i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[5]] = i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[2]] end else local liI1llliI11111Ii1Ii, lii1Iii1l1iiI1lil1I if Ii1lI1lllIlillilIII[3] then liI1llliI11111Ii1Ii = Ii1lI1lllIlillilIII[8] else liI1llliI11111Ii1Ii = i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[2]] end if Ii1lI1lllIlillilIII[1] then lii1Iii1l1iiI1lil1I = Ii1lI1lllIlillilIII[9] else lii1Iii1l1iiI1lil1I = i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[7]] end if liI1llliI11111Ii1Ii == lii1Iii1l1iiI1lil1I ~= (Ii1lI1lllIlillilIII[5] ~= 0) then iilI1iIlIl1iilII1Ii = iilI1iIlIl1iilII1Ii + 1 end end elseif llI1ll1iIl1iIi1IIl1 >= 15 then if llI1ll1iIl1iIi1IIl1 < 17 then if llI1ll1iIl1iIi1IIl1 == 16 then if Ii1lI1lllIlillilIII[7] == 144 then iilI1iIlIl1iilII1Ii = iilI1iIlIl1iilII1Ii - 1 lii1iIilil1IlI1lIiI[iilI1iIlIl1iilII1Ii] = { [6] = 2, [5] = (Ii1lI1lllIlillilIII[5] - 234) % 256, [2] = (Ii1lI1lllIlillilIII[2] - 234) % 256 } else i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[5]] = not i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[2]] end else local lIllIliiII1li1iI1IlII = i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[2]] for i11iIli1ll1I1iiIIi1 = Ii1lI1lllIlillilIII[2] + 1, Ii1lI1lllIlillilIII[7] do lIllIliiII1li1iI1IlII = lIllIliiII1li1iI1IlII .. i111ii1iiillIli1ii1[i11iIli1ll1I1iiIIi1] end i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[5]] = lIllIliiII1li1iI1IlII end elseif llI1ll1iIl1iIi1IIl1 < 18 then i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[5]] = I1l1I1illlIIlIllI11[Ii1lI1lllIlillilIII[2]] elseif llI1ll1iIl1iIi1IIl1 ~= 19 then iilI1iIlIl1iilII1Ii = iilI1iIlIl1iilII1Ii + (Ii1lI1lllIlillilIII[10] - IIlI111ililiIi1lIlI) else local liI1llliI11111Ii1Ii, lii1Iii1l1iiI1lil1I if Ii1lI1lllIlillilIII[3] then liI1llliI11111Ii1Ii = Ii1lI1lllIlillilIII[8] else liI1llliI11111Ii1Ii = i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[2]] end if Ii1lI1lllIlillilIII[1] then lii1Iii1l1iiI1lil1I = Ii1lI1lllIlillilIII[9] else lii1Iii1l1iiI1lil1I = i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[7]] end i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[5]][liI1llliI11111Ii1Ii] = lii1Iii1l1iiI1lil1I end elseif llI1ll1iIl1iIi1IIl1 >= 12 then if llI1ll1iIl1iIi1IIl1 >= 13 then if llI1ll1iIl1iIi1IIl1 == 14 then local lii1Iii1l1iiI1lil1I if Ii1lI1lllIlillilIII[1] then lii1Iii1l1iiI1lil1I = Ii1lI1lllIlillilIII[9] else lii1Iii1l1iiI1lil1I = i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[7]] end i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[5]] = i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[2]][lii1Iii1l1iiI1lil1I] else i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[5]] = Ii1lI1lllIlillilIII[4] end else i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[5]] = lIlill111l1Iilii1Iii1[Ii1lI1lllIlillilIII[4]] end elseif llI1ll1iIl1iIi1IIl1 == 11 then I1l1I1illlIIlIllI11[Ii1lI1lllIlillilIII[2]] = i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[5]] else i111ii1iiillIli1ii1[Ii1lI1lllIlillilIII[5]] = { I1I1II1lil11I1iilll(i1i1Ii1II1Ii1Iii1ii, 1, Ii1lI1lllIlillilIII[2] == 0 and 255 or Ii1lI1lllIlillilIII[2]) } end end end local l1I1iilii11Iiiiii1i, I1IIilIil11illlllli, llIii11llIliii1IIi1, lil1l11Iiil1lI1liIi = lIlIiilIlIi11IIi1I1i1(lIl1I1I1iIIlIllil1i1l) if l1I1iilii11Iiiiii1i then if llIii11llIliii1IIi1 then return I1I1II1lil11I1iilll(i111ii1iiillIli1ii1, llIii11llIliii1IIi1, lil1l11Iiil1lI1liIi) end else liIi1IIIi1II1IiillI("Luraph Script:" .. (iilIIiIIl1l11Iil1ll[iilI1iIlIl1iilII1Ii - 1] or "") .. ": " .. liIl1lIiIiI1lliiIll(I1IIilIil11illlllli), 0) end end IIliII1liI1IiI1llll(lllii1IliIIlI1l1IlI, lIlill111l1Iilii1Iii1) return lllii1IliIIlI1l1IlI end local ll1Ii1lIl1iIi1I1ili = iII11IliI11llIl1i1I() return Ii1iI11iIilIi11i11l(ll1Ii1lIl1iIi1I1ili, lIlill111l1Iilii1Iii1)() end ill1IiiilI1I1ilillIliI1IllllI11l1iI1()) 
