local iIIil11IIilliIiliII = assert local ll1IIIIi1IIlll1I1li = select local IIIli11IIIIil111iI1 = tonumber local I1Iii1i1Iiii1lIIllI = unpack local iiiIIiIlll11II1lIii = pcall local Ii1l1ll1lill11I11l1 = setfenv local lII1liII1ll111I11Ii = setmetatable local lIlii11Ilil1Ii1lii11l = type local lIl1IIiii1lii11l1Ii1l = getfenv local Il11i11IIi1iiiIlI1I = tostring local lIlI1i1I1l1iiliili1ii = error local i1iI11I1lii1II1lili = string.sub local lIl1liIi1il1il1II1iii = string.byte local IiII1Ii1III1I11lI11 = string.char local liiIiiiIli1Iil1iiII = string.rep local IIli1Iii1iliI1I111l = string.gsub local IiiiliiiiilIill1IiI = string.match local Il1lII1lllllli1I1Il = table.insert local ii11IiIlII1lIl1I11I = lIl1liIi1il1il1II1iii("G", 1) local Il11l1i1IiIi1l1II1l, I1iiIIli1lliI1iIi1l = #{3048}, #{ 220, 2340, 784, 4576, 6606, 928, 5288, 6567, 685, 2888, 3725, 4620, 1732, 3595, 6341, 6346, 4936, 4713, 3876, 4477, 6597 } + ii11IiIlII1lIl1I11I + 130979 local l1IlIIilli1ilii11Il = {} local iIIIIiIiIIIIlI1llI1 = 1 local lIlI1lI1iI1lliililllI, lIliIii11111li1II1lII local function IililiIiil1iIllIiiI(ii11iiI1lilIi1IiIiI, liliilIlllIlI1IlI1l) local ii1I1lIlli1III1IIIi ii11iiI1lilIi1IiIiI = IIli1Iii1iliI1I111l(i1iI11I1lii1II1lili(ii11iiI1lilIi1IiIiI, 5), "..", function(i1I11ill1l1llI1iiiI) if lIl1liIi1il1il1II1iii(i1I11ill1l1llI1iiiI, 2) == 72 then ii1I1lIlli1III1IIIi = IIIli11IIIIil111iI1(i1iI11I1lii1II1lili(i1I11ill1l1llI1iiiI, 1, 1)) return "" else local ll1il11Ii1lllillilI = IiII1Ii1III1I11lI11(IIIli11IIIIil111iI1(i1I11ill1l1llI1iiiI, 16)) if ii1I1lIlli1III1IIIi then local IlilIl1liIiIlI1i1l1 = liiIiiiIli1Iil1iiII(ll1il11Ii1lllillilI, ii1I1lIlli1III1IIIi) ii1I1lIlli1III1IIIi = nil return IlilIl1liIiIlI1i1l1 else return ll1il11Ii1lllillilI end end end) local function lIlI1IiIIIiillII11Il1() local ii111iIlil1iIlllIi1 = lIl1liIi1il1il1II1iii(ii11iiI1lilIi1IiIiI, iIIIIiIiIIIIlI1llI1, iIIIIiIiIIIIlI1llI1) iIIIIiIiIIIIlI1llI1 = iIIIIiIiIIIIlI1llI1 + 1 return ii111iIlil1iIlllIi1 end local function liI11i11lIii1lI1ii1() local ii111iIlil1iIlllIi1, ll1il11Ii1lllillilI, IlilIl1liIiIlI1i1l1, lIllIllllIIllii1Ii11I = lIl1liIi1il1il1II1iii(ii11iiI1lilIi1IiIiI, iIIIIiIiIIIIlI1llI1, iIIIIiIiIIIIlI1llI1 + 3) iIIIIiIiIIIIlI1llI1 = iIIIIiIiIIIIlI1llI1 + 4 return lIllIllllIIllii1Ii11I * 16777216 + IlilIl1liIiIlI1i1l1 * 65536 + ll1il11Ii1lllillilI * 256 + ii111iIlil1iIlllIi1 end local function lllIi1II11ilIIl11Il(iiI1ll11IIIii1l1ll1, iI1II1IiIII11i1i1ii, lIliiiI111l1iI1i11ilI) if lIliiiI111l1iI1i11ilI then local Iiiil11iiI1llillili, Ill1llliIil1l11I1il = 0, 0 for i1lI1iIlll1llI1llli = iI1II1IiIII11i1i1ii, lIliiiI111l1iI1i11ilI do Iiiil11iiI1llillili = Iiiil11iiI1llillili + 2 ^ Ill1llliIil1l11I1il * lllIi1II11ilIIl11Il(iiI1ll11IIIii1l1ll1, i1lI1iIlll1llI1llli) Ill1llliIil1l11I1il = Ill1llliIil1l11I1il + 1 end return Iiiil11iiI1llillili else local l111ilIlIlliIiIliIl = 2 ^ (iI1II1IiIII11i1i1ii - 1) return l111ilIlIlliIiIliIl <= iiI1ll11IIIii1l1ll1 % (l111ilIlIlliIiIliIl + l111ilIlIlliIiIliIl) and 1 or 0 end end local function lIllI1l1111llI1lili1l() local ii111iIlil1iIlllIi1, ll1il11Ii1lllillilI = liI11i11lIii1lI1ii1(), liI11i11lIii1lI1ii1() if ii111iIlil1iIlllIi1 == 0 and ll1il11Ii1lllillilI == 0 then return 0 end return (-2 * lllIi1II11ilIIl11Il(ll1il11Ii1lllillilI, 32) + 1) * 2 ^ (lllIi1II11ilIIl11Il(ll1il11Ii1lllillilI, 21, 31) - 1023) * ((lllIi1II11ilIIl11Il(ll1il11Ii1lllillilI, 1, 20) * 4294967296 + ii111iIlil1iIlllIi1) / 4503599627370496 + 1) end local IiII1li1IlI1l1ll1iI = bit or bit32 local iiIi1IliliIIIlI11II = IiII1li1IlI1l1ll1iI and IiII1li1IlI1l1ll1iI.bxor or function(ii111iIlil1iIlllIi1, ll1il11Ii1lllillilI) local lIlI11II11li11l1Ii1il = 1 local IlilIl1liIiIlI1i1l1 = 0 while ii111iIlil1iIlllIi1 > 0 and ll1il11Ii1lllillilI > 0 do local lIl1llI1iII1lIlilIilI = ii111iIlil1iIlllIi1 % 2 local lii11l1111II1Ii1iIi = ll1il11Ii1lllillilI % 2 if lIl1llI1iII1lIlilIilI ~= lii11l1111II1Ii1iIi then IlilIl1liIiIlI1i1l1 = IlilIl1liIiIlI1i1l1 + lIlI11II11li11l1Ii1il end ii111iIlil1iIlllIi1 = (ii111iIlil1iIlllIi1 - lIl1llI1iII1lIlilIilI) / 2 ll1il11Ii1lllillilI = (ll1il11Ii1lllillilI - lii11l1111II1Ii1iIi) / 2 lIlI11II11li11l1Ii1il = lIlI11II11li11l1Ii1il * 2 end if ii111iIlil1iIlllIi1 < ll1il11Ii1lllillilI then ii111iIlil1iIlllIi1 = ll1il11Ii1lllillilI end while ii111iIlil1iIlllIi1 > 0 do local lIl1llI1iII1lIlilIilI = ii111iIlil1iIlllIi1 % 2 if lIl1llI1iII1lIlilIilI > 0 then IlilIl1liIiIlI1i1l1 = IlilIl1liIiIlI1i1l1 + lIlI11II11li11l1Ii1il end ii111iIlil1iIlllIi1 = (ii111iIlil1iIlllIi1 - lIl1llI1iII1lIlilIilI) / 2 lIlI11II11li11l1Ii1il = lIlI11II11li11l1Ii1il * 2 end return IlilIl1liIiIlI1i1l1 end local function lIIIIIIillIllii1lil(IIIillIlI1i1il1ii1I) local ii1l11lIiI11iIl1IIi = { lIl1liIi1il1il1II1iii(ii11iiI1lilIi1IiIiI, iIIIIiIiIIIIlI1llI1, iIIIIiIiIIIIlI1llI1 + 3) } iIIIIiIiIIIIlI1llI1 = iIIIIiIiIIIIlI1llI1 + 4 local ii111iIlil1iIlllIi1 = iiIi1IliliIIIlI11II(ii1l11lIiI11iIl1IIi[1], lIliIii11111li1II1lII) local ll1il11Ii1lllillilI = iiIi1IliliIIIlI11II(ii1l11lIiI11iIl1IIi[2], lIliIii11111li1II1lII) local IlilIl1liIiIlI1i1l1 = iiIi1IliliIIIlI11II(ii1l11lIiI11iIl1IIi[3], lIliIii11111li1II1lII) local lIllIllllIIllii1Ii11I = iiIi1IliliIIIlI11II(ii1l11lIiI11iIl1IIi[4], lIliIii11111li1II1lII) lIliIii11111li1II1lII = (197 * lIliIii11111li1II1lII + IIIillIlI1i1il1ii1I) % 256 return lIllIllllIIllii1Ii11I * 16777216 + IlilIl1liIiIlI1i1l1 * 65536 + ll1il11Ii1lllillilI * 256 + ii111iIlil1iIlllIi1 end local function iIllIllllilili1lIiI(iliiIiIlIli1IlIl1ii) local lIlII1ilIii11llI1I11i = liI11i11lIii1lI1ii1() local iii111I1iiIiil111ii = "" for i1lI1iIlll1llI1llli = Il11l1i1IiIi1l1II1l, lIlII1ilIii11llI1I11i do iii111I1iiIiil111ii = iii111I1iiIiil111ii .. IiII1Ii1III1I11lI11(iiIi1IliliIIIlI11II(lIl1liIi1il1il1II1iii(ii11iiI1lilIi1IiIiI, iIIIIiIiIIIIlI1llI1 + i1lI1iIlll1llI1llli - 1), lIlI1lI1iI1lliililllI)) lIlI1lI1iI1lliililllI = (iliiIiIlIli1IlIl1ii * lIlI1lI1iI1lliililllI + 135) % 256 end iIIIIiIiIIIIlI1llI1 = iIIIIiIiIIIIlI1llI1 + lIlII1ilIii11llI1I11i return iii111I1iiIiil111ii end lIlI1lI1iI1lliililllI = lIlI1IiIIIiillII11Il1() lIliIii11111li1II1lII = lIlI1IiIIIiillII11Il1() local lIllI1lIIIIIllil1l1 = {} for i1lI1iIlll1llI1llli = Il11l1i1IiIi1l1II1l, lIlI1IiIIIiillII11Il1() do local I1Ii1i1lIlIi1i1IiIl = lIlI1IiIIIiillII11Il1() local IIiI1iIlIIlI1i1llIi = (i1lI1iIlll1llI1llli - 1) * 2 lIllI1lIIIIIllil1l1[IIiI1iIlIIlI1i1llIi] = lllIi1II11ilIIl11Il(I1Ii1i1lIlIi1i1IiIl, 1, 4) lIllI1lIIIIIllil1l1[IIiI1iIlIIlI1i1llIi + 1] = lllIi1II11ilIIl11Il(I1Ii1i1lIlIi1i1IiIl, 5, 8) end local function lIlIlIil1iil1lliIlIl1() local III1IiiIIlillIllIil = { {}, {}, nil, {}, nil, nil, {} } liI11i11lIii1lI1ii1() local IIIiIIIlllIIlIlIll1 = liI11i11lIii1lI1ii1() - (#{ 4326, 3923, 2832, 1356, 2822, 6325, 6107, 6494, 2173, 3582, 2421, 521, 1034, 2828, 321, 95, 2851, 205, 2434, 1820, 2434 } + ii11IiIlII1lIl1I11I + 133698) local lIlI1iiI1l11iili1I1 = lIlI1IiIIIiillII11Il1() for i1lI1iIlll1llI1llli = Il11l1i1IiIi1l1II1l, IIIiIIIlllIIlIlIll1 do local IIlI1lllIll1lliI1Il local lIlii11Ilil1Ii1lii11l = lIlI1IiIIIiillII11Il1() if lIlii11Ilil1Ii1lii11l == #{ 5413, 2997, 4983, 2005, 4721, 6361, 5203, 305, 859, 140, 4092, 5498, 4624, 1578, 4055, 4748, 4232, 3603, 97, 6549, 745, 478, 1411 } + ii11IiIlII1lIl1I11I + 144 then IIlI1lllIll1lliI1Il = lIllI1l1111llI1lili1l() + lIllI1l1111llI1lili1l() end if lIlii11Ilil1Ii1lii11l == #{ 5285, 5691, 5398, 3707, 3924, 3825, 2976, 3870, 3287, 6893, 1277, 2574, 1336, 3310, 907, 5754, 3183, 6518, 5674, 1712, 5404, 5402, 225, 340 } + ii11IiIlII1lIl1I11I + 124 then IIlI1lllIll1lliI1Il = lIllI1l1111llI1lili1l() end if lIlii11Ilil1Ii1lii11l == #{ 2348, 1275, 4845, 58, 6157, 2863, 1387, 785, 1977, 525, 5887, 3094, 6775, 6934, 747, 1735, 1620, 1074, 885, 3973, 1239 } + ii11IiIlII1lIl1I11I + -62 then IIlI1lllIll1lliI1Il = #{ 912, 1600, 1630, 3470, 627, 4071, 2730, 3430, 4382, 4824, 6671, 5306, 5974, 5781, 5390, 4169, 6825, 5325, 1821, 3531 } + ii11IiIlII1lIl1I11I + 11346 == #{ 912, 1600, 1630, 3470, 627, 4071, 2730, 3430, 4382, 4824, 6671, 5306, 5974, 5781, 5390, 4169, 6825, 5325, 1821, 3531 } + ii11IiIlII1lIl1I11I + 11346 end if lIlii11Ilil1Ii1lii11l == #{ 1721, 4447, 6765, 3704, 32, 6660, 464, 5796, 3592, 2105, 5347, 5939, 3412, 5609, 359, 6675, 989, 1414, 748, 3364, 2342 } + ii11IiIlII1lIl1I11I + 159 then IIlI1lllIll1lliI1Il = i1iI11I1lii1II1lili(iIllIllllilili1lIiI(lIlI1iiI1l11iili1I1), #{ 3974, 2835, 2641, 6609 }) end if lIlii11Ilil1Ii1lii11l == #{ 3443, 1539, 1230, 1574, 1790, 6080, 3193, 771, 4360, 480, 5171, 1826, 1130, 988, 6148, 6657, 3963, 1036, 935, 3148, 5146, 5576, 5129 } + ii11IiIlII1lIl1I11I + 26 then IIlI1lllIll1lliI1Il = i1iI11I1lii1II1lili(iIllIllllilili1lIiI(lIlI1iiI1l11iili1I1), #{ 3181, 3558, 1785, 1256, 2287 }) end if lIlii11Ilil1Ii1lii11l == #{ 2947, 3775, 705, 2579 } then IIlI1lllIll1lliI1Il = i1iI11I1lii1II1lili(iIllIllllilili1lIiI(#{ 1932, 3174, 1088, 1795, 6720, 5400, 4385, 2611, 694, 3478, 2713, 409, 3473, 551, 3567, 4364, 3089, 1593, 5807, 1075, 6565, 2761 } + ii11IiIlII1lIl1I11I + 27), #{ 4900, 2902, 5818, 2993, 2214 }) end if lIlii11Ilil1Ii1lii11l == #{ 3115, 5227, 4815, 6235, 5766, 887, 5590, 3383, 6090, 5965, 6956, 1402, 4568, 1411, 4493, 4394, 866, 1490, 2925, 5881 } + ii11IiIlII1lIl1I11I + 91 then IIlI1lllIll1lliI1Il = #{ 43, 1873, 5639, 3228, 461, 5841, 6862, 712, 4351, 2629, 1720, 889, 6485, 4911, 3215, 6771, 6843, 4802, 1168, 3764 } + ii11IiIlII1lIl1I11I + 127316 == #{ 4990, 1579, 1090, 2609, 1101, 889, 3466, 4260, 3798, 2018, 2901, 5451, 6715, 2403, 118, 4116, 1810, 4744, 5201, 6810 } + ii11IiIlII1lIl1I11I + 62410 end if lIlii11Ilil1Ii1lii11l == #{ 4005, 6962, 321, 6652, 2170, 2633, 1299, 2436, 6454, 2192, 414, 5570, 90, 4744, 6259, 4431, 4918, 3681, 3322, 6686 } + ii11IiIlII1lIl1I11I + 139 then IIlI1lllIll1lliI1Il = i1iI11I1lii1II1lili(iIllIllllilili1lIiI(lIlI1iiI1l11iili1I1), #{ 3181, 3558, 1785, 1256, 2287 }) end if lIlii11Ilil1Ii1lii11l == #{ 1448, 3511, 1861, 3668, 3070, 6009, 627, 636, 4087, 3266, 3780, 2036, 1375, 499, 795, 404, 2574, 6187, 5194, 462, 2991, 5468, 5941 } + ii11IiIlII1lIl1I11I + 95 then IIlI1lllIll1lliI1Il = i1iI11I1lii1II1lili(iIllIllllilili1lIiI(#{ 1932, 3174, 1088, 1795, 6720, 5400, 4385, 2611, 694, 3478, 2713, 409, 3473, 551, 3567, 4364, 3089, 1593, 5807, 1075, 6565, 2761 } + ii11IiIlII1lIl1I11I + 27), #{ 4900, 2902, 5818, 2993, 2214 }) end III1IiiIIlillIllIil[4][i1lI1iIlll1llI1llli - Il11l1i1IiIi1l1II1l] = IIlI1lllIll1lliI1Il end local lIllIi1iiI11llIil1li1 = liI11i11lIii1lI1ii1() - (#{ 3326, 4026, 6719, 5548, 4196, 5551, 3059, 1911, 4049, 1820, 5961, 4746, 4290, 676, 6730, 2611, 6843, 4800, 6567, 6794, 4077, 5748, 5327, 2896 } + ii11IiIlII1lIl1I11I + 133671) local lIli11lliil11lilIiIi1 = lIlI1IiIIIiillII11Il1() for i1lI1iIlll1llI1llli = Il11l1i1IiIi1l1II1l, lIllIi1iiI11llIil1li1 do local lIliiI1lliliiIilII1iI = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local I1Ii1i1lIlIi1i1IiIl = lIIIIIIillIllii1lil(lIli11lliil11lilIiIi1) lIliiI1lliliiIilII1iI[9] = lllIi1II11ilIIl11Il(I1Ii1i1lIlIi1i1IiIl, #{ 2232, 4259, 2412, 6392, 1572, 1235, 3415, 4290, 6433, 4646, 6901, 1696, 4301, 6880, 6953, 4400, 4433, 2573, 5742 }, #{ 2861, 5996, 1124, 3165, 5266, 4422, 1802, 1945, 2421, 302, 6660, 2686, 1833, 2559, 3360, 3683, 3013, 777, 5519, 2063, 1736, 4179, 6639, 3580 } + ii11IiIlII1lIl1I11I + -69) lIliiI1lliliiIilII1iI[6] = lllIi1II11ilIIl11Il(I1Ii1i1lIlIi1i1IiIl, #{ 1608, 3301, 6864, 933, 5538, 6104, 1918, 1888, 5846, 2531 }, #{ 117, 838, 971, 6701, 6161, 1188, 685, 5234, 6237, 2386, 1729, 2255, 5637, 4047, 6518, 3744, 5245, 1688 }) lIliiI1lliliiIilII1iI[7] = lllIi1II11ilIIl11Il(I1Ii1i1lIlIi1i1IiIl, #{ 4380, 6583, 3048, 6801, 1648, 1834, 4548, 5722, 4018, 510, 839, 6768, 673, 3205, 2248, 4597, 5953, 768, 1375, 3126, 2946, 2666, 2989 } + ii11IiIlII1lIl1I11I + -67, #{ 4300, 2488, 2761, 78, 6404, 1922, 4320, 3085, 5585, 6417, 4896, 6706, 1420, 4940, 6888, 4605, 4597, 2296, 4995, 6561, 3546, 6605 } + ii11IiIlII1lIl1I11I + -61) lIliiI1lliliiIilII1iI[5] = lllIi1II11ilIIl11Il(I1Ii1i1lIlIi1i1IiIl, #{2404}, #{ 208, 281, 672, 676, 2589, 1400, 3542, 17, 4546 }) lIliiI1lliliiIilII1iI[10] = lllIi1II11ilIIl11Il(I1Ii1i1lIlIi1i1IiIl, #{4384}, #{ 3949, 1582, 5931, 1869, 6002, 3947, 2959, 4080, 387, 6658, 1076, 1631, 4670, 2193, 3926, 3401, 5383, 6738 }) III1IiiIIlillIllIil[7][i1lI1iIlll1llI1llli] = lIliiI1lliliiIilII1iI end for i1lI1iIlll1llI1llli = Il11l1i1IiIi1l1II1l, lIllIi1iiI11llIil1li1 do local lIliiI1lliliiIilII1iI = III1IiiIIlillIllIil[7][i1lI1iIlll1llI1llli] local i111IIII11IilIIll11 = lIllI1lIIIIIllil1l1[lIliiI1lliliiIilII1iI[7]] if i111IIII11IilIIll11 == #{ 5585, 4323, 6939 } then if lIliiI1lliliiIilII1iI[5] > 255 then lIliiI1lliliiIilII1iI[2] = true lIliiI1lliliiIilII1iI[8] = III1IiiIIlillIllIil[4][lIliiI1lliliiIilII1iI[5] - 256] end if lIliiI1lliliiIilII1iI[6] > 255 then lIliiI1lliliiIilII1iI[3] = true lIliiI1lliliiIilII1iI[4] = III1IiiIIlillIllIil[4][lIliiI1lliliiIilII1iI[6] - 256] end end if i111IIII11IilIIll11 == #{4863} and lIliiI1lliliiIilII1iI[5] > 255 then lIliiI1lliliiIilII1iI[2] = true lIliiI1lliliiIilII1iI[8] = III1IiiIIlillIllIil[4][lIliiI1lliliiIilII1iI[5] - 256] end if i111IIII11IilIIll11 == #{ 3605, 351, 3386, 2914 } then lIliiI1lliliiIilII1iI[1] = III1IiiIIlillIllIil[4][lIliiI1lliliiIilII1iI[10]] end if i111IIII11IilIIll11 == #{4375, 5762} and lIliiI1lliliiIilII1iI[6] > 255 then lIliiI1lliliiIilII1iI[3] = true lIliiI1lliliiIilII1iI[4] = III1IiiIIlillIllIil[4][lIliiI1lliliiIilII1iI[6] - 256] end end lIlI1IiIIIiillII11Il1() lIlI1IiIIIiillII11Il1() liI11i11lIii1lI1ii1() liI11i11lIii1lI1ii1() lIlI1IiIIIiillII11Il1() lIlI1IiIIIiillII11Il1() III1IiiIIlillIllIil[6] = lIlI1IiIIIiillII11Il1() liI11i11lIii1lI1ii1() lIlI1IiIIIiillII11Il1() III1IiiIIlillIllIil[5] = lIlI1IiIIIiillII11Il1() lIlI1IiIIIiillII11Il1() liI11i11lIii1lI1ii1() liI11i11lIii1lI1ii1() liI11i11lIii1lI1ii1() local IIIiIIIlllIIlIlIll1 = liI11i11lIii1lI1ii1() for i1lI1iIlll1llI1llli = Il11l1i1IiIi1l1II1l, IIIiIIIlllIIlIlIll1 do III1IiiIIlillIllIil[2][i1lI1iIlll1llI1llli - Il11l1i1IiIi1l1II1l] = lIlIlIil1iil1lliIlIl1() end local IIIiIIIlllIIlIlIll1 = liI11i11lIii1lI1ii1() for i1lI1iIlll1llI1llli = Il11l1i1IiIi1l1II1l, IIIiIIIlllIIlIlIll1 do III1IiiIIlillIllIil[1][i1lI1iIlll1llI1llli] = liI11i11lIii1lI1ii1() end lIlI1IiIIIiillII11Il1() III1IiiIIlillIllIil[3] = lIlI1IiIIIiillII11Il1() return III1IiiIIlillIllIil end local function IlllIlI1iIilli1iiii(III1IiiIIlillIllIil, liliilIlllIlI1IlI1l, lIlilil1iililllIIII1I) local Iii1llIiIIIiIll1lli, I1Illi11I1ll1lIii1i = 18, 2 local lIlIliiI1liIIll1111ii = III1IiiIIlillIllIil[7] local iIiI1I111lli11iiilI = 6 local Illiil1I1lI11IIII1i = III1IiiIIlillIllIil[2] local i1lIl1li11llilIl1I1 = III1IiiIIlillIllIil[3] local lilIlIIllIIil1I1iII = III1IiiIIlillIllIil[5] local lIll1i1I1iIIiIIl1i1lI = 7 local I1iiI1llI11Ii11illl = III1IiiIIlillIllIil[1] local iI1Iil1i1IiiiiiIiIi = 5 local function lIlIlI1IIlIi1I1ill111(...) local IilIi1i11ii1lIllIIi = 0 local I1IIIIiIIil11l11lli = { I1Iii1i1Iiii1lIIllI({}, 1, lilIlIIllIIil1I1iII) } local iiiiIiIl1iliIl1i1Ii = 1 local lI1ii1IIi1llllIiIIi = {} local liilii1ll1l11l1IIIi = {} local liliilIlllIlI1IlI1l = lIl1IIiii1lii11l1Ii1l() local llI1i1ill1lII1i1lll = { ... } local iiiI1ii111IIlliIliI = #llI1i1ill1lII1i1lll - 1 for i1lI1iIlll1llI1llli = 0, iiiI1ii111IIlliIliI do if i1lI1iIlll1llI1llli < i1lIl1li11llilIl1I1 then I1IIIIiIIil11l11lli[i1lI1iIlll1llI1llli] = llI1i1ill1lII1i1lll[i1lI1iIlll1llI1llli + 1] end end local function l1lIl11lll111iiIili(...) local IlilIl1liIiIlI1i1l1 = ll1IIIIi1IIlll1I1li("#", ...) local IiIIlIiil11i111iIll = { ... } return IlilIl1liIiIlI1i1l1, IiIIlIiil11i111iIll end local function Iilii1liIIlll1l111i() while true do local lIl1l11l11IIllilIiIII = lIlIliiI1liIIll1111ii[iiiiIiIl1iliIl1i1Ii] local i1iiiI1ii1lliliIIlI = lIl1l11l11IIllilIiIII[7] iiiiIiIl1iliIl1i1Ii = iiiiIiIl1iliIl1i1Ii + 1 if i1iiiI1ii1lliliIIlI < 12 then if i1iiiI1ii1lliliIIlI < 6 then if i1iiiI1ii1lliliIIlI < 3 then if i1iiiI1ii1lliliIIlI >= 1 then if i1iiiI1ii1lliliIIlI ~= 2 then lI1ii1IIi1llllIiIIi[I1IIIIiIIil11l11lli] = nil local lIlliII1lIIiilllIiill = lIl1l11l11IIllilIiIII[9] local liiIiIlII11lI1llIi1 = lIl1l11l11IIllilIiIII[5] if liiIiIlII11lI1llIi1 == 1 then return true end local lIllIlI1lli1liI11llI1 = lIlliII1lIIiilllIiill + liiIiIlII11lI1llIi1 - 2 if liiIiIlII11lI1llIi1 == 0 then lIllIlI1lli1liI11llI1 = IilIi1i11ii1lIllIIi end return true, lIlliII1lIIiilllIiill, lIllIlI1lli1liI11llI1 elseif lIl1l11l11IIllilIiIII[6] == 23 then iiiiIiIl1iliIl1i1Ii = iiiiIiIl1iliIl1i1Ii - 1 lIlIliiI1liIIll1111ii[iiiiIiIl1iliIl1i1Ii] = { [7] = 18, [9] = (lIl1l11l11IIllilIiIII[9] - 214) % 256, [5] = (lIl1l11l11IIllilIiIII[5] - 214) % 256 } else I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[9]] = lIlilil1iililllIIII1I[lIl1l11l11IIllilIiIII[5]] end elseif lIl1l11l11IIllilIiIII[6] == 177 then iiiiIiIl1iliIl1i1Ii = iiiiIiIl1iliIl1i1Ii - 1 lIlIliiI1liIIll1111ii[iiiiIiIl1iliIl1i1Ii] = { [7] = 10, [9] = (lIl1l11l11IIllilIiIII[9] - 155) % 256, [5] = (lIl1l11l11IIllilIiIII[5] - 155) % 256 } elseif lIl1l11l11IIllilIiIII[6] == 221 then iiiiIiIl1iliIl1i1Ii = iiiiIiIl1iliIl1i1Ii - 1 lIlIliiI1liIIll1111ii[iiiiIiIl1iliIl1i1Ii] = { [7] = 15, [9] = (lIl1l11l11IIllilIiIII[9] - 243) % 256, [6] = (lIl1l11l11IIllilIiIII[5] - 243) % 256 } else local lIlliII1lIIiilllIiill = lIl1l11l11IIllilIiIII[9] local IIIiIIIlllIIlIlIll1 = lIl1l11l11IIllilIiIII[5] local illi1IilIl1iIIiiIIi = IIIiIIIlllIIlIlIll1 > 0 and IIIiIIIlllIIlIlIll1 - 1 or iiiI1ii111IIlliIliI - i1lIl1li11llilIl1I1 if illi1IilIl1iIIiiIIi < 0 then illi1IilIl1iIIiiIIi = -1 end for i1lI1iIlll1llI1llli = lIlliII1lIIiilllIiill, lIlliII1lIIiilllIiill + illi1IilIl1iIIiiIIi do I1IIIIiIIil11l11lli[i1lI1iIlll1llI1llli] = llI1i1ill1lII1i1lll[i1lIl1li11llilIl1I1 + (i1lI1iIlll1llI1llli - lIlliII1lIIiilllIiill) + 1] end if IIIiIIIlllIIlIlIll1 == 0 then IilIi1i11ii1lIllIIi = lIlliII1lIIiilllIiill + illi1IilIl1iIIiiIIi for i1lI1iIlll1llI1llli = IilIi1i11ii1lIllIIi + 1, lilIlIIllIIil1I1iII do I1IIIIiIIil11l11lli[i1lI1iIlll1llI1llli] = nil end end end elseif i1iiiI1ii1lliliIIlI < 4 then local ll1il11Ii1lllillilI, IlilIl1liIiIlI1i1l1 if lIl1l11l11IIllilIiIII[2] then ll1il11Ii1lllillilI = lIl1l11l11IIllilIiIII[8] else ll1il11Ii1lllillilI = I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[5]] end if lIl1l11l11IIllilIiIII[3] then IlilIl1liIiIlI1i1l1 = lIl1l11l11IIllilIiIII[4] else IlilIl1liIiIlI1i1l1 = I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[6]] end if ll1il11Ii1lllillilI == IlilIl1liIiIlI1i1l1 ~= (lIl1l11l11IIllilIiIII[9] ~= 0) then iiiiIiIl1iliIl1i1Ii = iiiiIiIl1iliIl1i1Ii + 1 end elseif i1iiiI1ii1lliliIIlI ~= 5 then if lIl1l11l11IIllilIiIII[6] == 18 then iiiiIiIl1iliIl1i1Ii = iiiiIiIl1iliIl1i1Ii - 1 lIlIliiI1liIIll1111ii[iiiiIiIl1iliIl1i1Ii] = { [7] = 23, [9] = (lIl1l11l11IIllilIiIII[9] - 160) % 256, [6] = (lIl1l11l11IIllilIiIII[5] - 160) % 256 } else for i1lI1iIlll1llI1llli = lIl1l11l11IIllilIiIII[9], lIl1l11l11IIllilIiIII[5] do I1IIIIiIIil11l11lli[i1lI1iIlll1llI1llli] = nil end end else liliilIlllIlI1IlI1l[lIl1l11l11IIllilIiIII[1]] = I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[9]] end elseif i1iiiI1ii1lliliIIlI < 9 then if i1iiiI1ii1lliliIIlI >= 7 then if i1iiiI1ii1lliliIIlI ~= 8 then local iliIl1liI11iIlIiIll = I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[5]] local IlilIl1liIiIlI1i1l1 if lIl1l11l11IIllilIiIII[3] then IlilIl1liIiIlI1i1l1 = lIl1l11l11IIllilIiIII[4] else IlilIl1liIiIlI1i1l1 = I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[6]] end I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[9] + 1] = iliIl1liI11iIlIiIll I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[9]] = iliIl1liI11iIlIiIll[IlilIl1liIiIlI1i1l1] else I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[9]] = { I1Iii1i1Iiii1lIIllI(l1IlIIilli1ilii11Il, 1, lIl1l11l11IIllilIiIII[5] == 0 and 255 or lIl1l11l11IIllilIiIII[5]) } end else iiiiIiIl1iliIl1i1Ii = iiiiIiIl1iliIl1i1Ii + (lIl1l11l11IIllilIiIII[10] - I1iiIIli1lliI1iIi1l) end elseif i1iiiI1ii1lliliIIlI >= 10 then if i1iiiI1ii1lliliIIlI == 11 then I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[9]] = lIl1l11l11IIllilIiIII[1] elseif lIl1l11l11IIllilIiIII[6] == 168 then iiiiIiIl1iliIl1i1Ii = iiiiIiIl1iliIl1i1Ii - 1 lIlIliiI1liIIll1111ii[iiiiIiIl1iliIl1i1Ii] = { [7] = 2, [9] = (lIl1l11l11IIllilIiIII[9] - 157) % 256, [5] = (lIl1l11l11IIllilIiIII[5] - 157) % 256 } else lIlilil1iililllIIII1I[lIl1l11l11IIllilIiIII[5]] = I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[9]] end else local IlilIl1liIiIlI1i1l1 if lIl1l11l11IIllilIiIII[3] then IlilIl1liIiIlI1i1l1 = lIl1l11l11IIllilIiIII[4] else IlilIl1liIiIlI1i1l1 = I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[6]] end I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[9]] = I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[5]][IlilIl1liIiIlI1i1l1] end elseif i1iiiI1ii1lliliIIlI < 18 then if i1iiiI1ii1lliliIIlI >= 15 then if i1iiiI1ii1lliliIIlI >= 16 then if i1iiiI1ii1lliliIIlI == 17 then local ll1il11Ii1lllillilI, IlilIl1liIiIlI1i1l1 if lIl1l11l11IIllilIiIII[2] then ll1il11Ii1lllillilI = lIl1l11l11IIllilIiIII[8] else ll1il11Ii1lllillilI = I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[5]] end if lIl1l11l11IIllilIiIII[3] then IlilIl1liIiIlI1i1l1 = lIl1l11l11IIllilIiIII[4] else IlilIl1liIiIlI1i1l1 = I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[6]] end I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[9]] = ll1il11Ii1lllillilI + IlilIl1liIiIlI1i1l1 else local lIlliII1lIIiilllIiill = lIl1l11l11IIllilIiIII[9] local llI1i1ill1lII1i1lll = lIl1l11l11IIllilIiIII[5] local IiIlIi1ll1IlllII1Ii = lIl1l11l11IIllilIiIII[6] local lIiI1lllI1li1ii1iI1, lIllIlI1lli1liI11llI1, Iilii1liIIlll1l111i if llI1i1ill1lII1i1lll ~= 1 then if llI1i1ill1lII1i1lll ~= 0 then lIllIlI1lli1liI11llI1 = lIlliII1lIIiilllIiill + llI1i1ill1lII1i1lll - 1 else lIllIlI1lli1liI11llI1 = IilIi1i11ii1lIllIIi end lIllIlI1lli1liI11llI1, lIiI1lllI1li1ii1iI1 = l1lIl11lll111iiIili(I1IIIIiIIil11l11lli[lIlliII1lIIiilllIiill](I1Iii1i1Iiii1lIIllI(I1IIIIiIIil11l11lli, lIlliII1lIIiilllIiill + 1, lIllIlI1lli1liI11llI1))) else lIllIlI1lli1liI11llI1, lIiI1lllI1li1ii1iI1 = l1lIl11lll111iiIili(I1IIIIiIIil11l11lli[lIlliII1lIIiilllIiill]()) end if IiIlIi1ll1IlllII1Ii ~= 1 then if IiIlIi1ll1IlllII1Ii ~= 0 then lIllIlI1lli1liI11llI1 = lIlliII1lIIiilllIiill + IiIlIi1ll1IlllII1Ii - 2 IilIi1i11ii1lIllIIi = lIllIlI1lli1liI11llI1 + 1 else lIllIlI1lli1liI11llI1 = lIllIlI1lli1liI11llI1 + lIlliII1lIIiilllIiill - 1 IilIi1i11ii1lIllIIi = lIllIlI1lli1liI11llI1 end Iilii1liIIlll1l111i = 0 for i1lI1iIlll1llI1llli = lIlliII1lIIiilllIiill, lIllIlI1lli1liI11llI1 do Iilii1liIIlll1l111i = Iilii1liIIlll1l111i + 1 I1IIIIiIIil11l11lli[i1lI1iIlll1llI1llli] = lIiI1lllI1li1ii1iI1[Iilii1liIIlll1l111i] end else IilIi1i11ii1lIllIIi = lIlliII1lIIiilllIiill - 1 end for i1lI1iIlll1llI1llli = IilIi1i11ii1lIllIIi + 1, lilIlIIllIIil1I1iII do I1IIIIiIIil11l11lli[i1lI1iIlll1llI1llli] = nil end end elseif not not I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[9]] == (lIl1l11l11IIllilIiIII[6] == 0) then iiiiIiIl1iliIl1i1Ii = iiiiIiIl1iliIl1i1Ii + 1 end elseif i1iiiI1ii1lliliIIlI >= 13 then if i1iiiI1ii1lliliIIlI == 14 then I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[9]] = lIl1l11l11IIllilIiIII[5] ~= 0 if lIl1l11l11IIllilIiIII[6] ~= 0 then iiiiIiIl1iliIl1i1Ii = iiiiIiIl1iliIl1i1Ii + 1 end else local ll1il11Ii1lllillilI, IlilIl1liIiIlI1i1l1 if lIl1l11l11IIllilIiIII[2] then ll1il11Ii1lllillilI = lIl1l11l11IIllilIiIII[8] else ll1il11Ii1lllillilI = I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[5]] end if lIl1l11l11IIllilIiIII[3] then IlilIl1liIiIlI1i1l1 = lIl1l11l11IIllilIiIII[4] else IlilIl1liIiIlI1i1l1 = I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[6]] end if ll1il11Ii1lllillilI < IlilIl1liIiIlI1i1l1 ~= (lIl1l11l11IIllilIiIII[9] ~= 0) then iiiiIiIl1iliIl1i1Ii = iiiiIiIl1iliIl1i1Ii + 1 end end else local i1Il11l111IIllIIi1l = I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[5]] for i1lI1iIlll1llI1llli = lIl1l11l11IIllilIiIII[5] + 1, lIl1l11l11IIllilIiIII[6] do i1Il11l111IIllIIi1l = i1Il11l111IIllIIi1l .. I1IIIIiIIil11l11lli[i1lI1iIlll1llI1llli] end I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[9]] = i1Il11l111IIllIIi1l end elseif i1iiiI1ii1lliliIIlI < 21 then if i1iiiI1ii1lliliIIlI >= 19 then if i1iiiI1ii1lliliIIlI == 20 then I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[9]] = liliilIlllIlI1IlI1l[lIl1l11l11IIllilIiIII[1]] else local ll1il11Ii1lllillilI, IlilIl1liIiIlI1i1l1 if lIl1l11l11IIllilIiIII[2] then ll1il11Ii1lllillilI = lIl1l11l11IIllilIiIII[8] else ll1il11Ii1lllillilI = I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[5]] end if lIl1l11l11IIllilIiIII[3] then IlilIl1liIiIlI1i1l1 = lIl1l11l11IIllilIiIII[4] else IlilIl1liIiIlI1i1l1 = I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[6]] end I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[9]][ll1il11Ii1lllillilI] = IlilIl1liIiIlI1i1l1 end elseif lIl1l11l11IIllilIiIII[6] == 86 then iiiiIiIl1iliIl1i1Ii = iiiiIiIl1iliIl1i1Ii - 1 lIlIliiI1liIIll1111ii[iiiiIiIl1iliIl1i1Ii] = { [7] = 1, [9] = (lIl1l11l11IIllilIiIII[9] - 70) % 256, [5] = (lIl1l11l11IIllilIiIII[5] - 70) % 256 } else I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[9]] = I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[5]] end elseif i1iiiI1ii1lliliIIlI < 22 then local ll1il11Ii1lllillilI, IlilIl1liIiIlI1i1l1 if lIl1l11l11IIllilIiIII[2] then ll1il11Ii1lllillilI = lIl1l11l11IIllilIiIII[8] else ll1il11Ii1lllillilI = I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[5]] end if lIl1l11l11IIllilIiIII[3] then IlilIl1liIiIlI1i1l1 = lIl1l11l11IIllilIiIII[4] else IlilIl1liIiIlI1i1l1 = I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[6]] end I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[9]] = ll1il11Ii1lllillilI - IlilIl1liIiIlI1i1l1 elseif i1iiiI1ii1lliliIIlI == 23 then local lIlliII1lIIiilllIiill = lIl1l11l11IIllilIiIII[9] local IIiI1iIlIIlI1i1llIi = lIlliII1lIIiilllIiill + 2 local i1Il11l111IIllIIi1l = { I1IIIIiIIil11l11lli[lIlliII1lIIiilllIiill](I1IIIIiIIil11l11lli[lIlliII1lIIiilllIiill + 1], I1IIIIiIIil11l11lli[lIlliII1lIIiilllIiill + 2]) } for i1lI1iIlll1llI1llli = 1, lIl1l11l11IIllilIiIII[6] do I1IIIIiIIil11l11lli[IIiI1iIlIIlI1i1llIi + i1lI1iIlll1llI1llli] = i1Il11l111IIllIIi1l[i1lI1iIlll1llI1llli] end if I1IIIIiIIil11l11lli[lIlliII1lIIiilllIiill + 3] ~= nil then I1IIIIiIIil11l11lli[lIlliII1lIIiilllIiill + 2] = I1IIIIiIIil11l11lli[lIlliII1lIIiilllIiill + 3] else iiiiIiIl1iliIl1i1Ii = iiiiIiIl1iliIl1i1Ii + 1 end else local lIli1lili1iIIlI111Ill = Illiil1I1lI11IIII1i[lIl1l11l11IIllilIiIII[10]] local l1i11il1iI1liIIlIil = {} if lIli1lili1iIIlI111Ill[iIiI1I111lli11iiilI] > 0 then do local lI11lIiI1Illl1I1liI = {} l1i11il1iI1liIIlIil = lII1liII1ll111I11Ii({}, { __index = function(IiIIlIiil11i111iIll, I11IiIlIl1IIli1i1Ii) local IiIi1lliI1ilIlliiii = lI11lIiI1Illl1I1liI[I11IiIlIl1IIli1i1Ii] return IiIi1lliI1ilIlliiii[1][IiIi1lliI1ilIlliiii[2]] end, __newindex = function(IiIIlIiil11i111iIll, I11IiIlIl1IIli1i1Ii, iIIiiiI11ll1l11llII) local IiIi1lliI1ilIlliiii = lI11lIiI1Illl1I1liI[I11IiIlIl1IIli1i1Ii] IiIi1lliI1ilIlliiii[1][IiIi1lliI1ilIlliiii[2]] = iIIiiiI11ll1l11llII end }) for i1lI1iIlll1llI1llli = 1, lIli1lili1iIIlI111Ill[iIiI1I111lli11iiilI] do local IllI1IIlIiillIil1ii = lIlIliiI1liIIll1111ii[iiiiIiIl1iliIl1i1Ii] if IllI1IIlIiillIil1ii[lIll1i1I1iIIiIIl1i1lI] == Iii1llIiIIIiIll1lli then lI11lIiI1Illl1I1liI[i1lI1iIlll1llI1llli - 1] = { I1IIIIiIIil11l11lli, IllI1IIlIiillIil1ii[iI1Iil1i1IiiiiiIiIi] } elseif IllI1IIlIiillIil1ii[lIll1i1I1iIIiIIl1i1lI] == I1Illi11I1ll1lIii1i then lI11lIiI1Illl1I1liI[i1lI1iIlll1llI1llli - 1] = { lIlilil1iililllIIII1I, IllI1IIlIiillIil1ii[iI1Iil1i1IiiiiiIiIi] } end iiiiIiIl1iliIl1i1Ii = iiiiIiIl1iliIl1i1Ii + 1 end if not lI1ii1IIi1llllIiIIi[I1IIIIiIIil11l11lli] then lI1ii1IIi1llllIiIIi[I1IIIIiIIil11l11lli] = {lI11lIiI1Illl1I1liI} else Il1lII1lllllli1I1Il(lI1ii1IIi1llllIiIIi[I1IIIIiIIil11l11lli], lI11lIiI1Illl1I1liI) end end end local lIliilIlillillII11il1 = IlllIlI1iIilli1iiii(lIli1lili1iIIlI111Ill, liliilIlllIlI1IlI1l, l1i11il1iI1liIIlIil) I1IIIIiIIil11l11lli[lIl1l11l11IIllilIiIII[9]] = lIliilIlillillII11il1 end end end local lIlIlIi1liiIlIiIIIIiI, iii111I1iiIiil111ii, lIli1i1IiI1lli11iI1ii, lIll1lI1lil1Iii1Il1 = iiiIIiIlll11II1lIii(Iilii1liIIlll1l111i) if lIlIlIi1liiIlIiIIIIiI then if lIli1i1IiI1lli11iI1ii then return I1Iii1i1Iiii1lIIllI(I1IIIIiIIil11l11lli, lIli1i1IiI1lli11iI1ii, lIll1lI1lil1Iii1Il1) end else lIlI1i1I1l1iiliili1ii("Luraph Script:" .. (I1iiI1llI11Ii11illl[iiiiIiIl1iliIl1i1Ii - 1] or "") .. ": " .. Il11i11IIi1iiiIlI1I(iii111I1iiIiil111ii), 0) end end Ii1l1ll1lill11I11l1(lIlIlI1IIlIi1I1ill111, liliilIlllIlI1IlI1l) return lIlIlI1IIlIi1I1ill111 end local Il1iliiIIi1lIIiIl1I = lIlIlIil1iil1lliIlIl1() return IlllIlI1iIilli1iiii(Il1iliiIIi1lIIiIl1I, liliilIlllIlI1IlI1l)() end IililiIiil1iIllIiilIl1IIiii1lii11l1Ii1l()) 
